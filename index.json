{
  "api/Microsoft.DocAsCode.Dfm.IDfmFencesBlockPathQueryOption.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.IDfmFencesBlockPathQueryOption.html",
    "title": "Interface IDfmFencesBlockPathQueryOption | DocFX website",
    "keywords": "Interface IDfmFencesBlockPathQueryOption Namespace : Microsoft.DocAsCode.Dfm Assembly : Microsoft.DocAsCode.Dfm.dll Syntax public interface IDfmFencesBlockPathQueryOption Properties | Improve this Doc View Source DedentLength Declaration int? DedentLength { get; set; } Property Value Type Description Nullable < Int32 > | Improve this Doc View Source ErrorMessage Declaration string ErrorMessage { get; } Property Value Type Description String | Improve this Doc View Source HighlightLines Declaration string HighlightLines { get; set; } Property Value Type Description String Methods | Improve this Doc View Source GetQueryLines(String[]) Declaration [Obsolete(\"merged into GetQueryLines(string[], DfmFencesToken)\", true)] IEnumerable<string> GetQueryLines(string[] lines) Parameters Type Name Description String [] lines Returns Type Description IEnumerable < String > | Improve this Doc View Source GetQueryLines(String[], DfmFencesToken) Declaration IEnumerable<string> GetQueryLines(string[] lines, DfmFencesToken token) Parameters Type Name Description String [] lines DfmFencesToken token Returns Type Description IEnumerable < String > | Improve this Doc View Source ValidateAndPrepare(String[], DfmFencesToken) Declaration [Obsolete(\"merged into GetQueryLines(string[], DfmFencesToken)\", true)] bool ValidateAndPrepare(string[] lines, DfmFencesToken token) Parameters Type Name Description String [] lines DfmFencesToken token Returns Type Description Boolean | Improve this Doc View Source ValidateHighlightLinesAndDedentLength(Int32) Declaration [Obsolete(\"merged into GetQueryLines(string[], DfmFencesToken)\", true)] bool ValidateHighlightLinesAndDedentLength(int totalLines) Parameters Type Name Description Int32 totalLines Returns Type Description Boolean (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.IDfmEngineCustomizer.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.IDfmEngineCustomizer.html",
    "title": "Interface IDfmEngineCustomizer | DocFX website",
    "keywords": "Interface IDfmEngineCustomizer Namespace : Microsoft.DocAsCode.Dfm Assembly : Microsoft.DocAsCode.Dfm.dll Syntax public interface IDfmEngineCustomizer Methods | Improve this Doc View Source Customize(DfmEngineBuilder, IReadOnlyDictionary<String, Object>) Customize the DfmEngineBuilder . Declaration void Customize(DfmEngineBuilder builder, IReadOnlyDictionary<string, object> parameters) Parameters Type Name Description DfmEngineBuilder builder The instance of DfmEngineBuilder to customize. IReadOnlyDictionary < String , Object > parameters The markdown engine parameters. (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.IDfmCustomizedRendererPartProvider.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.IDfmCustomizedRendererPartProvider.html",
    "title": "Interface IDfmCustomizedRendererPartProvider | DocFX website",
    "keywords": "Interface IDfmCustomizedRendererPartProvider Namespace : Microsoft.DocAsCode.Dfm Assembly : Microsoft.DocAsCode.Dfm.dll Syntax public interface IDfmCustomizedRendererPartProvider Methods | Improve this Doc View Source CreateParts(IReadOnlyDictionary<String, Object>) Declaration IEnumerable<IDfmCustomizedRendererPart> CreateParts(IReadOnlyDictionary<string, object> parameters) Parameters Type Name Description IReadOnlyDictionary < String , Object > parameters Returns Type Description IEnumerable < IDfmCustomizedRendererPart > (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.IDfmCustomizedRendererPart.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.IDfmCustomizedRendererPart.html",
    "title": "Interface IDfmCustomizedRendererPart | DocFX website",
    "keywords": "Interface IDfmCustomizedRendererPart Namespace : Microsoft.DocAsCode.Dfm Assembly : Microsoft.DocAsCode.Dfm.dll Syntax public interface IDfmCustomizedRendererPart Properties | Improve this Doc View Source MarkdownContextType Declaration Type MarkdownContextType { get; } Property Value Type Description Type | Improve this Doc View Source MarkdownRendererType Declaration Type MarkdownRendererType { get; } Property Value Type Description Type | Improve this Doc View Source MarkdownTokenType Declaration Type MarkdownTokenType { get; } Property Value Type Description Type | Improve this Doc View Source Name Declaration string Name { get; } Property Value Type Description String Methods | Improve this Doc View Source Match(IMarkdownRenderer, IMarkdownToken, IMarkdownContext) Declaration bool Match(IMarkdownRenderer renderer, IMarkdownToken token, IMarkdownContext context) Parameters Type Name Description IMarkdownRenderer renderer IMarkdownToken token IMarkdownContext context Returns Type Description Boolean | Improve this Doc View Source Render(IMarkdownRenderer, IMarkdownToken, IMarkdownContext) Declaration StringBuffer Render(IMarkdownRenderer renderer, IMarkdownToken token, IMarkdownContext context) Parameters Type Name Description IMarkdownRenderer renderer IMarkdownToken token IMarkdownContext context Returns Type Description StringBuffer (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.IDfmBlockSpecialSplitToken.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.IDfmBlockSpecialSplitToken.html",
    "title": "Interface IDfmBlockSpecialSplitToken | DocFX website",
    "keywords": "Interface IDfmBlockSpecialSplitToken Namespace : Microsoft.DocAsCode.Dfm Assembly : Microsoft.DocAsCode.Dfm.dll Syntax public interface IDfmBlockSpecialSplitToken (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.ICodeSnippetExtractor.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.ICodeSnippetExtractor.html",
    "title": "Interface ICodeSnippetExtractor | DocFX website",
    "keywords": "Interface ICodeSnippetExtractor Namespace : Microsoft.DocAsCode.Dfm Assembly : Microsoft.DocAsCode.Dfm.dll Syntax public interface ICodeSnippetExtractor Methods | Improve this Doc View Source GetAll(String[]) Declaration Dictionary<string, DfmTagNameResolveResult> GetAll(string[] lines) Parameters Type Name Description String [] lines Returns Type Description Dictionary < String , DfmTagNameResolveResult > (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.HeadingIdAggregator.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.HeadingIdAggregator.html",
    "title": "Class HeadingIdAggregator | DocFX website",
    "keywords": "Class HeadingIdAggregator Inheritance Object HeadingIdAggregator Namespace : Microsoft.DocAsCode.Dfm Assembly : Microsoft.DocAsCode.Dfm.dll Syntax public class HeadingIdAggregator : MarkdownTokenAggregator<MarkdownHeadingBlockToken> Methods | Improve this Doc View Source AggregateCore(MarkdownHeadingBlockToken, IMarkdownTokenAggregateContext) Declaration protected override bool AggregateCore(MarkdownHeadingBlockToken headToken, IMarkdownTokenAggregateContext context) Parameters Type Name Description MarkdownHeadingBlockToken headToken IMarkdownTokenAggregateContext context Returns Type Description Boolean (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.FullFileBlockPathQueryOptionCreator.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.FullFileBlockPathQueryOptionCreator.html",
    "title": "Class FullFileBlockPathQueryOptionCreator | DocFX website",
    "keywords": "Class FullFileBlockPathQueryOptionCreator Inheritance Object FullFileBlockPathQueryOptionCreator Implements IDfmFencesBlockPathQueryOptionCreator Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Dfm Assembly : Microsoft.DocAsCode.Dfm.dll Syntax public class FullFileBlockPathQueryOptionCreator : IDfmFencesBlockPathQueryOptionCreator Methods | Improve this Doc View Source ParseQueryOrFragment(DfmFencesBlockPathQueryOptionParameters, Boolean) Declaration public IDfmFencesBlockPathQueryOption ParseQueryOrFragment(DfmFencesBlockPathQueryOptionParameters parameters, bool noCache = false) Parameters Type Name Description DfmFencesBlockPathQueryOptionParameters parameters Boolean noCache Returns Type Description IDfmFencesBlockPathQueryOption Implements IDfmFencesBlockPathQueryOptionCreator (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.FullFileBlockPathQueryOption.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.FullFileBlockPathQueryOption.html",
    "title": "Class FullFileBlockPathQueryOption | DocFX website",
    "keywords": "Class FullFileBlockPathQueryOption Inheritance Object DfmFencesBlockPathQueryOption FullFileBlockPathQueryOption Implements IDfmFencesBlockPathQueryOption Inherited Members DfmFencesBlockPathQueryOption.HighlightLines DfmFencesBlockPathQueryOption.DedentLength DfmFencesBlockPathQueryOption.ErrorMessage DfmFencesBlockPathQueryOption.GetQueryLines(String[]) DfmFencesBlockPathQueryOption.ValidateAndPrepare(String[], DfmFencesToken) DfmFencesBlockPathQueryOption.IDfmFencesBlockPathQueryOption.ValidateHighlightLinesAndDedentLength(Int32) DfmFencesBlockPathQueryOption.ProcessIncludedLines(List<String>, DfmFencesToken) DfmFencesBlockPathQueryOption.ValidateHighlightLinesAndDedentLength(Int32) DfmFencesBlockPathQueryOption.CheckLineRange(Int32, Nullable<Int32>, Nullable<Int32>, Boolean) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Dfm Assembly : Microsoft.DocAsCode.Dfm.dll Syntax public class FullFileBlockPathQueryOption : DfmFencesBlockPathQueryOption, IDfmFencesBlockPathQueryOption Methods | Improve this Doc View Source GetQueryLines(String[], DfmFencesToken) Declaration public override IEnumerable<string> GetQueryLines(string[] lines, DfmFencesToken token) Parameters Type Name Description String [] lines DfmFencesToken token Returns Type Description IEnumerable < String > Overrides DfmFencesBlockPathQueryOption.GetQueryLines(String[], DfmFencesToken) Implements IDfmFencesBlockPathQueryOption (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.FlatNameCodeSnippetExtractor.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.FlatNameCodeSnippetExtractor.html",
    "title": "Class FlatNameCodeSnippetExtractor | DocFX website",
    "keywords": "Class FlatNameCodeSnippetExtractor Flat name extrator works for snippet name exists in both start and end line representations E.g., comment representation needs snippet name exists in both start and end line comment Inheritance Object CodeSnippetRegexExtractor FlatNameCodeSnippetExtractor Implements ICodeSnippetExtractor Inherited Members CodeSnippetRegexExtractor.GetAll(String[]) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Dfm Assembly : Microsoft.DocAsCode.Dfm.dll Syntax public class FlatNameCodeSnippetExtractor : CodeSnippetRegexExtractor, ICodeSnippetExtractor Constructors | Improve this Doc View Source FlatNameCodeSnippetExtractor(Regex, Regex) Declaration public FlatNameCodeSnippetExtractor(Regex startLineRegex, Regex endLineRegex) Parameters Type Name Description Regex startLineRegex Regex endLineRegex Methods | Improve this Doc View Source ResolveCodeSnippetTags(String[]) Declaration protected override List<CodeSnippetTag> ResolveCodeSnippetTags(string[] lines) Parameters Type Name Description String [] lines Returns Type Description List < CodeSnippetTag > Overrides CodeSnippetRegexExtractor.ResolveCodeSnippetTags(String[]) Implements ICodeSnippetExtractor (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.FileCacheLite.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.FileCacheLite.html",
    "title": "Class FileCacheLite | DocFX website",
    "keywords": "Class FileCacheLite Inheritance Object FileCacheLite Implements IDisposable Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Dfm Assembly : Microsoft.DocAsCode.Dfm.dll Syntax public class FileCacheLite : IDisposable Constructors | Improve this Doc View Source FileCacheLite(IEqualityComparer<String>) Declaration public FileCacheLite(IEqualityComparer<string> keyComparer) Parameters Type Name Description IEqualityComparer < String > keyComparer Fields | Improve this Doc View Source Default Declaration public static readonly FileCacheLite Default Field Value Type Description FileCacheLite Methods | Improve this Doc View Source Add(String, String) Declaration public void Add(string key, string value) Parameters Type Name Description String key String value | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Get(String) Declaration public string Get(string key) Parameters Type Name Description String key Returns Type Description String | Improve this Doc View Source Remove(String) Declaration public bool Remove(string key) Parameters Type Name Description String key Returns Type Description Boolean | Improve this Doc View Source TryGet(String, out String) Declaration public bool TryGet(string key, out string value) Parameters Type Name Description String key String value Returns Type Description Boolean Implements System.IDisposable (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.DocfxFlavoredMarked.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DocfxFlavoredMarked.html",
    "title": "Class DocfxFlavoredMarked | DocFX website",
    "keywords": "Class DocfxFlavoredMarked Inheritance Object DocfxFlavoredMarked Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Dfm Assembly : Microsoft.DocAsCode.Dfm.dll Syntax public class DocfxFlavoredMarked Methods | Improve this Doc View Source CreateBuilder(String) Declaration public static DfmEngineBuilder CreateBuilder(string baseDir) Parameters Type Name Description String baseDir Returns Type Description DfmEngineBuilder | Improve this Doc View Source CreateBuilder(String, String) Declaration public static DfmEngineBuilder CreateBuilder(string baseDir, string templateDir) Parameters Type Name Description String baseDir String templateDir Returns Type Description DfmEngineBuilder | Improve this Doc View Source CreateBuilder(String, String, Options) Declaration public static DfmEngineBuilder CreateBuilder(string baseDir, string templateDir, Options options) Parameters Type Name Description String baseDir String templateDir Options options Returns Type Description DfmEngineBuilder | Improve this Doc View Source CreateBuilder(String, String, Options, IReadOnlyList<String>) Declaration public static DfmEngineBuilder CreateBuilder(string baseDir, string templateDir, Options options, IReadOnlyList<string> fallbackFolders) Parameters Type Name Description String baseDir String templateDir Options options IReadOnlyList < String > fallbackFolders Returns Type Description DfmEngineBuilder | Improve this Doc View Source CreateDefaultOptions() Declaration public static Options CreateDefaultOptions() Returns Type Description Options | Improve this Doc View Source Markup(String, String, Options, String, String, ImmutableDictionary<String, String>, HashSet<String>) Declaration public static string Markup(string baseDir, string templateDir, Options options, string src, string path = null, ImmutableDictionary<string, string> tokens = null, HashSet<string> dependency = null) Parameters Type Name Description String baseDir String templateDir Options options String src String path ImmutableDictionary < String , String > tokens HashSet < String > dependency Returns Type Description String | Improve this Doc View Source Markup(String, String, IReadOnlyList<String>, String, ImmutableDictionary<String, String>, HashSet<String>) Declaration public static string Markup(string baseDir, string src, IReadOnlyList<string> fallbackFolders, string path = null, ImmutableDictionary<string, string> tokens = null, HashSet<string> dependency = null) Parameters Type Name Description String baseDir String src IReadOnlyList < String > fallbackFolders String path ImmutableDictionary < String , String > tokens HashSet < String > dependency Returns Type Description String | Improve this Doc View Source Markup(String, String, ImmutableDictionary<String, String>, HashSet<String>) Declaration public static string Markup(string src, string path = null, ImmutableDictionary<string, string> tokens = null, HashSet<string> dependency = null) Parameters Type Name Description String src String path ImmutableDictionary < String , String > tokens HashSet < String > dependency Returns Type Description String (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.DfmYamlHeaderBlockToken.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmYamlHeaderBlockToken.html",
    "title": "Class DfmYamlHeaderBlockToken | DocFX website",
    "keywords": "Class DfmYamlHeaderBlockToken Inheritance Object DfmYamlHeaderBlockToken Namespace : Microsoft.DocAsCode.Dfm Assembly : Microsoft.DocAsCode.Dfm.dll Syntax public class DfmYamlHeaderBlockToken : IMarkdownToken Constructors | Improve this Doc View Source DfmYamlHeaderBlockToken(IMarkdownRule, IMarkdownContext, String, SourceInfo) Declaration public DfmYamlHeaderBlockToken(IMarkdownRule rule, IMarkdownContext context, string content, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context String content SourceInfo sourceInfo Properties | Improve this Doc View Source Content Declaration public string Content { get; } Property Value Type Description String | Improve this Doc View Source Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext | Improve this Doc View Source Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule | Improve this Doc View Source SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.DfmYamlHeaderBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmYamlHeaderBlockRule.html",
    "title": "Class DfmYamlHeaderBlockRule | DocFX website",
    "keywords": "Class DfmYamlHeaderBlockRule Inheritance Object DfmYamlHeaderBlockRule Namespace : Microsoft.DocAsCode.Dfm Assembly : Microsoft.DocAsCode.Dfm.dll Syntax public class DfmYamlHeaderBlockRule : IMarkdownRule Fields | Improve this Doc View Source YamlHeaderRegex Declaration public static readonly Regex YamlHeaderRegex Field Value Type Description Regex Properties | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description String | Improve this Doc View Source YamlHeader Declaration [Obsolete(\"Please use YamlHeaderMatcher.\")] public virtual Regex YamlHeader { get; } Property Value Type Description Regex | Improve this Doc View Source YamlHeaderMatcher Declaration public virtual Matcher YamlHeaderMatcher { get; } Property Value Type Description Matcher Methods | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.DfmXrefShortcutInlineRule.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmXrefShortcutInlineRule.html",
    "title": "Class DfmXrefShortcutInlineRule | DocFX website",
    "keywords": "Class DfmXrefShortcutInlineRule XREF regex: If content after @ is wrapped by &apos; or &quot; , it contains any character including white space If content after @ is not wrapped by &apos; or &quot; , It must start with word character a-z or A-Z It ends when a. line ends b. meets whitespaces c. line ends with . , , , ; , : , ! , ? and ~ d. meets 2 times or more . , , , ; , : , ! , ? and ~ Inheritance Object DfmXrefShortcutInlineRule Namespace : Microsoft.DocAsCode.Dfm Assembly : Microsoft.DocAsCode.Dfm.dll Syntax public class DfmXrefShortcutInlineRule : IMarkdownRule Fields | Improve this Doc View Source XrefShortcutRegexString Declaration public static readonly string XrefShortcutRegexString Field Value Type Description String | Improve this Doc View Source XrefShortcutRegexWithQuoteString Declaration public static readonly string XrefShortcutRegexWithQuoteString Field Value Type Description String Properties | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description String Methods | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.DfmRenderer.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmRenderer.html",
    "title": "Class DfmRenderer | DocFX website",
    "keywords": "Class DfmRenderer Inheritance Object DfmRenderer Implements IDisposable Namespace : Microsoft.DocAsCode.Dfm Assembly : Microsoft.DocAsCode.Dfm.dll Syntax public class DfmRenderer : HtmlRenderer, IDisposable Properties | Improve this Doc View Source Tokens Declaration public ImmutableDictionary<string, string> Tokens { get; set; } Property Value Type Description ImmutableDictionary < String , String > Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Render(IMarkdownRenderer, MarkdownBlockquoteBlockToken, MarkdownBlockContext) Declaration public override StringBuffer Render(IMarkdownRenderer renderer, MarkdownBlockquoteBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownBlockquoteBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, DfmDefaultBlockQuoteBlockSplitToken, IMarkdownContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, DfmDefaultBlockQuoteBlockSplitToken splitToken, IMarkdownContext context) Parameters Type Name Description IMarkdownRenderer renderer DfmDefaultBlockQuoteBlockSplitToken splitToken IMarkdownContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, DfmFencesBlockToken, MarkdownBlockContext) Declaration [Obsolete] public virtual StringBuffer Render(IMarkdownRenderer renderer, DfmFencesBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer renderer DfmFencesBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, DfmFencesToken, IMarkdownContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, DfmFencesToken token, IMarkdownContext context) Parameters Type Name Description IMarkdownRenderer renderer DfmFencesToken token IMarkdownContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, DfmIncludeBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, DfmIncludeBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer renderer DfmIncludeBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, DfmIncludeInlineToken, MarkdownInlineContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, DfmIncludeInlineToken token, MarkdownInlineContext context) Parameters Type Name Description IMarkdownRenderer renderer DfmIncludeInlineToken token MarkdownInlineContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, DfmNoteBlockSplitToken, IMarkdownContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, DfmNoteBlockSplitToken splitToken, IMarkdownContext context) Parameters Type Name Description IMarkdownRenderer renderer DfmNoteBlockSplitToken splitToken IMarkdownContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, DfmNoteBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, DfmNoteBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer renderer DfmNoteBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, DfmSectionBlockSplitToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, DfmSectionBlockSplitToken splitToken, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer renderer DfmSectionBlockSplitToken splitToken MarkdownBlockContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, DfmTabContentBlockToken, IMarkdownContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, DfmTabContentBlockToken token, IMarkdownContext context) Parameters Type Name Description IMarkdownRenderer renderer DfmTabContentBlockToken token IMarkdownContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, DfmTabGroupBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, DfmTabGroupBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer renderer DfmTabGroupBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, DfmTabTitleBlockToken, IMarkdownContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, DfmTabTitleBlockToken token, IMarkdownContext context) Parameters Type Name Description IMarkdownRenderer renderer DfmTabTitleBlockToken token IMarkdownContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, DfmVideoBlockSplitToken, IMarkdownContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, DfmVideoBlockSplitToken splitToken, IMarkdownContext context) Parameters Type Name Description IMarkdownRenderer renderer DfmVideoBlockSplitToken splitToken IMarkdownContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, DfmVideoBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, DfmVideoBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer renderer DfmVideoBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, DfmXrefInlineToken, MarkdownInlineContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, DfmXrefInlineToken token, MarkdownInlineContext context) Parameters Type Name Description IMarkdownRenderer renderer DfmXrefInlineToken token MarkdownInlineContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, DfmYamlHeaderBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, DfmYamlHeaderBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer renderer DfmYamlHeaderBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer Implements System.IDisposable (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.DfmNpTableBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmNpTableBlockRule.html",
    "title": "Class DfmNpTableBlockRule | DocFX website",
    "keywords": "Class DfmNpTableBlockRule Inheritance Object DfmNpTableBlockRule Namespace : Microsoft.DocAsCode.Dfm Assembly : Microsoft.DocAsCode.Dfm.dll Syntax public class DfmNpTableBlockRule : MarkdownNpTableBlockRule Methods | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public override IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.DfmNoteBlockToken.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmNoteBlockToken.html",
    "title": "Class DfmNoteBlockToken | DocFX website",
    "keywords": "Class DfmNoteBlockToken Inheritance Object DfmNoteBlockToken Implements IDfmBlockSpecialSplitToken Namespace : Microsoft.DocAsCode.Dfm Assembly : Microsoft.DocAsCode.Dfm.dll Syntax public class DfmNoteBlockToken : IMarkdownToken, IDfmBlockSpecialSplitToken Constructors | Improve this Doc View Source DfmNoteBlockToken(IMarkdownRule, IMarkdownContext, String, String, SourceInfo) Declaration public DfmNoteBlockToken(IMarkdownRule rule, IMarkdownContext context, string noteType, string content, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context String noteType String content SourceInfo sourceInfo Properties | Improve this Doc View Source Content Declaration public string Content { get; } Property Value Type Description String | Improve this Doc View Source Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext | Improve this Doc View Source NoteType Declaration public string NoteType { get; } Property Value Type Description String | Improve this Doc View Source Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule | Improve this Doc View Source SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Implements IDfmBlockSpecialSplitToken (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.DfmNoteBlockSplitToken.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmNoteBlockSplitToken.html",
    "title": "Class DfmNoteBlockSplitToken | DocFX website",
    "keywords": "Class DfmNoteBlockSplitToken Inheritance Object SplitToken DfmNoteBlockSplitToken Inherited Members SplitToken.Token SplitToken.InnerTokens SplitToken.Rule SplitToken.Context SplitToken.SourceInfo Namespace : Microsoft.DocAsCode.Dfm Assembly : Microsoft.DocAsCode.Dfm.dll Syntax public class DfmNoteBlockSplitToken : SplitToken Constructors | Improve this Doc View Source DfmNoteBlockSplitToken(IMarkdownToken) Declaration public DfmNoteBlockSplitToken(IMarkdownToken token) Parameters Type Name Description IMarkdownToken token (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.DfmNoteBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmNoteBlockRule.html",
    "title": "Class DfmNoteBlockRule | DocFX website",
    "keywords": "Class DfmNoteBlockRule Inheritance Object DfmNoteBlockRule Namespace : Microsoft.DocAsCode.Dfm Assembly : Microsoft.DocAsCode.Dfm.dll Syntax public class DfmNoteBlockRule : IMarkdownRule Properties | Improve this Doc View Source DfmNoteRegex Declaration [Obsolete] public virtual Regex DfmNoteRegex { get; } Property Value Type Description Regex | Improve this Doc View Source Name Declaration public virtual string Name { get; } Property Value Type Description String | Improve this Doc View Source NoteMatcher Declaration public virtual Matcher NoteMatcher { get; } Property Value Type Description Matcher Methods | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public virtual IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.DfmMarkdownRenderer.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmMarkdownRenderer.html",
    "title": "Class DfmMarkdownRenderer | DocFX website",
    "keywords": "Class DfmMarkdownRenderer Inheritance Object DfmMarkdownRenderer AzureMarkdownRenderer MarkdigMarkdownRenderer Namespace : Microsoft.DocAsCode.Dfm Assembly : Microsoft.DocAsCode.Dfm.dll Syntax public class DfmMarkdownRenderer : MarkdownRenderer Methods | Improve this Doc View Source Render(IMarkdownRenderer, DfmIncludeBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer render, DfmIncludeBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer render DfmIncludeBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, DfmIncludeInlineToken, MarkdownInlineContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer render, DfmIncludeInlineToken token, MarkdownInlineContext context) Parameters Type Name Description IMarkdownRenderer render DfmIncludeInlineToken token MarkdownInlineContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, DfmNoteBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer render, DfmNoteBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer render DfmNoteBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, DfmSectionBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer render, DfmSectionBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer render DfmSectionBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, DfmTabGroupBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, DfmTabGroupBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer renderer DfmTabGroupBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, DfmVideoBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer render, DfmVideoBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer render DfmVideoBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, DfmYamlHeaderBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer render, DfmYamlHeaderBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer render DfmYamlHeaderBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.RestApi.Swagger.PathsObject.html": {
    "href": "api/Microsoft.DocAsCode.Build.RestApi.Swagger.PathsObject.html",
    "title": "Class PathsObject | DocFX website",
    "keywords": "Class PathsObject Inheritance Object Dictionary < String , PathItemObject > PathsObject Implements IDictionary < String , PathItemObject > ICollection < KeyValuePair < String , PathItemObject >> IDictionary ICollection IReadOnlyDictionary < String , PathItemObject > IReadOnlyCollection < KeyValuePair < String , PathItemObject >> IEnumerable < KeyValuePair < String , PathItemObject >> IEnumerable ISerializable IDeserializationCallback Inherited Members Dictionary<String, PathItemObject>.Add(String, PathItemObject) System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>>.Add(System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>) System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>>.Contains(System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>) System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>>.Remove(System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>) Dictionary<String, PathItemObject>.Clear() Dictionary<String, PathItemObject>.ContainsKey(String) Dictionary<String, PathItemObject>.ContainsValue(PathItemObject) Dictionary<String, PathItemObject>.GetEnumerator() System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>>.GetEnumerator() Dictionary<String, PathItemObject>.GetObjectData(SerializationInfo, StreamingContext) Dictionary<String, PathItemObject>.OnDeserialization(Object) Dictionary<String, PathItemObject>.Remove(String) Dictionary<String, PathItemObject>.TryGetValue(String, PathItemObject) System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>>.CopyTo(System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>[], System.Int32) Dictionary<String, PathItemObject>.ICollection.CopyTo(Array, Int32) Dictionary<String, PathItemObject>.IEnumerable.GetEnumerator() System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>.System.Collections.IDictionary.get_Item(System.Object) System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>.System.Collections.IDictionary.set_Item(System.Object, System.Object) Dictionary<String, PathItemObject>.IDictionary.Add(Object, Object) Dictionary<String, PathItemObject>.IDictionary.Contains(Object) Dictionary<String, PathItemObject>.IDictionary.GetEnumerator() Dictionary<String, PathItemObject>.IDictionary.Remove(Object) Dictionary<String, PathItemObject>.Comparer Dictionary<String, PathItemObject>.Count Dictionary<String, PathItemObject>.Keys System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>.System.Collections.Generic.IDictionary<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>.Keys System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>.System.Collections.Generic.IReadOnlyDictionary<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>.Keys Dictionary<String, PathItemObject>.Values System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>.System.Collections.Generic.IDictionary<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>.Values System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>.System.Collections.Generic.IReadOnlyDictionary<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>.Values Dictionary<String, PathItemObject>.Item[String] System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject>>.IsReadOnly Dictionary<String, PathItemObject>.ICollection.IsSynchronized Dictionary<String, PathItemObject>.ICollection.SyncRoot Dictionary<String, PathItemObject>.IDictionary.IsFixedSize Dictionary<String, PathItemObject>.IDictionary.IsReadOnly Dictionary<String, PathItemObject>.IDictionary.Keys Dictionary<String, PathItemObject>.IDictionary.Values Dictionary<String, PathItemObject>.IDictionary.Item[Object] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.RestApi.Swagger Assembly : Microsoft.DocAsCode.Build.RestApi.dll Syntax [Serializable] public class PathsObject : Dictionary<string, PathItemObject>, IDictionary<string, PathItemObject>, ICollection<KeyValuePair<string, PathItemObject>>, IDictionary, ICollection, IReadOnlyDictionary<string, PathItemObject>, IReadOnlyCollection<KeyValuePair<string, PathItemObject>>, IEnumerable<KeyValuePair<string, PathItemObject>>, IEnumerable, ISerializable, IDeserializationCallback Implements System.Collections.Generic.IDictionary<TKey,TValue> System.Collections.Generic.ICollection<T> System.Collections.IDictionary System.Collections.ICollection System.Collections.Generic.IReadOnlyDictionary<TKey,TValue> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.Runtime.Serialization.ISerializable System.Runtime.Serialization.IDeserializationCallback (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject.html": {
    "href": "api/Microsoft.DocAsCode.Build.RestApi.Swagger.PathItemObject.html",
    "title": "Class PathItemObject | DocFX website",
    "keywords": "Class PathItemObject TODO: need a converter Inheritance Object PathItemObject Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.RestApi.Swagger Assembly : Microsoft.DocAsCode.Build.RestApi.dll Syntax [Serializable] public class PathItemObject Properties | Improve this Doc View Source Metadata Declaration [JsonExtensionData] public Dictionary<string, object> Metadata { get; set; } Property Value Type Description Dictionary < String , Object > | Improve this Doc View Source Parameters A list of parameters that are applicable for all the operations described under this path. These parameters can be overridden at the operation level, but cannot be removed there. Declaration [YamlMember(Alias = \"parameters\")] [JsonProperty(\"parameters\")] public List<ParameterObject> Parameters { get; set; } Property Value Type Description List < ParameterObject > (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.ResourceFiles.ResourceDocumentProcessor.html": {
    "href": "api/Microsoft.DocAsCode.Build.ResourceFiles.ResourceDocumentProcessor.html",
    "title": "Class ResourceDocumentProcessor | DocFX website",
    "keywords": "Class ResourceDocumentProcessor Inheritance Object DisposableDocumentProcessor ResourceDocumentProcessor Implements IDisposable Inherited Members DisposableDocumentProcessor.Dispose() DisposableDocumentProcessor.UpdateHref(FileModel, IDocumentBuildContext) Namespace : Microsoft.DocAsCode.Build.ResourceFiles Assembly : Microsoft.DocAsCode.Build.ResourceFiles.dll Syntax [Export(typeof(IDocumentProcessor))] public class ResourceDocumentProcessor : DisposableDocumentProcessor, IDisposable Properties | Improve this Doc View Source BuildSteps Declaration [ImportMany(\"ResourceDocumentProcessor\")] public override IEnumerable<IDocumentBuildStep> BuildSteps { get; set; } Property Value Type Description IEnumerable < IDocumentBuildStep > Overrides DisposableDocumentProcessor.BuildSteps | Improve this Doc View Source Configs Declaration [ImportMany] public IEnumerable<IResourceFileConfig> Configs { get; set; } Property Value Type Description IEnumerable < IResourceFileConfig > | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description String Overrides DisposableDocumentProcessor.Name Methods | Improve this Doc View Source GetProcessingPriority(FileAndType) Declaration public override ProcessingPriority GetProcessingPriority(FileAndType file) Parameters Type Name Description FileAndType file Returns Type Description ProcessingPriority | Improve this Doc View Source Load(FileAndType, ImmutableDictionary<String, Object>) Declaration public override FileModel Load(FileAndType file, ImmutableDictionary<string, object> metadata) Parameters Type Name Description FileAndType file ImmutableDictionary < String , Object > metadata Returns Type Description FileModel | Improve this Doc View Source Save(FileModel) Declaration public override SaveResult Save(FileModel model) Parameters Type Name Description FileModel model Returns Type Description SaveResult Implements System.IDisposable (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.ResourceFiles.IResourceFileConfig.html": {
    "href": "api/Microsoft.DocAsCode.Build.ResourceFiles.IResourceFileConfig.html",
    "title": "Interface IResourceFileConfig | DocFX website",
    "keywords": "Interface IResourceFileConfig Namespace : Microsoft.DocAsCode.Build.ResourceFiles Assembly : Microsoft.DocAsCode.Build.ResourceFiles.dll Syntax public interface IResourceFileConfig Methods | Improve this Doc View Source IsResourceFile(String) Declaration bool IsResourceFile(string fileExtension) Parameters Type Name Description String fileExtension Returns Type Description Boolean (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.OverwriteDocuments.html": {
    "href": "api/Microsoft.DocAsCode.Build.OverwriteDocuments.html",
    "title": "Namespace Microsoft.DocAsCode.Build.OverwriteDocuments | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.Build.OverwriteDocuments Classes Constants InlineCodeHeadingRule L1InlineCodeHeadingRule L2InlineCodeHeadingRule MarkdownFragment MarkdownFragmentModel MarkdownFragmentsCreater MarkdownFragmentsException MarkdownProperty MarkdownPropertyModel OPathSegment OverwriteDocumentModelCreater OverwriteUtility YamlCodeBlockRule Interfaces IOverwriteBlockRule (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.OverwriteDocuments.YamlCodeBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.Build.OverwriteDocuments.YamlCodeBlockRule.html",
    "title": "Class YamlCodeBlockRule | DocFX website",
    "keywords": "Class YamlCodeBlockRule Inheritance Object YamlCodeBlockRule Implements IOverwriteBlockRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.OverwriteDocuments Assembly : Microsoft.DocAsCode.Build.OverwriteDocuments.dll Syntax public sealed class YamlCodeBlockRule : IOverwriteBlockRule Properties | Improve this Doc View Source TokenName Declaration public string TokenName { get; } Property Value Type Description String Methods | Improve this Doc View Source Parse(Block, out String) Declaration public bool Parse(Block block, out string value) Parameters Type Name Description Markdig.Syntax.Block block String value Returns Type Description Boolean Implements IOverwriteBlockRule (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.OverwriteDocuments.OverwriteUtility.html": {
    "href": "api/Microsoft.DocAsCode.Build.OverwriteDocuments.OverwriteUtility.html",
    "title": "Class OverwriteUtility | DocFX website",
    "keywords": "Class OverwriteUtility Inheritance Object OverwriteUtility Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.OverwriteDocuments Assembly : Microsoft.DocAsCode.Build.OverwriteDocuments.dll Syntax public static class OverwriteUtility Methods | Improve this Doc View Source AddOrUpdateFragmentEntity(Dictionary<String, MarkdownFragment>, String, Dictionary<String, Object>) Declaration public static void AddOrUpdateFragmentEntity(this Dictionary<string, MarkdownFragment> fragments, string uid, Dictionary<string, object> metadata = null) Parameters Type Name Description Dictionary < String , MarkdownFragment > fragments String uid Dictionary < String , Object > metadata | Improve this Doc View Source AddOrUpdateFragmentProperty(MarkdownFragment, String, String, Dictionary<String, Object>) Declaration public static void AddOrUpdateFragmentProperty(this MarkdownFragment fragment, string oPath, string content = null, Dictionary<string, object> metadata = null) Parameters Type Name Description MarkdownFragment fragment String oPath String content Dictionary < String , Object > metadata | Improve this Doc View Source GetUidWrapper(String) Declaration public static string GetUidWrapper(string uid) Parameters Type Name Description String uid Returns Type Description String | Improve this Doc View Source ParseOPath(String) Declaration public static List<OPathSegment> ParseOPath(string OPathString) Parameters Type Name Description String OPathString Returns Type Description List < OPathSegment > | Improve this Doc View Source ToMarkdownFragment(MarkdownFragmentModel, String) Declaration public static MarkdownFragment ToMarkdownFragment(this MarkdownFragmentModel model, string originalContent = null) Parameters Type Name Description MarkdownFragmentModel model String originalContent Returns Type Description MarkdownFragment | Improve this Doc View Source ToMarkdownProperty(MarkdownPropertyModel, String) Declaration public static MarkdownProperty ToMarkdownProperty(this MarkdownPropertyModel model, string originalContent = null) Parameters Type Name Description MarkdownPropertyModel model String originalContent Returns Type Description MarkdownProperty (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.OverwriteDocuments.OverwriteDocumentModelCreater.html": {
    "href": "api/Microsoft.DocAsCode.Build.OverwriteDocuments.OverwriteDocumentModelCreater.html",
    "title": "Class OverwriteDocumentModelCreater | DocFX website",
    "keywords": "Class OverwriteDocumentModelCreater Inheritance Object OverwriteDocumentModelCreater Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.OverwriteDocuments Assembly : Microsoft.DocAsCode.Build.OverwriteDocuments.dll Syntax public class OverwriteDocumentModelCreater Constructors | Improve this Doc View Source OverwriteDocumentModelCreater(String) Declaration public OverwriteDocumentModelCreater(string file) Parameters Type Name Description String file Methods | Improve this Doc View Source Create(MarkdownFragmentModel) Declaration public OverwriteDocumentModel Create(MarkdownFragmentModel model) Parameters Type Name Description MarkdownFragmentModel model Returns Type Description OverwriteDocumentModel (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.OverwriteDocuments.OPathSegment.html": {
    "href": "api/Microsoft.DocAsCode.Build.OverwriteDocuments.OPathSegment.html",
    "title": "Class OPathSegment | DocFX website",
    "keywords": "Class OPathSegment Inheritance Object OPathSegment Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.OverwriteDocuments Assembly : Microsoft.DocAsCode.Build.OverwriteDocuments.dll Syntax [Serializable] public class OPathSegment Properties | Improve this Doc View Source Key Declaration public string Key { get; set; } Property Value Type Description String | Improve this Doc View Source OriginalSegmentString Declaration public string OriginalSegmentString { get; set; } Property Value Type Description String | Improve this Doc View Source SegmentName Declaration public string SegmentName { get; set; } Property Value Type Description String | Improve this Doc View Source Value Declaration public string Value { get; set; } Property Value Type Description String (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.OverwriteDocuments.MarkdownPropertyModel.html": {
    "href": "api/Microsoft.DocAsCode.Build.OverwriteDocuments.MarkdownPropertyModel.html",
    "title": "Class MarkdownPropertyModel | DocFX website",
    "keywords": "Class MarkdownPropertyModel Inheritance Object MarkdownPropertyModel Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.OverwriteDocuments Assembly : Microsoft.DocAsCode.Build.OverwriteDocuments.dll Syntax [Serializable] public class MarkdownPropertyModel Properties | Improve this Doc View Source PropertyName Declaration public string PropertyName { get; set; } Property Value Type Description String | Improve this Doc View Source PropertyNameSource Declaration public Block PropertyNameSource { get; set; } Property Value Type Description Markdig.Syntax.Block | Improve this Doc View Source PropertyValue Declaration public List<Block> PropertyValue { get; set; } Property Value Type Description List < Markdig.Syntax.Block > Extension Methods OverwriteUtility.ToMarkdownProperty(MarkdownPropertyModel, String) (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.OverwriteDocuments.InlineCodeHeadingRule.html": {
    "href": "api/Microsoft.DocAsCode.Build.OverwriteDocuments.InlineCodeHeadingRule.html",
    "title": "Class InlineCodeHeadingRule | DocFX website",
    "keywords": "Class InlineCodeHeadingRule Inheritance Object InlineCodeHeadingRule L1InlineCodeHeadingRule L2InlineCodeHeadingRule Implements IOverwriteBlockRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.OverwriteDocuments Assembly : Microsoft.DocAsCode.Build.OverwriteDocuments.dll Syntax public class InlineCodeHeadingRule : IOverwriteBlockRule Properties | Improve this Doc View Source Level Declaration protected virtual int Level { get; set; } Property Value Type Description Int32 | Improve this Doc View Source NeedCheckLevel Declaration protected virtual bool NeedCheckLevel { get; set; } Property Value Type Description Boolean | Improve this Doc View Source TokenName Declaration public virtual string TokenName { get; } Property Value Type Description String Methods | Improve this Doc View Source Parse(Block, out String) Declaration public bool Parse(Block block, out string value) Parameters Type Name Description Markdig.Syntax.Block block String value Returns Type Description Boolean Implements IOverwriteBlockRule (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.OverwriteDocuments.Constants.html": {
    "href": "api/Microsoft.DocAsCode.Build.OverwriteDocuments.Constants.html",
    "title": "Class Constants | DocFX website",
    "keywords": "Class Constants Inheritance Object Constants Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.OverwriteDocuments Assembly : Microsoft.DocAsCode.Build.OverwriteDocuments.dll Syntax public class Constants Fields | Improve this Doc View Source OPathLineNumberDataName Declaration public const string OPathLineNumberDataName = \"opathLineNumber\" Field Value Type Description String | Improve this Doc View Source OPathStringDataName Declaration public const string OPathStringDataName = \"opathString\" Field Value Type Description String (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.ManagedReference.html": {
    "href": "api/Microsoft.DocAsCode.Build.ManagedReference.html",
    "title": "Namespace Microsoft.DocAsCode.Build.ManagedReference | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.Build.ManagedReference Classes ApplyOverwriteDocumentForMref ApplyPlatformVersion BuildManagedReferenceDocument FillReferenceInformation ManagedReferenceDocumentProcessor MergeManagedReferenceDocument ValidateManagedReferenceDocumentMetadata (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.ManagedReference.ValidateManagedReferenceDocumentMetadata.html": {
    "href": "api/Microsoft.DocAsCode.Build.ManagedReference.ValidateManagedReferenceDocumentMetadata.html",
    "title": "Class ValidateManagedReferenceDocumentMetadata | DocFX website",
    "keywords": "Class ValidateManagedReferenceDocumentMetadata Inheritance Object BaseDocumentBuildStep ValidateManagedReferenceDocumentMetadata Implements ISupportIncrementalBuildStep Inherited Members BaseDocumentBuildStep.Prebuild(ImmutableList<FileModel>, IHostService) BaseDocumentBuildStep.Postbuild(ImmutableList<FileModel>, IHostService) Namespace : Microsoft.DocAsCode.Build.ManagedReference Assembly : Microsoft.DocAsCode.Build.ManagedReference.dll Syntax [Export(\"ManagedReferenceDocumentProcessor\", typeof(IDocumentBuildStep))] public class ValidateManagedReferenceDocumentMetadata : BaseDocumentBuildStep, ISupportIncrementalBuildStep Properties | Improve this Doc View Source BuildOrder Declaration public override int BuildOrder { get; } Property Value Type Description Int32 Overrides BaseDocumentBuildStep.BuildOrder | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description String Overrides BaseDocumentBuildStep.Name Methods | Improve this Doc View Source Build(FileModel, IHostService) Declaration public override void Build(FileModel model, IHostService host) Parameters Type Name Description FileModel model IHostService host | Improve this Doc View Source CanIncrementalBuild(FileAndType) Declaration public bool CanIncrementalBuild(FileAndType fileAndType) Parameters Type Name Description FileAndType fileAndType Returns Type Description Boolean | Improve this Doc View Source GetDependencyTypesToRegister() Declaration public IEnumerable<DependencyType> GetDependencyTypesToRegister() Returns Type Description IEnumerable < DependencyType > | Improve this Doc View Source GetIncrementalContextHash() Declaration public string GetIncrementalContextHash() Returns Type Description String Implements ISupportIncrementalBuildStep (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.ManagedReference.MergeManagedReferenceDocument.html": {
    "href": "api/Microsoft.DocAsCode.Build.ManagedReference.MergeManagedReferenceDocument.html",
    "title": "Class MergeManagedReferenceDocument | DocFX website",
    "keywords": "Class MergeManagedReferenceDocument Inheritance Object BaseDocumentBuildStep MergeManagedReferenceDocument Implements ISupportIncrementalBuildStep Inherited Members BaseDocumentBuildStep.Build(FileModel, IHostService) BaseDocumentBuildStep.Postbuild(ImmutableList<FileModel>, IHostService) Namespace : Microsoft.DocAsCode.Build.ManagedReference Assembly : Microsoft.DocAsCode.Build.ManagedReference.dll Syntax public class MergeManagedReferenceDocument : BaseDocumentBuildStep, ISupportIncrementalBuildStep Properties | Improve this Doc View Source BuildOrder Declaration public override int BuildOrder { get; } Property Value Type Description Int32 Overrides BaseDocumentBuildStep.BuildOrder | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description String Overrides BaseDocumentBuildStep.Name Methods | Improve this Doc View Source CanIncrementalBuild(FileAndType) Declaration public bool CanIncrementalBuild(FileAndType fileAndType) Parameters Type Name Description FileAndType fileAndType Returns Type Description Boolean | Improve this Doc View Source GetDependencyTypesToRegister() Declaration public IEnumerable<DependencyType> GetDependencyTypesToRegister() Returns Type Description IEnumerable < DependencyType > | Improve this Doc View Source GetIncrementalContextHash() Declaration public string GetIncrementalContextHash() Returns Type Description String | Improve this Doc View Source Prebuild(ImmutableList<FileModel>, IHostService) Declaration public override IEnumerable<FileModel> Prebuild(ImmutableList<FileModel> models, IHostService host) Parameters Type Name Description ImmutableList < FileModel > models IHostService host Returns Type Description IEnumerable < FileModel > Implements ISupportIncrementalBuildStep (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.ManagedReference.ManagedReferenceDocumentProcessor.html": {
    "href": "api/Microsoft.DocAsCode.Build.ManagedReference.ManagedReferenceDocumentProcessor.html",
    "title": "Class ManagedReferenceDocumentProcessor | DocFX website",
    "keywords": "Class ManagedReferenceDocumentProcessor Inheritance Object DisposableDocumentProcessor ReferenceDocumentProcessorBase ManagedReferenceDocumentProcessor Implements IDisposable ISupportIncrementalDocumentProcessor Inherited Members ReferenceDocumentProcessorBase.Load(FileAndType, ImmutableDictionary<String, Object>) ReferenceDocumentProcessorBase.LoadOverwrite(FileAndType, ImmutableDictionary<String, Object>) DisposableDocumentProcessor.Dispose() DisposableDocumentProcessor.UpdateHref(FileModel, IDocumentBuildContext) Namespace : Microsoft.DocAsCode.Build.ManagedReference Assembly : Microsoft.DocAsCode.Build.ManagedReference.dll Syntax [Export(typeof(IDocumentProcessor))] public class ManagedReferenceDocumentProcessor : ReferenceDocumentProcessorBase, IDisposable, ISupportIncrementalDocumentProcessor Constructors | Improve this Doc View Source ManagedReferenceDocumentProcessor() Declaration public ManagedReferenceDocumentProcessor() Properties | Improve this Doc View Source BuildSteps Declaration [ImportMany(\"ManagedReferenceDocumentProcessor\")] public override IEnumerable<IDocumentBuildStep> BuildSteps { get; set; } Property Value Type Description IEnumerable < IDocumentBuildStep > Overrides DisposableDocumentProcessor.BuildSteps | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description String Overrides DisposableDocumentProcessor.Name | Improve this Doc View Source ProcessedDocumentType Declaration protected override string ProcessedDocumentType { get; } Property Value Type Description String Overrides ReferenceDocumentProcessorBase.ProcessedDocumentType Methods | Improve this Doc View Source DeserializeModel(Stream) Declaration protected virtual object DeserializeModel(Stream stream) Parameters Type Name Description Stream stream Returns Type Description Object | Improve this Doc View Source DeserializeProperties(Stream) Declaration protected virtual IDictionary<string, object> DeserializeProperties(Stream stream) Parameters Type Name Description Stream stream Returns Type Description IDictionary < String , Object > | Improve this Doc View Source GetIncrementalContextHash() Declaration public virtual string GetIncrementalContextHash() Returns Type Description String | Improve this Doc View Source GetProcessingPriority(FileAndType) Declaration public override ProcessingPriority GetProcessingPriority(FileAndType file) Parameters Type Name Description FileAndType file Returns Type Description ProcessingPriority | Improve this Doc View Source GetSerializer() Declaration protected virtual JsonSerializer GetSerializer() Returns Type Description Newtonsoft.Json.JsonSerializer | Improve this Doc View Source LoadArticle(FileAndType, ImmutableDictionary<String, Object>) Declaration protected override FileModel LoadArticle(FileAndType file, ImmutableDictionary<string, object> metadata) Parameters Type Name Description FileAndType file ImmutableDictionary < String , Object > metadata Returns Type Description FileModel | Improve this Doc View Source LoadIntermediateModel(Stream) Declaration public virtual FileModel LoadIntermediateModel(Stream stream) Parameters Type Name Description Stream stream Returns Type Description FileModel | Improve this Doc View Source Save(FileModel) Declaration public override SaveResult Save(FileModel model) Parameters Type Name Description FileModel model Returns Type Description SaveResult | Improve this Doc View Source SaveIntermediateModel(FileModel, Stream) Declaration public virtual void SaveIntermediateModel(FileModel model, Stream stream) Parameters Type Name Description FileModel model Stream stream | Improve this Doc View Source SerializeModel(Object, Stream) Declaration protected virtual void SerializeModel(object model, Stream stream) Parameters Type Name Description Object model Stream stream | Improve this Doc View Source SerializeProperties(IDictionary<String, Object>, Stream) Declaration protected virtual void SerializeProperties(IDictionary<string, object> properties, Stream stream) Parameters Type Name Description IDictionary < String , Object > properties Stream stream | Improve this Doc View Source UpdateModelContent(FileModel) Declaration protected virtual void UpdateModelContent(FileModel model) Parameters Type Name Description FileModel model Implements System.IDisposable ISupportIncrementalDocumentProcessor (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.ManagedReference.FillReferenceInformation.html": {
    "href": "api/Microsoft.DocAsCode.Build.ManagedReference.FillReferenceInformation.html",
    "title": "Class FillReferenceInformation | DocFX website",
    "keywords": "Class FillReferenceInformation Inheritance Object BaseDocumentBuildStep FillReferenceInformation Implements ICanTraceContextInfoBuildStep Inherited Members BaseDocumentBuildStep.Prebuild(ImmutableList<FileModel>, IHostService) Namespace : Microsoft.DocAsCode.Build.ManagedReference Assembly : Microsoft.DocAsCode.Build.ManagedReference.dll Syntax [Export(\"ManagedReferenceDocumentProcessor\", typeof(IDocumentBuildStep))] public class FillReferenceInformation : BaseDocumentBuildStep, ICanTraceContextInfoBuildStep Properties | Improve this Doc View Source BuildOrder Declaration public override int BuildOrder { get; } Property Value Type Description Int32 Overrides BaseDocumentBuildStep.BuildOrder | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description String Overrides BaseDocumentBuildStep.Name Methods | Improve this Doc View Source Build(FileModel, IHostService) Declaration public override void Build(FileModel model, IHostService host) Parameters Type Name Description FileModel model IHostService host | Improve this Doc View Source CanIncrementalBuild(FileAndType) Declaration public bool CanIncrementalBuild(FileAndType fileAndType) Parameters Type Name Description FileAndType fileAndType Returns Type Description Boolean | Improve this Doc View Source GetDependencyTypesToRegister() Declaration public IEnumerable<DependencyType> GetDependencyTypesToRegister() Returns Type Description IEnumerable < DependencyType > | Improve this Doc View Source GetIncrementalContextHash() Declaration public string GetIncrementalContextHash() Returns Type Description String | Improve this Doc View Source LoadContext(Stream) Declaration public void LoadContext(Stream stream) Parameters Type Name Description Stream stream | Improve this Doc View Source Postbuild(ImmutableList<FileModel>, IHostService) Declaration public override void Postbuild(ImmutableList<FileModel> models, IHostService host) Parameters Type Name Description ImmutableList < FileModel > models IHostService host | Improve this Doc View Source SaveContext(Stream) Declaration public void SaveContext(Stream stream) Parameters Type Name Description Stream stream Implements ICanTraceContextInfoBuildStep (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs.html": {
    "href": "api/Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs.html",
    "title": "Namespace Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs Classes ApiBuildOutput ApiBuildOutputUtility ApiExceptionInfoBuildOutput ApiLanguageValuePair ApiLinkInfoBuildOutput ApiNames ApiParameterBuildOutput ApiReferenceBuildOutput ApiSyntaxBuildOutput (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs.ApiBuildOutput.html": {
    "href": "api/Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs.ApiBuildOutput.html",
    "title": "Class ApiBuildOutput | DocFX website",
    "keywords": "Class ApiBuildOutput Inheritance Object ApiBuildOutput Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs Assembly : Microsoft.DocAsCode.Build.ManagedReference.dll Syntax [Serializable] public class ApiBuildOutput Properties | Improve this Doc View Source AdditionalNotes Declaration [YamlMember(Alias = \"additionalNotes\")] [JsonProperty(\"additionalNotes\")] public AdditionalNotes AdditionalNotes { get; set; } Property Value Type Description AdditionalNotes | Improve this Doc View Source AssemblyNameList Declaration [YamlMember(Alias = \"assemblies\")] [JsonProperty(\"assemblies\")] public List<string> AssemblyNameList { get; set; } Property Value Type Description List < String > | Improve this Doc View Source Attributes Declaration [YamlMember(Alias = \"attributes\")] [JsonProperty(\"attributes\")] public List<AttributeInfo> Attributes { get; set; } Property Value Type Description List < AttributeInfo > | Improve this Doc View Source Children Declaration [YamlMember(Alias = \"children\")] [JsonProperty(\"children\")] public List<ApiReferenceBuildOutput> Children { get; set; } Property Value Type Description List < ApiReferenceBuildOutput > | Improve this Doc View Source Conceptual Declaration [YamlMember(Alias = \"conceptual\")] [JsonProperty(\"conceptual\")] public string Conceptual { get; set; } Property Value Type Description String | Improve this Doc View Source DerivedClasses Declaration [YamlMember(Alias = \"derivedClasses\")] [JsonProperty(\"derivedClasses\")] public List<ApiReferenceBuildOutput> DerivedClasses { get; set; } Property Value Type Description List < ApiReferenceBuildOutput > | Improve this Doc View Source Documentation Declaration [YamlMember(Alias = \"documentation\")] [JsonProperty(\"documentation\")] public SourceDetail Documentation { get; set; } Property Value Type Description SourceDetail | Improve this Doc View Source Examples Declaration [YamlMember(Alias = \"example\")] [JsonProperty(\"example\")] public List<string> Examples { get; set; } Property Value Type Description List < String > | Improve this Doc View Source Exceptions Declaration [YamlMember(Alias = \"exceptions\")] [JsonProperty(\"exceptions\")] public List<ApiExceptionInfoBuildOutput> Exceptions { get; set; } Property Value Type Description List < ApiExceptionInfoBuildOutput > | Improve this Doc View Source ExtensionMethods Declaration [YamlMember(Alias = \"extensionMethods\")] [JsonProperty(\"extensionMethods\")] public List<ApiReferenceBuildOutput> ExtensionMethods { get; set; } Property Value Type Description List < ApiReferenceBuildOutput > | Improve this Doc View Source FullName Declaration [YamlMember(Alias = \"fullName\")] [JsonProperty(\"fullName\")] public List<ApiLanguageValuePair> FullName { get; set; } Property Value Type Description List < ApiLanguageValuePair > | Improve this Doc View Source Href Declaration [YamlMember(Alias = \"href\")] [JsonProperty(\"href\")] public string Href { get; set; } Property Value Type Description String | Improve this Doc View Source Implements Declaration [YamlMember(Alias = \"implements\")] [JsonProperty(\"implements\")] public List<ApiNames> Implements { get; set; } Property Value Type Description List < ApiNames > | Improve this Doc View Source Inheritance Declaration [YamlMember(Alias = \"inheritance\")] [JsonProperty(\"inheritance\")] public List<ApiReferenceBuildOutput> Inheritance { get; set; } Property Value Type Description List < ApiReferenceBuildOutput > | Improve this Doc View Source InheritedMembers Declaration [YamlMember(Alias = \"inheritedMembers\")] [JsonProperty(\"inheritedMembers\")] public List<ApiReferenceBuildOutput> InheritedMembers { get; set; } Property Value Type Description List < ApiReferenceBuildOutput > | Improve this Doc View Source IsExplicitInterfaceImplementation Declaration [YamlMember(Alias = \"isEii\")] [JsonProperty(\"isEii\")] public bool IsExplicitInterfaceImplementation { get; set; } Property Value Type Description Boolean | Improve this Doc View Source IsExtensionMethod Declaration [YamlMember(Alias = \"isExtensionMethod\")] [JsonProperty(\"isExtensionMethod\")] public bool IsExtensionMethod { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Level Declaration [YamlMember(Alias = \"level\")] [JsonProperty(\"level\")] public int Level { get; } Property Value Type Description Int32 | Improve this Doc View Source Metadata Declaration [JsonExtensionData] public Dictionary<string, object> Metadata { get; set; } Property Value Type Description Dictionary < String , Object > | Improve this Doc View Source Name Declaration [YamlMember(Alias = \"name\")] [JsonProperty(\"name\")] public List<ApiLanguageValuePair> Name { get; set; } Property Value Type Description List < ApiLanguageValuePair > | Improve this Doc View Source NamespaceName Declaration [YamlMember(Alias = \"namespace\")] [JsonProperty(\"namespace\")] public ApiReferenceBuildOutput NamespaceName { get; set; } Property Value Type Description ApiReferenceBuildOutput | Improve this Doc View Source NameWithType Declaration [YamlMember(Alias = \"nameWithType\")] [JsonProperty(\"nameWithType\")] public List<ApiLanguageValuePair> NameWithType { get; set; } Property Value Type Description List < ApiLanguageValuePair > | Improve this Doc View Source Overload Declaration [YamlMember(Alias = \"overload\")] [JsonProperty(\"overload\")] public ApiNames Overload { get; set; } Property Value Type Description ApiNames | Improve this Doc View Source Overridden Declaration [YamlMember(Alias = \"overridden\")] [JsonProperty(\"overridden\")] public ApiNames Overridden { get; set; } Property Value Type Description ApiNames | Improve this Doc View Source Parent Declaration [YamlMember(Alias = \"parent\")] [JsonProperty(\"parent\")] public ApiReferenceBuildOutput Parent { get; set; } Property Value Type Description ApiReferenceBuildOutput | Improve this Doc View Source Platform Declaration [YamlMember(Alias = \"platform\")] [JsonProperty(\"platform\")] public List<string> Platform { get; set; } Property Value Type Description List < String > | Improve this Doc View Source Remarks Declaration [YamlMember(Alias = \"remarks\")] [JsonProperty(\"remarks\")] public string Remarks { get; set; } Property Value Type Description String | Improve this Doc View Source SeeAlsos Declaration [YamlMember(Alias = \"seealso\")] [JsonProperty(\"seealso\")] public List<ApiLinkInfoBuildOutput> SeeAlsos { get; set; } Property Value Type Description List < ApiLinkInfoBuildOutput > | Improve this Doc View Source Sees Declaration [YamlMember(Alias = \"see\")] [JsonProperty(\"see\")] public List<ApiLinkInfoBuildOutput> Sees { get; set; } Property Value Type Description List < ApiLinkInfoBuildOutput > | Improve this Doc View Source Source Declaration [YamlMember(Alias = \"source\")] [JsonProperty(\"source\")] public SourceDetail Source { get; set; } Property Value Type Description SourceDetail | Improve this Doc View Source Summary Declaration [YamlMember(Alias = \"summary\")] [JsonProperty(\"summary\")] public string Summary { get; set; } Property Value Type Description String | Improve this Doc View Source SupportedLanguages Declaration [YamlMember(Alias = \"langs\")] [JsonProperty(\"langs\")] public string[] SupportedLanguages { get; set; } Property Value Type Description String [] | Improve this Doc View Source Syntax Declaration [YamlMember(Alias = \"syntax\")] [JsonProperty(\"syntax\")] public ApiSyntaxBuildOutput Syntax { get; set; } Property Value Type Description ApiSyntaxBuildOutput | Improve this Doc View Source Type Declaration [YamlMember(Alias = \"type\")] [JsonProperty(\"type\")] public MemberType? Type { get; set; } Property Value Type Description Nullable < MemberType > | Improve this Doc View Source Uid Declaration [YamlMember(Alias = \"uid\")] [JsonProperty(\"uid\")] public string Uid { get; set; } Property Value Type Description String Methods | Improve this Doc View Source FromModel(PageViewModel) Declaration public static ApiBuildOutput FromModel(PageViewModel model) Parameters Type Name Description PageViewModel model Returns Type Description ApiBuildOutput (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.ManagedReference.BuildManagedReferenceDocument.html": {
    "href": "api/Microsoft.DocAsCode.Build.ManagedReference.BuildManagedReferenceDocument.html",
    "title": "Class BuildManagedReferenceDocument | DocFX website",
    "keywords": "Class BuildManagedReferenceDocument Inheritance Object BaseDocumentBuildStep BuildReferenceDocumentBase BuildManagedReferenceDocument Implements ISupportIncrementalBuildStep Inherited Members BuildReferenceDocumentBase.BuildOrder BuildReferenceDocumentBase.Build(FileModel, IHostService) BuildReferenceDocumentBase.BuildOverwrite(IHostService, FileModel) BuildReferenceDocumentBase.BuildArticleCore(IHostService, FileModel, IModelAttributeHandler, HandleModelAttributesContext, Boolean) BaseDocumentBuildStep.Prebuild(ImmutableList<FileModel>, IHostService) BaseDocumentBuildStep.Postbuild(ImmutableList<FileModel>, IHostService) Namespace : Microsoft.DocAsCode.Build.ManagedReference Assembly : Microsoft.DocAsCode.Build.ManagedReference.dll Syntax [Export(\"ManagedReferenceDocumentProcessor\", typeof(IDocumentBuildStep))] public class BuildManagedReferenceDocument : BuildReferenceDocumentBase, ISupportIncrementalBuildStep Properties | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description String Overrides BaseDocumentBuildStep.Name Methods | Improve this Doc View Source BuildArticle(IHostService, FileModel) Declaration protected override void BuildArticle(IHostService host, FileModel model) Parameters Type Name Description IHostService host FileModel model | Improve this Doc View Source CanIncrementalBuild(FileAndType) Declaration public bool CanIncrementalBuild(FileAndType fileAndType) Parameters Type Name Description FileAndType fileAndType Returns Type Description Boolean | Improve this Doc View Source GetDependencyTypesToRegister() Declaration public IEnumerable<DependencyType> GetDependencyTypesToRegister() Returns Type Description IEnumerable < DependencyType > | Improve this Doc View Source GetIncrementalContextHash() Declaration public string GetIncrementalContextHash() Returns Type Description String Implements ISupportIncrementalBuildStep (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.ManagedReference.ApplyPlatformVersion.html": {
    "href": "api/Microsoft.DocAsCode.Build.ManagedReference.ApplyPlatformVersion.html",
    "title": "Class ApplyPlatformVersion | DocFX website",
    "keywords": "Class ApplyPlatformVersion Inheritance Object BaseDocumentBuildStep ApplyPlatformVersion Implements ISupportIncrementalBuildStep Inherited Members BaseDocumentBuildStep.Build(FileModel, IHostService) BaseDocumentBuildStep.Postbuild(ImmutableList<FileModel>, IHostService) Namespace : Microsoft.DocAsCode.Build.ManagedReference Assembly : Microsoft.DocAsCode.Build.ManagedReference.dll Syntax public class ApplyPlatformVersion : BaseDocumentBuildStep, ISupportIncrementalBuildStep Properties | Improve this Doc View Source BuildOrder Declaration public override int BuildOrder { get; } Property Value Type Description Int32 Overrides BaseDocumentBuildStep.BuildOrder | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description String Overrides BaseDocumentBuildStep.Name Methods | Improve this Doc View Source CanIncrementalBuild(FileAndType) Declaration public bool CanIncrementalBuild(FileAndType fileAndType) Parameters Type Name Description FileAndType fileAndType Returns Type Description Boolean | Improve this Doc View Source GetDependencyTypesToRegister() Declaration public IEnumerable<DependencyType> GetDependencyTypesToRegister() Returns Type Description IEnumerable < DependencyType > | Improve this Doc View Source GetIncrementalContextHash() Declaration public string GetIncrementalContextHash() Returns Type Description String | Improve this Doc View Source Prebuild(ImmutableList<FileModel>, IHostService) Declaration public override IEnumerable<FileModel> Prebuild(ImmutableList<FileModel> models, IHostService host) Parameters Type Name Description ImmutableList < FileModel > models IHostService host Returns Type Description IEnumerable < FileModel > Implements ISupportIncrementalBuildStep (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.ManagedReference.ApplyOverwriteDocumentForMref.html": {
    "href": "api/Microsoft.DocAsCode.Build.ManagedReference.ApplyOverwriteDocumentForMref.html",
    "title": "Class ApplyOverwriteDocumentForMref | DocFX website",
    "keywords": "Class ApplyOverwriteDocumentForMref Inheritance Object BaseDocumentBuildStep ApplyOverwriteDocument ApplyOverwriteDocumentForMref Implements ISupportIncrementalBuildStep Inherited Members ApplyOverwriteDocument.GetMerger() ApplyOverwriteDocument.Postbuild(ImmutableList<FileModel>, IHostService) ApplyOverwriteDocument.ApplyOverwrites(ImmutableList<FileModel>, IHostService) ApplyOverwriteDocument.ApplyOverwrite<T>(IHostService, List<FileModel>, String, List<FileModel>, Func<FileModel, String, IHostService, IEnumerable<T>>, Func<FileModel, String, IHostService, IEnumerable<T>>) ApplyOverwriteDocument.Transform<T>(FileModel, String, IHostService) BaseDocumentBuildStep.Prebuild(ImmutableList<FileModel>, IHostService) BaseDocumentBuildStep.Build(FileModel, IHostService) Namespace : Microsoft.DocAsCode.Build.ManagedReference Assembly : Microsoft.DocAsCode.Build.ManagedReference.dll Syntax [Export(\"ManagedReferenceDocumentProcessor\", typeof(IDocumentBuildStep))] public class ApplyOverwriteDocumentForMref : ApplyOverwriteDocument, ISupportIncrementalBuildStep Properties | Improve this Doc View Source BuildOrder Declaration public override int BuildOrder { get; } Property Value Type Description Int32 Overrides BaseDocumentBuildStep.BuildOrder | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description String Overrides BaseDocumentBuildStep.Name Methods | Improve this Doc View Source ApplyOverwrite(IHostService, List<FileModel>, String, List<FileModel>) Declaration protected override void ApplyOverwrite(IHostService host, List<FileModel> overwrites, string uid, List<FileModel> articles) Parameters Type Name Description IHostService host List < FileModel > overwrites String uid List < FileModel > articles | Improve this Doc View Source CanIncrementalBuild(FileAndType) Declaration public bool CanIncrementalBuild(FileAndType fileAndType) Parameters Type Name Description FileAndType fileAndType Returns Type Description Boolean | Improve this Doc View Source GetDependencyTypesToRegister() Declaration public IEnumerable<DependencyType> GetDependencyTypesToRegister() Returns Type Description IEnumerable < DependencyType > | Improve this Doc View Source GetIncrementalContextHash() Declaration public string GetIncrementalContextHash() Returns Type Description String | Improve this Doc View Source GetItemsFromOverwriteDocument(FileModel, String, IHostService) Declaration public IEnumerable<ItemViewModel> GetItemsFromOverwriteDocument(FileModel fileModel, string uid, IHostService host) Parameters Type Name Description FileModel fileModel String uid IHostService host Returns Type Description IEnumerable < ItemViewModel > | Improve this Doc View Source GetItemsToOverwrite(FileModel, String, IHostService) Declaration public IEnumerable<ItemViewModel> GetItemsToOverwrite(FileModel fileModel, string uid, IHostService host) Parameters Type Name Description FileModel fileModel String uid IHostService host Returns Type Description IEnumerable < ItemViewModel > Implements ISupportIncrementalBuildStep (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.html",
    "title": "Namespace Microsoft.DocAsCode.Build.Engine | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.Build.Engine Classes ApplyTemplateSettings ArchiveResourceReader BasicXRefMapReader BuildPhaseUtility CompositeResourceReader DfmJsonTokenTreeServiceProvider DfmLegacyServiceProvider DfmServiceProvider DfmServiceProvider.DfmService DocumentBuildContext DocumentBuilder DocumentBuildParameters EmptyResourceReader ExportSettings ExtractSearchIndex FileCollection FileMetadata FileMetadataItem GfmServiceProvider HtmlDocumentHandler HtmlPostProcessContext InvalidCrossReferenceException InvalidPreprocessorException JintProcessorHelper JsonTokenTreeServiceProvider LocalFileResourceReader MarkupUtility PreprocessorLoader RemoveDebugInfo RendererLoader ResourceFileExceedsMaxDepthException ResourceFileReader ResourceFinder ResourceInfo SearchIndexItem SingleDocumentBuilder SitemapGenerator Template TemplateBundle TemplateCollection TemplateJintPreprocessor TemplateManager TemplateModelTransformer TemplatePageLoader TemplateProcessor TemplateResourceInfo TemplateUtility TransformModelOptions ValidateBookmark XRefArchive XRefArchiveBuilder XRefArchiveReader XrefClient XRefDetails XRefMap XRefMapDownloader XRefMapReader XRefMapRedirection XRefRedirectionReader XrefServiceResolver XRefSpecUidComparer Interfaces IHtmlDocumentHandler IInputFileAbstractLayerBuilderProvider IResourceFileReader ITemplatePreprocessor ITemplateRenderer IXRefContainer IXRefContainerReader Enums ApplyTemplateOptions TemplateRendererType TemplateType XRefArchiveMode (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.XRefSpecUidComparer.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.XRefSpecUidComparer.html",
    "title": "Class XRefSpecUidComparer | DocFX website",
    "keywords": "Class XRefSpecUidComparer Inheritance Object Comparer < XRefSpec > XRefSpecUidComparer Implements IComparer IComparer < XRefSpec > Inherited Members Comparer<XRefSpec>.Create(Comparison<XRefSpec>) Comparer<XRefSpec>.IComparer.Compare(Object, Object) Comparer<XRefSpec>.Default Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Engine Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public sealed class XRefSpecUidComparer : Comparer<XRefSpec>, IComparer, IComparer<XRefSpec> Fields | Improve this Doc View Source Instance Declaration public static readonly XRefSpecUidComparer Instance Field Value Type Description XRefSpecUidComparer Methods | Improve this Doc View Source Compare(XRefSpec, XRefSpec) Declaration public override int Compare(XRefSpec x, XRefSpec y) Parameters Type Name Description XRefSpec x XRefSpec y Returns Type Description Int32 Overrides System.Collections.Generic.Comparer<XRefSpec>.Compare(XRefSpec, XRefSpec) Implements System.Collections.IComparer System.Collections.Generic.IComparer<T> (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.XrefServiceResolver.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.XrefServiceResolver.html",
    "title": "Class XrefServiceResolver | DocFX website",
    "keywords": "Class XrefServiceResolver Inheritance Object XrefServiceResolver Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Engine Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public class XrefServiceResolver Constructors | Improve this Doc View Source XrefServiceResolver(ImmutableArray<String>, Int32) Declaration public XrefServiceResolver(ImmutableArray<string> xrefServiceUrls, int maxParallelism) Parameters Type Name Description ImmutableArray < String > xrefServiceUrls Int32 maxParallelism | Improve this Doc View Source XrefServiceResolver(HttpClient, ImmutableArray<String>, Int32) Declaration public XrefServiceResolver(HttpClient client, ImmutableArray<string> xrefServiceUrls, int maxParallelism) Parameters Type Name Description HttpClient client ImmutableArray < String > xrefServiceUrls Int32 maxParallelism Methods | Improve this Doc View Source ResolveAsync(List<String>, ConcurrentDictionary<String, XRefSpec>) Declaration public Task<List<string>> ResolveAsync(List<string> uidList, ConcurrentDictionary<string, XRefSpec> externalXRefSpec) Parameters Type Name Description List < String > uidList ConcurrentDictionary < String , XRefSpec > externalXRefSpec Returns Type Description Task < List < String >> | Improve this Doc View Source ResolveAsync(String) Declaration public Task<XRefSpec> ResolveAsync(string uid) Parameters Type Name Description String uid Returns Type Description Task < XRefSpec > (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.XRefRedirectionReader.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.XRefRedirectionReader.html",
    "title": "Class XRefRedirectionReader | DocFX website",
    "keywords": "Class XRefRedirectionReader Inheritance Object XRefRedirectionReader XRefArchiveReader XRefMapReader Implements IXRefContainerReader Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Engine Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public abstract class XRefRedirectionReader : IXRefContainerReader Constructors | Improve this Doc View Source XRefRedirectionReader(String, HashSet<String>) Declaration protected XRefRedirectionReader(string majorName, HashSet<string> mapNames) Parameters Type Name Description String majorName HashSet < String > mapNames Methods | Improve this Doc View Source Find(String) Declaration public XRefSpec Find(string uid) Parameters Type Name Description String uid Returns Type Description XRefSpec | Improve this Doc View Source GetMap(String) Declaration protected abstract IXRefContainer GetMap(string name) Parameters Type Name Description String name Returns Type Description IXRefContainer Implements IXRefContainerReader (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.XRefArchiveBuilder.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.XRefArchiveBuilder.html",
    "title": "Class XRefArchiveBuilder | DocFX website",
    "keywords": "Class XRefArchiveBuilder Inheritance Object XRefArchiveBuilder Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Engine Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public class XRefArchiveBuilder Methods | Improve this Doc View Source DownloadAsync(Uri, String) Declaration public Task<bool> DownloadAsync(Uri uri, string outputFile) Parameters Type Name Description Uri uri String outputFile Returns Type Description Task < Boolean > (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.XRefArchive.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.XRefArchive.html",
    "title": "Class XRefArchive | DocFX website",
    "keywords": "Class XRefArchive Inheritance Object XRefArchive Implements IXRefContainer IDisposable Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Engine Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public sealed class XRefArchive : IXRefContainer, IDisposable Fields | Improve this Doc View Source MajorFileName Declaration public const string MajorFileName = \"xrefmap.yml\" Field Value Type Description String Properties | Improve this Doc View Source Entries Declaration public ImmutableList<string> Entries { get; } Property Value Type Description ImmutableList < String > Methods | Improve this Doc View Source CreateMajor(XRefMap) Declaration public string CreateMajor(XRefMap map) Parameters Type Name Description XRefMap map Returns Type Description String | Improve this Doc View Source CreateMinor(XRefMap, IEnumerable<String>) Declaration public string CreateMinor(XRefMap map, IEnumerable<string> names) Parameters Type Name Description XRefMap map IEnumerable < String > names Returns Type Description String | Improve this Doc View Source Delete(String) Declaration public void Delete(string name) Parameters Type Name Description String name | Improve this Doc View Source DeleteMajor() Declaration public void DeleteMajor() | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Get(String) Declaration public XRefMap Get(string name) Parameters Type Name Description String name Returns Type Description XRefMap | Improve this Doc View Source GetMajor() Declaration public XRefMap GetMajor() Returns Type Description XRefMap | Improve this Doc View Source GetReader() Declaration public IXRefContainerReader GetReader() Returns Type Description IXRefContainerReader | Improve this Doc View Source HasEntry(String) Declaration public bool HasEntry(string name) Parameters Type Name Description String name Returns Type Description Boolean | Improve this Doc View Source Open(String, XRefArchiveMode) Declaration public static XRefArchive Open(string file, XRefArchiveMode mode) Parameters Type Name Description String file XRefArchiveMode mode Returns Type Description XRefArchive | Improve this Doc View Source Update(String, XRefMap) Declaration public void Update(string name, XRefMap map) Parameters Type Name Description String name XRefMap map | Improve this Doc View Source UpdateMajor(XRefMap) Declaration public void UpdateMajor(XRefMap map) Parameters Type Name Description XRefMap map Explicit Interface Implementations | Improve this Doc View Source IXRefContainer.GetRedirections() Declaration IEnumerable<XRefMapRedirection> IXRefContainer.GetRedirections() Returns Type Description IEnumerable < XRefMapRedirection > | Improve this Doc View Source IXRefContainer.IsEmbeddedRedirections Declaration bool IXRefContainer.IsEmbeddedRedirections { get; } Returns Type Description Boolean Implements IXRefContainer System.IDisposable (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.ValidateBookmark.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.ValidateBookmark.html",
    "title": "Class ValidateBookmark | DocFX website",
    "keywords": "Class ValidateBookmark Inheritance Object HtmlDocumentHandler ValidateBookmark Implements IHtmlDocumentHandler Inherited Members HtmlDocumentHandler.Context HtmlDocumentHandler.PreHandleCore(Manifest) HtmlDocumentHandler.SetContext(HtmlPostProcessContext) HtmlDocumentHandler.Handle(HtmlDocument, ManifestItem, String, String) HtmlDocumentHandler.PostHandle(Manifest) HtmlDocumentHandler.PreHandle(Manifest) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Engine Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public sealed class ValidateBookmark : HtmlDocumentHandler, IHtmlDocumentHandler Methods | Improve this Doc View Source HandleCore(HtmlDocument, ManifestItem, String, String) Declaration protected override void HandleCore(HtmlDocument document, ManifestItem manifestItem, string inputFile, string outputFile) Parameters Type Name Description HtmlAgilityPack.HtmlDocument document ManifestItem manifestItem String inputFile String outputFile Overrides HtmlDocumentHandler.HandleCore(HtmlDocument, ManifestItem, String, String) | Improve this Doc View Source LoadContext(HtmlPostProcessContext) Declaration public override void LoadContext(HtmlPostProcessContext context) Parameters Type Name Description HtmlPostProcessContext context Overrides HtmlDocumentHandler.LoadContext(HtmlPostProcessContext) | Improve this Doc View Source PostHandleCore(Manifest) Declaration protected override Manifest PostHandleCore(Manifest manifest) Parameters Type Name Description Manifest manifest Returns Type Description Manifest Overrides HtmlDocumentHandler.PostHandleCore(Manifest) | Improve this Doc View Source SaveContext(HtmlPostProcessContext) Declaration public override void SaveContext(HtmlPostProcessContext context) Parameters Type Name Description HtmlPostProcessContext context Overrides HtmlDocumentHandler.SaveContext(HtmlPostProcessContext) Implements IHtmlDocumentHandler (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.TransformModelOptions.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.TransformModelOptions.html",
    "title": "Class TransformModelOptions | DocFX website",
    "keywords": "Class TransformModelOptions Inheritance Object TransformModelOptions Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Engine Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public class TransformModelOptions Properties | Improve this Doc View Source Bookmarks Declaration [JsonProperty(PropertyName = \"bookmarks\")] public Dictionary<string, string> Bookmarks { get; set; } Property Value Type Description Dictionary < String , String > | Improve this Doc View Source IsShared Declaration [JsonProperty(PropertyName = \"isShared\")] public bool IsShared { get; set; } Property Value Type Description Boolean (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.TemplateUtility.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.TemplateUtility.html",
    "title": "Class TemplateUtility | DocFX website",
    "keywords": "Class TemplateUtility Inheritance Object TemplateUtility Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Engine Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public class TemplateUtility Constructors | Improve this Doc View Source TemplateUtility(DocumentBuildContext) Declaration public TemplateUtility(DocumentBuildContext context) Parameters Type Name Description DocumentBuildContext context Methods | Improve this Doc View Source GetHrefFromRoot(String, String) Declaration public string GetHrefFromRoot(string originalHref, string sourceFileKey) Parameters Type Name Description String originalHref String sourceFileKey Returns Type Description String | Improve this Doc View Source Markup(String, String) Declaration public string Markup(string markdown, string sourceFileKey) Parameters Type Name Description String markdown String sourceFileKey Returns Type Description String | Improve this Doc View Source ResolveSourceRelativePath(String, String) Declaration public string ResolveSourceRelativePath(string originPath, string currentFileOutputPath) Parameters Type Name Description String originPath String currentFileOutputPath Returns Type Description String (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.TemplateType.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.TemplateType.html",
    "title": "Enum TemplateType | DocFX website",
    "keywords": "Enum TemplateType Namespace : Microsoft.DocAsCode.Build.Engine Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public enum TemplateType Fields Name Description Auxiliary Auxiliary template type means documents processed by this template will not be referenced by other documents Default Primary Primary template type means documents processed by this template will be responsible for hyperlink (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.TemplateResourceInfo.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.TemplateResourceInfo.html",
    "title": "Class TemplateResourceInfo | DocFX website",
    "keywords": "Class TemplateResourceInfo Inheritance Object TemplateResourceInfo Inherited Members Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Engine Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public sealed class TemplateResourceInfo Constructors | Improve this Doc View Source TemplateResourceInfo(String) Declaration public TemplateResourceInfo(string resourceKey) Parameters Type Name Description String resourceKey Properties | Improve this Doc View Source ResourceKey Declaration public string ResourceKey { get; } Property Value Type Description String Methods | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides Object.Equals(Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides Object.GetHashCode() (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.TemplateRendererType.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.TemplateRendererType.html",
    "title": "Enum TemplateRendererType | DocFX website",
    "keywords": "Enum TemplateRendererType Namespace : Microsoft.DocAsCode.Build.Engine Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public enum TemplateRendererType Fields Name Description Liquid Mustache (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.SitemapGenerator.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.SitemapGenerator.html",
    "title": "Class SitemapGenerator | DocFX website",
    "keywords": "Class SitemapGenerator Inheritance Object SitemapGenerator Namespace : Microsoft.DocAsCode.Build.Engine Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax [Export(\"SitemapGenerator\", typeof(IPostProcessor))] public class SitemapGenerator : IPostProcessor Properties | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description String Methods | Improve this Doc View Source PrepareMetadata(ImmutableDictionary<String, Object>) Declaration public ImmutableDictionary<string, object> PrepareMetadata(ImmutableDictionary<string, object> metadata) Parameters Type Name Description ImmutableDictionary < String , Object > metadata Returns Type Description ImmutableDictionary < String , Object > | Improve this Doc View Source Process(Manifest, String) Declaration public Manifest Process(Manifest manifest, string outputFolder) Parameters Type Name Description Manifest manifest String outputFolder Returns Type Description Manifest (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.SingleDocumentBuilder.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.SingleDocumentBuilder.html",
    "title": "Class SingleDocumentBuilder | DocFX website",
    "keywords": "Class SingleDocumentBuilder Inheritance Object SingleDocumentBuilder Implements IDisposable Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Engine Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public class SingleDocumentBuilder : IDisposable Properties | Improve this Doc View Source MarkdownServiceProvider Declaration public IMarkdownServiceProvider MarkdownServiceProvider { get; set; } Property Value Type Description IMarkdownServiceProvider | Improve this Doc View Source MetadataValidators Declaration public IEnumerable<IInputMetadataValidator> MetadataValidators { get; set; } Property Value Type Description IEnumerable < IInputMetadataValidator > | Improve this Doc View Source Processors Declaration public IEnumerable<IDocumentProcessor> Processors { get; set; } Property Value Type Description IEnumerable < IDocumentProcessor > Methods | Improve this Doc View Source Build(IDocumentProcessor, DocumentBuildParameters, IMarkdownService) Declaration public static ImmutableList<FileModel> Build(IDocumentProcessor processor, DocumentBuildParameters parameters, IMarkdownService markdownService) Parameters Type Name Description IDocumentProcessor processor DocumentBuildParameters parameters IMarkdownService markdownService Returns Type Description ImmutableList < FileModel > | Improve this Doc View Source Build(DocumentBuildParameters) Declaration public Manifest Build(DocumentBuildParameters parameters) Parameters Type Name Description DocumentBuildParameters parameters Returns Type Description Manifest | Improve this Doc View Source Dispose() Declaration public void Dispose() Implements System.IDisposable (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.SearchIndexItem.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.SearchIndexItem.html",
    "title": "Class SearchIndexItem | DocFX website",
    "keywords": "Class SearchIndexItem Inheritance Object SearchIndexItem Inherited Members Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Engine Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public class SearchIndexItem Properties | Improve this Doc View Source Href Declaration [JsonProperty(\"href\")] public string Href { get; set; } Property Value Type Description String | Improve this Doc View Source Keywords Declaration [JsonProperty(\"keywords\")] public string Keywords { get; set; } Property Value Type Description String | Improve this Doc View Source Title Declaration [JsonProperty(\"title\")] public string Title { get; set; } Property Value Type Description String Methods | Improve this Doc View Source Equals(SearchIndexItem) Declaration public bool Equals(SearchIndexItem other) Parameters Type Name Description SearchIndexItem other Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides Object.Equals(Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides Object.GetHashCode() (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.ResourceInfo.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.ResourceInfo.html",
    "title": "Class ResourceInfo | DocFX website",
    "keywords": "Class ResourceInfo Inheritance Object ResourceInfo Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Engine Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public class ResourceInfo Constructors | Improve this Doc View Source ResourceInfo(String, String) Declaration public ResourceInfo(string path, string content) Parameters Type Name Description String path String content Properties | Improve this Doc View Source Content Declaration public string Content { get; } Property Value Type Description String | Improve this Doc View Source Path Declaration public string Path { get; } Property Value Type Description String (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.ResourceFinder.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.ResourceFinder.html",
    "title": "Class ResourceFinder | DocFX website",
    "keywords": "Class ResourceFinder Inheritance Object ResourceFinder Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Engine Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax [Serializable] public class ResourceFinder Constructors | Improve this Doc View Source ResourceFinder(Assembly, String, String) Declaration public ResourceFinder(Assembly assembly, string rootNamespace, string baseDirectory = null) Parameters Type Name Description Assembly assembly String rootNamespace String baseDirectory Methods | Improve this Doc View Source Find(String) Search in order: Inside Embedded Resources a. ZIP file with provided name Inside OverrideFolder, NOTE sub-folders are NOT included a. Folder with provided name b. ZIP file with provided name Declaration public ResourceFileReader Find(string name) Parameters Type Name Description String name The resource name provided Returns Type Description ResourceFileReader If found, return the resource collection; if not, return null (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.ResourceFileReader.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.ResourceFileReader.html",
    "title": "Class ResourceFileReader | DocFX website",
    "keywords": "Class ResourceFileReader Inheritance Object ResourceFileReader ArchiveResourceReader CompositeResourceReader EmptyResourceReader LocalFileResourceReader Implements IResourceFileReader IDisposable Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Engine Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public abstract class ResourceFileReader : IResourceFileReader, IDisposable Properties | Improve this Doc View Source IsEmpty Declaration public abstract bool IsEmpty { get; } Property Value Type Description Boolean | Improve this Doc View Source Name Declaration public abstract string Name { get; } Property Value Type Description String | Improve this Doc View Source Names Declaration public abstract IEnumerable<string> Names { get; } Property Value Type Description IEnumerable < String > Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Dispose(Boolean) Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description Boolean disposing | Improve this Doc View Source Finalize() Override Object.Finalize by defining a destructor Declaration protected void Finalize() | Improve this Doc View Source GetResource(String) Declaration public virtual string GetResource(string name) Parameters Type Name Description String name Returns Type Description String | Improve this Doc View Source GetResources(String) Declaration public IEnumerable<ResourceInfo> GetResources(string selector = null) Parameters Type Name Description String selector Returns Type Description IEnumerable < ResourceInfo > | Improve this Doc View Source GetResourceStream(String) Declaration public abstract Stream GetResourceStream(string name) Parameters Type Name Description String name Returns Type Description Stream | Improve this Doc View Source GetResourceStreams(String) Declaration public IEnumerable<KeyValuePair<string, Stream>> GetResourceStreams(string selector = null) Parameters Type Name Description String selector Returns Type Description IEnumerable < KeyValuePair < String , Stream >> | Improve this Doc View Source GetString(Stream) Declaration protected static string GetString(Stream stream) Parameters Type Name Description Stream stream Returns Type Description String Implements IResourceFileReader System.IDisposable (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.ResourceFileExceedsMaxDepthException.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.ResourceFileExceedsMaxDepthException.html",
    "title": "Class ResourceFileExceedsMaxDepthException | DocFX website",
    "keywords": "Class ResourceFileExceedsMaxDepthException Inheritance Object ResourceFileExceedsMaxDepthException Namespace : Microsoft.DocAsCode.Build.Engine Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax [Serializable] public class ResourceFileExceedsMaxDepthException : DocfxException Constructors | Improve this Doc View Source ResourceFileExceedsMaxDepthException(Int32, String, String) Declaration public ResourceFileExceedsMaxDepthException(int maxDepth, string fileName, string resourceName) Parameters Type Name Description Int32 maxDepth String fileName String resourceName | Improve this Doc View Source ResourceFileExceedsMaxDepthException(SerializationInfo, StreamingContext) Declaration protected ResourceFileExceedsMaxDepthException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context Properties | Improve this Doc View Source DirectoryName Declaration public string DirectoryName { get; } Property Value Type Description String | Improve this Doc View Source MaxDepth Declaration public int MaxDepth { get; } Property Value Type Description Int32 | Improve this Doc View Source ResourceName Declaration public string ResourceName { get; } Property Value Type Description String Methods | Improve this Doc View Source GetObjectData(SerializationInfo, StreamingContext) Declaration [SecurityPermission(SecurityAction.Demand, SerializationFormatter = true)] public override void GetObjectData(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.RendererLoader.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.RendererLoader.html",
    "title": "Class RendererLoader | DocFX website",
    "keywords": "Class RendererLoader Inheritance Object RendererLoader Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Engine Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public class RendererLoader Constructors | Improve this Doc View Source RendererLoader(IResourceFileReader, Int32) Declaration public RendererLoader(IResourceFileReader reader, int maxParallelism) Parameters Type Name Description IResourceFileReader reader Int32 maxParallelism Methods | Improve this Doc View Source Load(ResourceInfo) Declaration public ITemplateRenderer Load(ResourceInfo res) Parameters Type Name Description ResourceInfo res Returns Type Description ITemplateRenderer | Improve this Doc View Source Load(String) Declaration public ITemplateRenderer Load(string path) Parameters Type Name Description String path Returns Type Description ITemplateRenderer | Improve this Doc View Source LoadAll() Declaration public IEnumerable<ITemplateRenderer> LoadAll() Returns Type Description IEnumerable < ITemplateRenderer > (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.RemoveDebugInfo.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.RemoveDebugInfo.html",
    "title": "Class RemoveDebugInfo | DocFX website",
    "keywords": "Class RemoveDebugInfo Inheritance Object HtmlDocumentHandler RemoveDebugInfo Implements IHtmlDocumentHandler Inherited Members HtmlDocumentHandler.Context HtmlDocumentHandler.LoadContext(HtmlPostProcessContext) HtmlDocumentHandler.PostHandleCore(Manifest) HtmlDocumentHandler.PreHandleCore(Manifest) HtmlDocumentHandler.SaveContext(HtmlPostProcessContext) HtmlDocumentHandler.SetContext(HtmlPostProcessContext) HtmlDocumentHandler.Handle(HtmlDocument, ManifestItem, String, String) HtmlDocumentHandler.PostHandle(Manifest) HtmlDocumentHandler.PreHandle(Manifest) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Engine Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public sealed class RemoveDebugInfo : HtmlDocumentHandler, IHtmlDocumentHandler Methods | Improve this Doc View Source HandleCore(HtmlDocument, ManifestItem, String, String) Declaration protected override void HandleCore(HtmlDocument document, ManifestItem manifestItem, string inputFile, string outputFile) Parameters Type Name Description HtmlAgilityPack.HtmlDocument document ManifestItem manifestItem String inputFile String outputFile Overrides HtmlDocumentHandler.HandleCore(HtmlDocument, ManifestItem, String, String) Implements IHtmlDocumentHandler (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.PreprocessorLoader.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.PreprocessorLoader.html",
    "title": "Class PreprocessorLoader | DocFX website",
    "keywords": "Class PreprocessorLoader Inheritance Object PreprocessorLoader Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Engine Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public class PreprocessorLoader Constructors | Improve this Doc View Source PreprocessorLoader(IResourceFileReader, DocumentBuildContext, Int32) Declaration public PreprocessorLoader(IResourceFileReader reader, DocumentBuildContext context, int maxParallelism) Parameters Type Name Description IResourceFileReader reader DocumentBuildContext context Int32 maxParallelism Methods | Improve this Doc View Source Load(ResourceInfo, String) Declaration public ITemplatePreprocessor Load(ResourceInfo res, string name = null) Parameters Type Name Description ResourceInfo res String name Returns Type Description ITemplatePreprocessor | Improve this Doc View Source LoadFromRenderer(ITemplateRenderer) Declaration public IEnumerable<ITemplatePreprocessor> LoadFromRenderer(ITemplateRenderer renderer) Parameters Type Name Description ITemplateRenderer renderer Returns Type Description IEnumerable < ITemplatePreprocessor > | Improve this Doc View Source LoadStandalones() Declaration public IEnumerable<ITemplatePreprocessor> LoadStandalones() Returns Type Description IEnumerable < ITemplatePreprocessor > (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.MarkupUtility.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.MarkupUtility.html",
    "title": "Class MarkupUtility | DocFX website",
    "keywords": "Class MarkupUtility Inheritance Object MarkupUtility Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Engine Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public static class MarkupUtility Methods | Improve this Doc View Source Parse(MarkupResult, FileAndType, ImmutableDictionary<String, FileAndType>) Declaration public static MarkupResult Parse(MarkupResult markupResult, FileAndType ft, ImmutableDictionary<string, FileAndType> sourceFiles) Parameters Type Name Description MarkupResult markupResult FileAndType ft ImmutableDictionary < String , FileAndType > sourceFiles Returns Type Description MarkupResult | Improve this Doc View Source Parse(MarkupResult, String, ImmutableDictionary<String, FileAndType>) Declaration public static MarkupResult Parse(MarkupResult markupResult, string file, ImmutableDictionary<string, FileAndType> sourceFiles) Parameters Type Name Description MarkupResult markupResult String file ImmutableDictionary < String , FileAndType > sourceFiles Returns Type Description MarkupResult (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.LocalFileResourceReader.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.LocalFileResourceReader.html",
    "title": "Class LocalFileResourceReader | DocFX website",
    "keywords": "Class LocalFileResourceReader Inheritance Object ResourceFileReader LocalFileResourceReader Implements IResourceFileReader IDisposable Inherited Members ResourceFileReader.GetResource(String) ResourceFileReader.GetResources(String) ResourceFileReader.GetResourceStreams(String) ResourceFileReader.Dispose() ResourceFileReader.Dispose(Boolean) ResourceFileReader.GetString(Stream) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Engine Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public sealed class LocalFileResourceReader : ResourceFileReader, IResourceFileReader, IDisposable Constructors | Improve this Doc View Source LocalFileResourceReader(String, Int32) Declaration public LocalFileResourceReader(string directory, int maxSearchLevel = 5) Parameters Type Name Description String directory Int32 maxSearchLevel Properties | Improve this Doc View Source IsEmpty Declaration public override bool IsEmpty { get; } Property Value Type Description Boolean Overrides ResourceFileReader.IsEmpty | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description String Overrides ResourceFileReader.Name | Improve this Doc View Source Names Declaration public override IEnumerable<string> Names { get; } Property Value Type Description IEnumerable < String > Overrides ResourceFileReader.Names Methods | Improve this Doc View Source GetResourceStream(String) Declaration public override Stream GetResourceStream(string name) Parameters Type Name Description String name Returns Type Description Stream Overrides ResourceFileReader.GetResourceStream(String) Implements IResourceFileReader System.IDisposable (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.InvalidCrossReferenceException.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.InvalidCrossReferenceException.html",
    "title": "Class InvalidCrossReferenceException | DocFX website",
    "keywords": "Class InvalidCrossReferenceException Inheritance Object InvalidCrossReferenceException Namespace : Microsoft.DocAsCode.Build.Engine Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax [Serializable] public class InvalidCrossReferenceException : DocumentException Constructors | Improve this Doc View Source InvalidCrossReferenceException(XRefDetails) Declaration public InvalidCrossReferenceException(XRefDetails xrefDetails) Parameters Type Name Description XRefDetails xrefDetails | Improve this Doc View Source InvalidCrossReferenceException(SerializationInfo, StreamingContext) Declaration protected InvalidCrossReferenceException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context Properties | Improve this Doc View Source XRefDetails Declaration public XRefDetails XRefDetails { get; } Property Value Type Description XRefDetails Methods | Improve this Doc View Source GetObjectData(SerializationInfo, StreamingContext) Declaration [SecurityPermission(SecurityAction.Demand, SerializationFormatter = true)] public override void GetObjectData(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.Incrementals.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.Incrementals.html",
    "title": "Namespace Microsoft.DocAsCode.Build.Engine.Incrementals | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.Build.Engine.Incrementals Classes BuildCacheException BuildInfo BuildMessage BuildMessageInfo BuildOutputItem BuildOutputs BuildVersionInfo ChangeItem ChangeList DependencyGraph DependencyItem DependencyItemSourceInfo FileAttributeItem FileAttributes FileMapItem IncrementalIgnoreAttribute IncrementalIgnorePropertiesResolver IncrementalUtility ModelManifest ModelManifestItem OSPlatformSensitiveDictionary<V> PostProcessInfo PostProcessorInfo PostProcessOutputs ProcessorInfo ProcessorInfoBase ProcessorStepInfo ReferenceItem Enums ChangeKind ChangeKindWithDependency (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.Incrementals.ReferenceItem.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.Incrementals.ReferenceItem.html",
    "title": "Class ReferenceItem | DocFX website",
    "keywords": "Class ReferenceItem Inheritance Object ReferenceItem Implements IEquatable < ReferenceItem > Inherited Members Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Engine.Incrementals Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public class ReferenceItem : IEquatable<ReferenceItem> Constructors | Improve this Doc View Source ReferenceItem(DependencyItemSourceInfo, String, String) Declaration [JsonConstructor] public ReferenceItem(DependencyItemSourceInfo reference, string file, string reportedBy) Parameters Type Name Description DependencyItemSourceInfo reference String file String reportedBy Properties | Improve this Doc View Source File Declaration [JsonProperty(\"file\")] public string File { get; } Property Value Type Description String | Improve this Doc View Source Reference Declaration [JsonProperty(\"reference\")] public DependencyItemSourceInfo Reference { get; } Property Value Type Description DependencyItemSourceInfo | Improve this Doc View Source ReportedBy Declaration [JsonProperty(\"reportedBy\")] public string ReportedBy { get; } Property Value Type Description String Methods | Improve this Doc View Source Equals(ReferenceItem) Declaration public bool Equals(ReferenceItem other) Parameters Type Name Description ReferenceItem other Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides Object.Equals(Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides Object.GetHashCode() Implements System.IEquatable<T> (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.Incrementals.ProcessorStepInfo.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.Incrementals.ProcessorStepInfo.html",
    "title": "Class ProcessorStepInfo | DocFX website",
    "keywords": "Class ProcessorStepInfo Inheritance Object ProcessorStepInfo Inherited Members Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Engine.Incrementals Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public sealed class ProcessorStepInfo Properties | Improve this Doc View Source ContextInfoFile The file link for context info. Declaration public string ContextInfoFile { get; set; } Property Value Type Description String | Improve this Doc View Source IncrementalContextHash The context hash for incremental. Declaration public string IncrementalContextHash { get; set; } Property Value Type Description String | Improve this Doc View Source Name The name of processor step. Declaration public string Name { get; set; } Property Value Type Description String Methods | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides Object.Equals(Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides Object.GetHashCode() (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.Incrementals.ProcessorInfoBase.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.Incrementals.ProcessorInfoBase.html",
    "title": "Class ProcessorInfoBase | DocFX website",
    "keywords": "Class ProcessorInfoBase Inheritance Object ProcessorInfoBase PostProcessorInfo ProcessorInfo Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Engine.Incrementals Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public class ProcessorInfoBase Properties | Improve this Doc View Source IncrementalContextHash The context hash for incremental. Declaration public string IncrementalContextHash { get; set; } Property Value Type Description String | Improve this Doc View Source Name The name of processor. Declaration public string Name { get; set; } Property Value Type Description String (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.Incrementals.ProcessorInfo.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.Incrementals.ProcessorInfo.html",
    "title": "Class ProcessorInfo | DocFX website",
    "keywords": "Class ProcessorInfo Inheritance Object ProcessorInfoBase ProcessorInfo Inherited Members ProcessorInfoBase.Name ProcessorInfoBase.IncrementalContextHash Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Engine.Incrementals Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public class ProcessorInfo : ProcessorInfoBase Properties | Improve this Doc View Source IntermediateModelManifest Deserialized build intermediate model manifest. Declaration [JsonIgnore] public ModelManifest IntermediateModelManifest { get; } Property Value Type Description ModelManifest | Improve this Doc View Source IntermediateModelManifestFile The file link for the BuildModel manifest file(type is ModelManifest ). Declaration public string IntermediateModelManifestFile { get; set; } Property Value Type Description String | Improve this Doc View Source Steps The information for steps. Declaration public List<ProcessorStepInfo> Steps { get; } Property Value Type Description List < ProcessorStepInfo > (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.Incrementals.PostProcessOutputs.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.Incrementals.PostProcessOutputs.html",
    "title": "Class PostProcessOutputs | DocFX website",
    "keywords": "Class PostProcessOutputs Inheritance Object Dictionary < String , String > OSPlatformSensitiveDictionary < String > PostProcessOutputs Implements IDictionary < String , String > ICollection < KeyValuePair < String , String >> IDictionary ICollection IReadOnlyDictionary < String , String > IReadOnlyCollection < KeyValuePair < String , String >> IEnumerable < KeyValuePair < String , String >> IEnumerable ISerializable IDeserializationCallback Inherited Members Dictionary<String, String>.Add(String, String) System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.String>>.Add(System.Collections.Generic.KeyValuePair<System.String, System.String>) System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.String>>.Contains(System.Collections.Generic.KeyValuePair<System.String, System.String>) System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.String>>.Remove(System.Collections.Generic.KeyValuePair<System.String, System.String>) Dictionary<String, String>.Clear() Dictionary<String, String>.ContainsKey(String) Dictionary<String, String>.ContainsValue(String) Dictionary<String, String>.GetEnumerator() System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.String>>.GetEnumerator() Dictionary<String, String>.GetObjectData(SerializationInfo, StreamingContext) Dictionary<String, String>.OnDeserialization(Object) Dictionary<String, String>.Remove(String) Dictionary<String, String>.TryGetValue(String, String) System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.String>>.CopyTo(System.Collections.Generic.KeyValuePair<System.String, System.String>[], System.Int32) Dictionary<String, String>.ICollection.CopyTo(Array, Int32) Dictionary<String, String>.IEnumerable.GetEnumerator() System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.IDictionary.get_Item(System.Object) System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.IDictionary.set_Item(System.Object, System.Object) Dictionary<String, String>.IDictionary.Add(Object, Object) Dictionary<String, String>.IDictionary.Contains(Object) Dictionary<String, String>.IDictionary.GetEnumerator() Dictionary<String, String>.IDictionary.Remove(Object) Dictionary<String, String>.Comparer Dictionary<String, String>.Count Dictionary<String, String>.Keys System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.IDictionary<System.String, System.String>.Keys System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.IReadOnlyDictionary<System.String, System.String>.Keys Dictionary<String, String>.Values System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.IDictionary<System.String, System.String>.Values System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.IReadOnlyDictionary<System.String, System.String>.Values Dictionary<String, String>.Item[String] System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.String>>.IsReadOnly Dictionary<String, String>.ICollection.IsSynchronized Dictionary<String, String>.ICollection.SyncRoot Dictionary<String, String>.IDictionary.IsFixedSize Dictionary<String, String>.IDictionary.IsReadOnly Dictionary<String, String>.IDictionary.Keys Dictionary<String, String>.IDictionary.Values Dictionary<String, String>.IDictionary.Item[Object] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Engine.Incrementals Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public class PostProcessOutputs : OSPlatformSensitiveDictionary<string>, IDictionary<string, string>, ICollection<KeyValuePair<string, string>>, IDictionary, ICollection, IReadOnlyDictionary<string, string>, IReadOnlyCollection<KeyValuePair<string, string>>, IEnumerable<KeyValuePair<string, string>>, IEnumerable, ISerializable, IDeserializationCallback Implements System.Collections.Generic.IDictionary<TKey,TValue> System.Collections.Generic.ICollection<T> System.Collections.IDictionary System.Collections.ICollection System.Collections.Generic.IReadOnlyDictionary<TKey,TValue> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.Runtime.Serialization.ISerializable System.Runtime.Serialization.IDeserializationCallback (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.Incrementals.PostProcessorInfo.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.Incrementals.PostProcessorInfo.html",
    "title": "Class PostProcessorInfo | DocFX website",
    "keywords": "Class PostProcessorInfo Inheritance Object ProcessorInfoBase PostProcessorInfo Inherited Members ProcessorInfoBase.Name ProcessorInfoBase.IncrementalContextHash Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Engine.Incrementals Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public class PostProcessorInfo : ProcessorInfoBase Properties | Improve this Doc View Source ContextInfoFile Declaration public string ContextInfoFile { get; set; } Property Value Type Description String Methods | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides Object.Equals(Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides Object.GetHashCode() (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.Incrementals.IncrementalIgnorePropertiesResolver.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.Incrementals.IncrementalIgnorePropertiesResolver.html",
    "title": "Class IncrementalIgnorePropertiesResolver | DocFX website",
    "keywords": "Class IncrementalIgnorePropertiesResolver Inheritance Object Newtonsoft.Json.Serialization.DefaultContractResolver IncrementalIgnorePropertiesResolver Implements Newtonsoft.Json.Serialization.IContractResolver Inherited Members Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type) Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type) Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type) Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection) Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo) Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type) Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type) Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type) Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type) Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type) Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type) Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type) Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type) Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type) Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization) Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo) Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(System.String) Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey(System.String) Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(System.String) Newtonsoft.Json.Serialization.DefaultContractResolver.DynamicCodeGeneration Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultMembersSearchFlags Newtonsoft.Json.Serialization.DefaultContractResolver.SerializeCompilerGeneratedMembers Newtonsoft.Json.Serialization.DefaultContractResolver.IgnoreSerializableInterface Newtonsoft.Json.Serialization.DefaultContractResolver.IgnoreSerializableAttribute Newtonsoft.Json.Serialization.DefaultContractResolver.NamingStrategy Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Engine.Incrementals Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public sealed class IncrementalIgnorePropertiesResolver : DefaultContractResolver, IContractResolver Methods | Improve this Doc View Source CreateProperty(MemberInfo, MemberSerialization) Declaration protected override JsonProperty CreateProperty(MemberInfo member, MemberSerialization memberSerialization) Parameters Type Name Description MemberInfo member Newtonsoft.Json.MemberSerialization memberSerialization Returns Type Description Newtonsoft.Json.Serialization.JsonProperty Overrides Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization) Implements Newtonsoft.Json.Serialization.IContractResolver (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.Incrementals.IncrementalIgnoreAttribute.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.Incrementals.IncrementalIgnoreAttribute.html",
    "title": "Class IncrementalIgnoreAttribute | DocFX website",
    "keywords": "Class IncrementalIgnoreAttribute Inheritance Object Attribute IncrementalIgnoreAttribute Implements _Attribute Inherited Members Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.Equals(Object) Attribute.GetHashCode() Attribute.Match(Object) Attribute.IsDefaultAttribute() Attribute._Attribute.GetTypeInfoCount(UInt32) Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr) Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr) Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr) Attribute.TypeId Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Engine.Incrementals Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax [AttributeUsage(AttributeTargets.Property | AttributeTargets.Field, AllowMultiple = true, Inherited = true)] public class IncrementalIgnoreAttribute : Attribute, _Attribute Implements System.Runtime.InteropServices._Attribute (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.Incrementals.FileMapItem.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.Incrementals.FileMapItem.html",
    "title": "Class FileMapItem | DocFX website",
    "keywords": "Class FileMapItem Inheritance Object Dictionary < String , String > OSPlatformSensitiveDictionary < String > FileMapItem Implements IDictionary < String , String > ICollection < KeyValuePair < String , String >> IDictionary ICollection IReadOnlyDictionary < String , String > IReadOnlyCollection < KeyValuePair < String , String >> IEnumerable < KeyValuePair < String , String >> IEnumerable ISerializable IDeserializationCallback Inherited Members Dictionary<String, String>.Add(String, String) System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.String>>.Add(System.Collections.Generic.KeyValuePair<System.String, System.String>) System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.String>>.Contains(System.Collections.Generic.KeyValuePair<System.String, System.String>) System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.String>>.Remove(System.Collections.Generic.KeyValuePair<System.String, System.String>) Dictionary<String, String>.Clear() Dictionary<String, String>.ContainsKey(String) Dictionary<String, String>.ContainsValue(String) Dictionary<String, String>.GetEnumerator() System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.String>>.GetEnumerator() Dictionary<String, String>.GetObjectData(SerializationInfo, StreamingContext) Dictionary<String, String>.OnDeserialization(Object) Dictionary<String, String>.Remove(String) Dictionary<String, String>.TryGetValue(String, String) System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.String>>.CopyTo(System.Collections.Generic.KeyValuePair<System.String, System.String>[], System.Int32) Dictionary<String, String>.ICollection.CopyTo(Array, Int32) Dictionary<String, String>.IEnumerable.GetEnumerator() System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.IDictionary.get_Item(System.Object) System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.IDictionary.set_Item(System.Object, System.Object) Dictionary<String, String>.IDictionary.Add(Object, Object) Dictionary<String, String>.IDictionary.Contains(Object) Dictionary<String, String>.IDictionary.GetEnumerator() Dictionary<String, String>.IDictionary.Remove(Object) Dictionary<String, String>.Comparer Dictionary<String, String>.Count Dictionary<String, String>.Keys System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.IDictionary<System.String, System.String>.Keys System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.IReadOnlyDictionary<System.String, System.String>.Keys Dictionary<String, String>.Values System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.IDictionary<System.String, System.String>.Values System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.IReadOnlyDictionary<System.String, System.String>.Values Dictionary<String, String>.Item[String] System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.String>>.IsReadOnly Dictionary<String, String>.ICollection.IsSynchronized Dictionary<String, String>.ICollection.SyncRoot Dictionary<String, String>.IDictionary.IsFixedSize Dictionary<String, String>.IDictionary.IsReadOnly Dictionary<String, String>.IDictionary.Keys Dictionary<String, String>.IDictionary.Values Dictionary<String, String>.IDictionary.Item[Object] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Engine.Incrementals Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public class FileMapItem : OSPlatformSensitiveDictionary<string>, IDictionary<string, string>, ICollection<KeyValuePair<string, string>>, IDictionary, ICollection, IReadOnlyDictionary<string, string>, IReadOnlyCollection<KeyValuePair<string, string>>, IEnumerable<KeyValuePair<string, string>>, IEnumerable, ISerializable, IDeserializationCallback Implements System.Collections.Generic.IDictionary<TKey,TValue> System.Collections.Generic.ICollection<T> System.Collections.IDictionary System.Collections.ICollection System.Collections.Generic.IReadOnlyDictionary<TKey,TValue> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.Runtime.Serialization.ISerializable System.Runtime.Serialization.IDeserializationCallback (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.Incrementals.FileAttributes.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.Incrementals.FileAttributes.html",
    "title": "Class FileAttributes | DocFX website",
    "keywords": "Class FileAttributes Inheritance Object Dictionary < String , FileAttributeItem > FileAttributes Implements IDictionary < String , FileAttributeItem > ICollection < KeyValuePair < String , FileAttributeItem >> IDictionary ICollection IReadOnlyDictionary < String , FileAttributeItem > IReadOnlyCollection < KeyValuePair < String , FileAttributeItem >> IEnumerable < KeyValuePair < String , FileAttributeItem >> IEnumerable ISerializable IDeserializationCallback Inherited Members Dictionary<String, FileAttributeItem>.Add(String, FileAttributeItem) System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Engine.Incrementals.FileAttributeItem>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.Engine.Incrementals.FileAttributeItem>>.Add(System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.Engine.Incrementals.FileAttributeItem>) System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Engine.Incrementals.FileAttributeItem>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.Engine.Incrementals.FileAttributeItem>>.Contains(System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.Engine.Incrementals.FileAttributeItem>) System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Engine.Incrementals.FileAttributeItem>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.Engine.Incrementals.FileAttributeItem>>.Remove(System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.Engine.Incrementals.FileAttributeItem>) Dictionary<String, FileAttributeItem>.Clear() Dictionary<String, FileAttributeItem>.ContainsKey(String) Dictionary<String, FileAttributeItem>.ContainsValue(FileAttributeItem) Dictionary<String, FileAttributeItem>.GetEnumerator() System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Engine.Incrementals.FileAttributeItem>.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.Engine.Incrementals.FileAttributeItem>>.GetEnumerator() Dictionary<String, FileAttributeItem>.GetObjectData(SerializationInfo, StreamingContext) Dictionary<String, FileAttributeItem>.OnDeserialization(Object) Dictionary<String, FileAttributeItem>.Remove(String) Dictionary<String, FileAttributeItem>.TryGetValue(String, FileAttributeItem) System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Engine.Incrementals.FileAttributeItem>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.Engine.Incrementals.FileAttributeItem>>.CopyTo(System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.Engine.Incrementals.FileAttributeItem>[], System.Int32) Dictionary<String, FileAttributeItem>.ICollection.CopyTo(Array, Int32) Dictionary<String, FileAttributeItem>.IEnumerable.GetEnumerator() System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Engine.Incrementals.FileAttributeItem>.System.Collections.IDictionary.get_Item(System.Object) System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Engine.Incrementals.FileAttributeItem>.System.Collections.IDictionary.set_Item(System.Object, System.Object) Dictionary<String, FileAttributeItem>.IDictionary.Add(Object, Object) Dictionary<String, FileAttributeItem>.IDictionary.Contains(Object) Dictionary<String, FileAttributeItem>.IDictionary.GetEnumerator() Dictionary<String, FileAttributeItem>.IDictionary.Remove(Object) Dictionary<String, FileAttributeItem>.Comparer Dictionary<String, FileAttributeItem>.Count Dictionary<String, FileAttributeItem>.Keys System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Engine.Incrementals.FileAttributeItem>.System.Collections.Generic.IDictionary<System.String, Microsoft.DocAsCode.Build.Engine.Incrementals.FileAttributeItem>.Keys System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Engine.Incrementals.FileAttributeItem>.System.Collections.Generic.IReadOnlyDictionary<System.String, Microsoft.DocAsCode.Build.Engine.Incrementals.FileAttributeItem>.Keys Dictionary<String, FileAttributeItem>.Values System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Engine.Incrementals.FileAttributeItem>.System.Collections.Generic.IDictionary<System.String, Microsoft.DocAsCode.Build.Engine.Incrementals.FileAttributeItem>.Values System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Engine.Incrementals.FileAttributeItem>.System.Collections.Generic.IReadOnlyDictionary<System.String, Microsoft.DocAsCode.Build.Engine.Incrementals.FileAttributeItem>.Values Dictionary<String, FileAttributeItem>.Item[String] System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Engine.Incrementals.FileAttributeItem>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.Engine.Incrementals.FileAttributeItem>>.IsReadOnly Dictionary<String, FileAttributeItem>.ICollection.IsSynchronized Dictionary<String, FileAttributeItem>.ICollection.SyncRoot Dictionary<String, FileAttributeItem>.IDictionary.IsFixedSize Dictionary<String, FileAttributeItem>.IDictionary.IsReadOnly Dictionary<String, FileAttributeItem>.IDictionary.Keys Dictionary<String, FileAttributeItem>.IDictionary.Values Dictionary<String, FileAttributeItem>.IDictionary.Item[Object] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Engine.Incrementals Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public class FileAttributes : Dictionary<string, FileAttributeItem>, IDictionary<string, FileAttributeItem>, ICollection<KeyValuePair<string, FileAttributeItem>>, IDictionary, ICollection, IReadOnlyDictionary<string, FileAttributeItem>, IReadOnlyCollection<KeyValuePair<string, FileAttributeItem>>, IEnumerable<KeyValuePair<string, FileAttributeItem>>, IEnumerable, ISerializable, IDeserializationCallback Implements System.Collections.Generic.IDictionary<TKey,TValue> System.Collections.Generic.ICollection<T> System.Collections.IDictionary System.Collections.ICollection System.Collections.Generic.IReadOnlyDictionary<TKey,TValue> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.Runtime.Serialization.ISerializable System.Runtime.Serialization.IDeserializationCallback (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.Incrementals.FileAttributeItem.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.Incrementals.FileAttributeItem.html",
    "title": "Class FileAttributeItem | DocFX website",
    "keywords": "Class FileAttributeItem Inheritance Object FileAttributeItem Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Engine.Incrementals Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public class FileAttributeItem Properties | Improve this Doc View Source File The file path Declaration public string File { get; set; } Property Value Type Description String | Improve this Doc View Source IsFromSource Whether the file is from source or dependency Declaration public bool IsFromSource { get; set; } Property Value Type Description Boolean | Improve this Doc View Source LastModifiedTime Last modified time Declaration public DateTime LastModifiedTime { get; set; } Property Value Type Description DateTime | Improve this Doc View Source MD5 MD5 string of the file content Declaration public string MD5 { get; set; } Property Value Type Description String (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.Incrementals.DependencyItemSourceInfo.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.Incrementals.DependencyItemSourceInfo.html",
    "title": "Class DependencyItemSourceInfo | DocFX website",
    "keywords": "Class DependencyItemSourceInfo Inheritance Object DependencyItemSourceInfo Implements IEquatable < DependencyItemSourceInfo > Inherited Members Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Engine.Incrementals Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public class DependencyItemSourceInfo : IEquatable<DependencyItemSourceInfo> Constructors | Improve this Doc View Source DependencyItemSourceInfo(String, String) Declaration [JsonConstructor] public DependencyItemSourceInfo(string sourceType, string value) Parameters Type Name Description String sourceType String value Properties | Improve this Doc View Source SourceType Declaration [JsonProperty(\"sourceType\")] public string SourceType { get; } Property Value Type Description String | Improve this Doc View Source Value Declaration [JsonProperty(\"value\")] public string Value { get; } Property Value Type Description String Methods | Improve this Doc View Source ChangeSourceType(String) Declaration public DependencyItemSourceInfo ChangeSourceType(string type) Parameters Type Name Description String type Returns Type Description DependencyItemSourceInfo | Improve this Doc View Source ChangeValue(String) Declaration public DependencyItemSourceInfo ChangeValue(string value) Parameters Type Name Description String value Returns Type Description DependencyItemSourceInfo | Improve this Doc View Source Equals(DependencyItemSourceInfo) Declaration public bool Equals(DependencyItemSourceInfo other) Parameters Type Name Description DependencyItemSourceInfo other Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides Object.Equals(Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides Object.GetHashCode() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() Operators | Improve this Doc View Source Equality(DependencyItemSourceInfo, DependencyItemSourceInfo) Declaration public static bool operator ==(DependencyItemSourceInfo a, DependencyItemSourceInfo b) Parameters Type Name Description DependencyItemSourceInfo a DependencyItemSourceInfo b Returns Type Description Boolean | Improve this Doc View Source Implicit(String to DependencyItemSourceInfo) Declaration public static implicit operator DependencyItemSourceInfo(string info) Parameters Type Name Description String info Returns Type Description DependencyItemSourceInfo | Improve this Doc View Source Inequality(DependencyItemSourceInfo, DependencyItemSourceInfo) Declaration public static bool operator !=(DependencyItemSourceInfo a, DependencyItemSourceInfo b) Parameters Type Name Description DependencyItemSourceInfo a DependencyItemSourceInfo b Returns Type Description Boolean Implements System.IEquatable<T> (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.Incrementals.DependencyItem.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.Incrementals.DependencyItem.html",
    "title": "Class DependencyItem | DocFX website",
    "keywords": "Class DependencyItem Inheritance Object DependencyItem Implements IEquatable < DependencyItem > Inherited Members Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Engine.Incrementals Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public sealed class DependencyItem : IEquatable<DependencyItem> Constructors | Improve this Doc View Source DependencyItem(DependencyItemSourceInfo, DependencyItemSourceInfo, DependencyItemSourceInfo, String) Declaration [JsonConstructor] public DependencyItem(DependencyItemSourceInfo from, DependencyItemSourceInfo to, DependencyItemSourceInfo reportedBy, string type) Parameters Type Name Description DependencyItemSourceInfo from DependencyItemSourceInfo to DependencyItemSourceInfo reportedBy String type Properties | Improve this Doc View Source From Declaration [JsonProperty(\"from\")] public DependencyItemSourceInfo From { get; } Property Value Type Description DependencyItemSourceInfo | Improve this Doc View Source ReportedBy Declaration [JsonProperty(\"reportedBy\")] public DependencyItemSourceInfo ReportedBy { get; } Property Value Type Description DependencyItemSourceInfo | Improve this Doc View Source To Declaration [JsonProperty(\"to\")] public DependencyItemSourceInfo To { get; } Property Value Type Description DependencyItemSourceInfo | Improve this Doc View Source Type Declaration [JsonProperty(\"type\")] public string Type { get; } Property Value Type Description String Methods | Improve this Doc View Source ChangeFrom(DependencyItemSourceInfo) Declaration public DependencyItem ChangeFrom(DependencyItemSourceInfo f) Parameters Type Name Description DependencyItemSourceInfo f Returns Type Description DependencyItem | Improve this Doc View Source ChangeReportedBy(DependencyItemSourceInfo) Declaration public DependencyItem ChangeReportedBy(DependencyItemSourceInfo r) Parameters Type Name Description DependencyItemSourceInfo r Returns Type Description DependencyItem | Improve this Doc View Source ChangeTo(DependencyItemSourceInfo) Declaration public DependencyItem ChangeTo(DependencyItemSourceInfo t) Parameters Type Name Description DependencyItemSourceInfo t Returns Type Description DependencyItem | Improve this Doc View Source Equals(DependencyItem) Declaration public bool Equals(DependencyItem dp) Parameters Type Name Description DependencyItem dp Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides Object.Equals(Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides Object.GetHashCode() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() Implements System.IEquatable<T> (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.Incrementals.DependencyGraph.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.Incrementals.DependencyGraph.html",
    "title": "Class DependencyGraph | DocFX website",
    "keywords": "Class DependencyGraph Inheritance Object DependencyGraph Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Engine.Incrementals Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public sealed class DependencyGraph Properties | Improve this Doc View Source DependencyTypes Declaration public IReadOnlyDictionary<string, DependencyType> DependencyTypes { get; } Property Value Type Description IReadOnlyDictionary < String , DependencyType > | Improve this Doc View Source FromNodes Declaration public IEnumerable<string> FromNodes { get; } Property Value Type Description IEnumerable < String > | Improve this Doc View Source ReferenceReportedBys Declaration public IEnumerable<string> ReferenceReportedBys { get; } Property Value Type Description IEnumerable < String > | Improve this Doc View Source ReportedBys Declaration public IEnumerable<string> ReportedBys { get; } Property Value Type Description IEnumerable < String > | Improve this Doc View Source ToNodes Declaration public IEnumerable<string> ToNodes { get; } Property Value Type Description IEnumerable < String > Methods | Improve this Doc View Source GetAllDependencyFrom(String) Declaration public HashSet<DependencyItem> GetAllDependencyFrom(string from) Parameters Type Name Description String from Returns Type Description HashSet < DependencyItem > | Improve this Doc View Source GetAllDependencyTo(String) Declaration public HashSet<DependencyItem> GetAllDependencyTo(string to) Parameters Type Name Description String to Returns Type Description HashSet < DependencyItem > | Improve this Doc View Source GetAllDependentNodes() Declaration public HashSet<string> GetAllDependentNodes() Returns Type Description HashSet < String > | Improve this Doc View Source GetAllIncludeDependencyFrom(String) Declaration public HashSet<string> GetAllIncludeDependencyFrom(string from) Parameters Type Name Description String from Returns Type Description HashSet < String > | Improve this Doc View Source GetDependencyFrom(String) Declaration public HashSet<DependencyItem> GetDependencyFrom(string from) Parameters Type Name Description String from Returns Type Description HashSet < DependencyItem > | Improve this Doc View Source GetDependencyReportedBy(String) Declaration public HashSet<DependencyItem> GetDependencyReportedBy(string reportedBy) Parameters Type Name Description String reportedBy Returns Type Description HashSet < DependencyItem > | Improve this Doc View Source GetDependencyTo(String) Declaration public HashSet<DependencyItem> GetDependencyTo(string to) Parameters Type Name Description String to Returns Type Description HashSet < DependencyItem > | Improve this Doc View Source GetReferenceReportedBy(String) Declaration public HashSet<ReferenceItem> GetReferenceReportedBy(string reportedBy) Parameters Type Name Description String reportedBy Returns Type Description HashSet < ReferenceItem > | Improve this Doc View Source HasDependencyFrom(String) Declaration public bool HasDependencyFrom(string from) Parameters Type Name Description String from Returns Type Description Boolean | Improve this Doc View Source HasDependencyReportedBy(String) Declaration public bool HasDependencyReportedBy(string reportedBy) Parameters Type Name Description String reportedBy Returns Type Description Boolean | Improve this Doc View Source Load(TextReader) Declaration public static DependencyGraph Load(TextReader reader) Parameters Type Name Description TextReader reader Returns Type Description DependencyGraph | Improve this Doc View Source RegisterDependencyType(DependencyType) Declaration public void RegisterDependencyType(DependencyType dt) Parameters Type Name Description DependencyType dt | Improve this Doc View Source RegisterDependencyType(IEnumerable<DependencyType>) Declaration public void RegisterDependencyType(IEnumerable<DependencyType> dts) Parameters Type Name Description IEnumerable < DependencyType > dts | Improve this Doc View Source ReportDependency(DependencyItem) Declaration public void ReportDependency(DependencyItem dependency) Parameters Type Name Description DependencyItem dependency | Improve this Doc View Source ReportDependency(IEnumerable<DependencyItem>) Declaration public void ReportDependency(IEnumerable<DependencyItem> dependencies) Parameters Type Name Description IEnumerable < DependencyItem > dependencies | Improve this Doc View Source ReportReference(ReferenceItem) Declaration public void ReportReference(ReferenceItem reference) Parameters Type Name Description ReferenceItem reference | Improve this Doc View Source ReportReference(IEnumerable<ReferenceItem>) Declaration public void ReportReference(IEnumerable<ReferenceItem> references) Parameters Type Name Description IEnumerable < ReferenceItem > references | Improve this Doc View Source ResolveReference() Declaration public void ResolveReference() | Improve this Doc View Source Save(TextWriter) Declaration public void Save(TextWriter writer) Parameters Type Name Description TextWriter writer (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.Incrementals.BuildMessage.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.Incrementals.BuildMessage.html",
    "title": "Class BuildMessage | DocFX website",
    "keywords": "Class BuildMessage Inheritance Object Dictionary < BuildPhase , BuildMessageInfo > BuildMessage Implements IDictionary < BuildPhase , BuildMessageInfo > ICollection < KeyValuePair < BuildPhase , BuildMessageInfo >> IDictionary ICollection IReadOnlyDictionary < BuildPhase , BuildMessageInfo > IReadOnlyCollection < KeyValuePair < BuildPhase , BuildMessageInfo >> IEnumerable < KeyValuePair < BuildPhase , BuildMessageInfo >> IEnumerable ISerializable IDeserializationCallback Inherited Members Dictionary<BuildPhase, BuildMessageInfo>.Add(BuildPhase, BuildMessageInfo) System.Collections.Generic.Dictionary<BuildPhase, Microsoft.DocAsCode.Build.Engine.Incrementals.BuildMessageInfo>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<BuildPhase, Microsoft.DocAsCode.Build.Engine.Incrementals.BuildMessageInfo>>.Add(System.Collections.Generic.KeyValuePair<BuildPhase, Microsoft.DocAsCode.Build.Engine.Incrementals.BuildMessageInfo>) System.Collections.Generic.Dictionary<BuildPhase, Microsoft.DocAsCode.Build.Engine.Incrementals.BuildMessageInfo>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<BuildPhase, Microsoft.DocAsCode.Build.Engine.Incrementals.BuildMessageInfo>>.Contains(System.Collections.Generic.KeyValuePair<BuildPhase, Microsoft.DocAsCode.Build.Engine.Incrementals.BuildMessageInfo>) System.Collections.Generic.Dictionary<BuildPhase, Microsoft.DocAsCode.Build.Engine.Incrementals.BuildMessageInfo>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<BuildPhase, Microsoft.DocAsCode.Build.Engine.Incrementals.BuildMessageInfo>>.Remove(System.Collections.Generic.KeyValuePair<BuildPhase, Microsoft.DocAsCode.Build.Engine.Incrementals.BuildMessageInfo>) Dictionary<BuildPhase, BuildMessageInfo>.Clear() Dictionary<BuildPhase, BuildMessageInfo>.ContainsKey(BuildPhase) Dictionary<BuildPhase, BuildMessageInfo>.ContainsValue(BuildMessageInfo) Dictionary<BuildPhase, BuildMessageInfo>.GetEnumerator() System.Collections.Generic.Dictionary<BuildPhase, Microsoft.DocAsCode.Build.Engine.Incrementals.BuildMessageInfo>.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<BuildPhase, Microsoft.DocAsCode.Build.Engine.Incrementals.BuildMessageInfo>>.GetEnumerator() Dictionary<BuildPhase, BuildMessageInfo>.GetObjectData(SerializationInfo, StreamingContext) Dictionary<BuildPhase, BuildMessageInfo>.OnDeserialization(Object) Dictionary<BuildPhase, BuildMessageInfo>.Remove(BuildPhase) Dictionary<BuildPhase, BuildMessageInfo>.TryGetValue(BuildPhase, BuildMessageInfo) System.Collections.Generic.Dictionary<BuildPhase, Microsoft.DocAsCode.Build.Engine.Incrementals.BuildMessageInfo>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<BuildPhase, Microsoft.DocAsCode.Build.Engine.Incrementals.BuildMessageInfo>>.CopyTo(System.Collections.Generic.KeyValuePair<BuildPhase, Microsoft.DocAsCode.Build.Engine.Incrementals.BuildMessageInfo>[], System.Int32) Dictionary<BuildPhase, BuildMessageInfo>.ICollection.CopyTo(Array, Int32) Dictionary<BuildPhase, BuildMessageInfo>.IEnumerable.GetEnumerator() System.Collections.Generic.Dictionary<BuildPhase, Microsoft.DocAsCode.Build.Engine.Incrementals.BuildMessageInfo>.System.Collections.IDictionary.get_Item(System.Object) System.Collections.Generic.Dictionary<BuildPhase, Microsoft.DocAsCode.Build.Engine.Incrementals.BuildMessageInfo>.System.Collections.IDictionary.set_Item(System.Object, System.Object) Dictionary<BuildPhase, BuildMessageInfo>.IDictionary.Add(Object, Object) Dictionary<BuildPhase, BuildMessageInfo>.IDictionary.Contains(Object) Dictionary<BuildPhase, BuildMessageInfo>.IDictionary.GetEnumerator() Dictionary<BuildPhase, BuildMessageInfo>.IDictionary.Remove(Object) Dictionary<BuildPhase, BuildMessageInfo>.Comparer Dictionary<BuildPhase, BuildMessageInfo>.Count Dictionary<BuildPhase, BuildMessageInfo>.Keys System.Collections.Generic.Dictionary<BuildPhase, Microsoft.DocAsCode.Build.Engine.Incrementals.BuildMessageInfo>.System.Collections.Generic.IDictionary<BuildPhase, Microsoft.DocAsCode.Build.Engine.Incrementals.BuildMessageInfo>.Keys System.Collections.Generic.Dictionary<BuildPhase, Microsoft.DocAsCode.Build.Engine.Incrementals.BuildMessageInfo>.System.Collections.Generic.IReadOnlyDictionary<BuildPhase, Microsoft.DocAsCode.Build.Engine.Incrementals.BuildMessageInfo>.Keys Dictionary<BuildPhase, BuildMessageInfo>.Values System.Collections.Generic.Dictionary<BuildPhase, Microsoft.DocAsCode.Build.Engine.Incrementals.BuildMessageInfo>.System.Collections.Generic.IDictionary<BuildPhase, Microsoft.DocAsCode.Build.Engine.Incrementals.BuildMessageInfo>.Values System.Collections.Generic.Dictionary<BuildPhase, Microsoft.DocAsCode.Build.Engine.Incrementals.BuildMessageInfo>.System.Collections.Generic.IReadOnlyDictionary<BuildPhase, Microsoft.DocAsCode.Build.Engine.Incrementals.BuildMessageInfo>.Values Dictionary<BuildPhase, BuildMessageInfo>.Item[BuildPhase] System.Collections.Generic.Dictionary<BuildPhase, Microsoft.DocAsCode.Build.Engine.Incrementals.BuildMessageInfo>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<BuildPhase, Microsoft.DocAsCode.Build.Engine.Incrementals.BuildMessageInfo>>.IsReadOnly Dictionary<BuildPhase, BuildMessageInfo>.ICollection.IsSynchronized Dictionary<BuildPhase, BuildMessageInfo>.ICollection.SyncRoot Dictionary<BuildPhase, BuildMessageInfo>.IDictionary.IsFixedSize Dictionary<BuildPhase, BuildMessageInfo>.IDictionary.IsReadOnly Dictionary<BuildPhase, BuildMessageInfo>.IDictionary.Keys Dictionary<BuildPhase, BuildMessageInfo>.IDictionary.Values Dictionary<BuildPhase, BuildMessageInfo>.IDictionary.Item[Object] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Engine.Incrementals Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public class BuildMessage : Dictionary<BuildPhase, BuildMessageInfo>, IDictionary<BuildPhase, BuildMessageInfo>, ICollection<KeyValuePair<BuildPhase, BuildMessageInfo>>, IDictionary, ICollection, IReadOnlyDictionary<BuildPhase, BuildMessageInfo>, IReadOnlyCollection<KeyValuePair<BuildPhase, BuildMessageInfo>>, IEnumerable<KeyValuePair<BuildPhase, BuildMessageInfo>>, IEnumerable, ISerializable, IDeserializationCallback Implements System.Collections.Generic.IDictionary<TKey,TValue> System.Collections.Generic.ICollection<T> System.Collections.IDictionary System.Collections.ICollection System.Collections.Generic.IReadOnlyDictionary<TKey,TValue> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.Runtime.Serialization.ISerializable System.Runtime.Serialization.IDeserializationCallback (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.Incrementals.BuildInfo.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.Incrementals.BuildInfo.html",
    "title": "Class BuildInfo | DocFX website",
    "keywords": "Class BuildInfo Inheritance Object BuildInfo Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Engine.Incrementals Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public class BuildInfo Fields | Improve this Doc View Source FileName Declaration public const string FileName = \"build.info\" Field Value Type Description String Properties | Improve this Doc View Source BuildStartTime The build start time for this build. Declaration public DateTime BuildStartTime { get; set; } Property Value Type Description DateTime | Improve this Doc View Source CommitFromSHA The SHA of the current commit from. Declaration public string CommitFromSHA { get; set; } Property Value Type Description String | Improve this Doc View Source CommitToSHA The SHA of the current commit to. Declaration public string CommitToSHA { get; set; } Property Value Type Description String | Improve this Doc View Source DirectoryName The directory name from base dir. Declaration public string DirectoryName { get; set; } Property Value Type Description String | Improve this Doc View Source DocfxVersion The version of docfx. Declaration public string DocfxVersion { get; set; } Property Value Type Description String | Improve this Doc View Source IsValid Is this cache valid. Declaration public bool IsValid { get; set; } Property Value Type Description Boolean | Improve this Doc View Source PluginHash The hash info for all plugins. Declaration public string PluginHash { get; set; } Property Value Type Description String | Improve this Doc View Source PostProcessInfo The post process information Declaration public PostProcessInfo PostProcessInfo { get; set; } Property Value Type Description PostProcessInfo | Improve this Doc View Source TemplateHash The hash info for templates. Declaration public string TemplateHash { get; set; } Property Value Type Description String | Improve this Doc View Source Versions The file info for each version. Declaration public List<BuildVersionInfo> Versions { get; } Property Value Type Description List < BuildVersionInfo > Methods | Improve this Doc View Source Load(String) Declaration public static BuildInfo Load(string baseDir) Parameters Type Name Description String baseDir Returns Type Description BuildInfo | Improve this Doc View Source Load(String, Boolean) Declaration public static BuildInfo Load(string baseDir, bool onlyValid) Parameters Type Name Description String baseDir Boolean onlyValid Returns Type Description BuildInfo | Improve this Doc View Source Save(String) Declaration public void Save(string baseDir) Parameters Type Name Description String baseDir (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.Incrementals.BuildCacheException.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.Incrementals.BuildCacheException.html",
    "title": "Class BuildCacheException | DocFX website",
    "keywords": "Class BuildCacheException Inheritance Object Exception BuildCacheException Implements ISerializable _Exception Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.Message Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Engine.Incrementals Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax [Serializable] public class BuildCacheException : Exception, ISerializable, _Exception Constructors | Improve this Doc View Source BuildCacheException() Declaration public BuildCacheException() | Improve this Doc View Source BuildCacheException(String) Declaration public BuildCacheException(string message) Parameters Type Name Description String message | Improve this Doc View Source BuildCacheException(String, Exception) Declaration public BuildCacheException(string message, Exception inner) Parameters Type Name Description String message Exception inner Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.IInputFileAbstractLayerBuilderProvider.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.IInputFileAbstractLayerBuilderProvider.html",
    "title": "Interface IInputFileAbstractLayerBuilderProvider | DocFX website",
    "keywords": "Interface IInputFileAbstractLayerBuilderProvider Namespace : Microsoft.DocAsCode.Build.Engine Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public interface IInputFileAbstractLayerBuilderProvider Methods | Improve this Doc View Source Create(FileAbstractLayerBuilder, DocumentBuildParameters) Declaration FileAbstractLayerBuilder Create(FileAbstractLayerBuilder defaultBuilder, DocumentBuildParameters parameters) Parameters Type Name Description FileAbstractLayerBuilder defaultBuilder DocumentBuildParameters parameters Returns Type Description FileAbstractLayerBuilder (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.ExportSettings.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.ExportSettings.html",
    "title": "Class ExportSettings | DocFX website",
    "keywords": "Class ExportSettings Inheritance Object ExportSettings Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Engine Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public class ExportSettings Constructors | Improve this Doc View Source ExportSettings() Declaration public ExportSettings() | Improve this Doc View Source ExportSettings(ExportSettings) Declaration public ExportSettings(ExportSettings settings) Parameters Type Name Description ExportSettings settings Properties | Improve this Doc View Source Export Declaration public bool Export { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Extension Declaration public string Extension { get; set; } Property Value Type Description String | Improve this Doc View Source OutputFolder Declaration public string OutputFolder { get; set; } Property Value Type Description String | Improve this Doc View Source PathRewriter Declaration public Func<string, string> PathRewriter { get; set; } Property Value Type Description Func < String , String > (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.EmptyResourceReader.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.EmptyResourceReader.html",
    "title": "Class EmptyResourceReader | DocFX website",
    "keywords": "Class EmptyResourceReader Inheritance Object ResourceFileReader EmptyResourceReader Implements IResourceFileReader IDisposable Inherited Members ResourceFileReader.GetResource(String) ResourceFileReader.GetResources(String) ResourceFileReader.GetResourceStreams(String) ResourceFileReader.Dispose() ResourceFileReader.Dispose(Boolean) ResourceFileReader.GetString(Stream) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Engine Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public sealed class EmptyResourceReader : ResourceFileReader, IResourceFileReader, IDisposable Properties | Improve this Doc View Source IsEmpty Declaration public override bool IsEmpty { get; } Property Value Type Description Boolean Overrides ResourceFileReader.IsEmpty | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description String Overrides ResourceFileReader.Name | Improve this Doc View Source Names Declaration public override IEnumerable<string> Names { get; } Property Value Type Description IEnumerable < String > Overrides ResourceFileReader.Names Methods | Improve this Doc View Source GetResourceStream(String) Declaration public override Stream GetResourceStream(string name) Parameters Type Name Description String name Returns Type Description Stream Overrides ResourceFileReader.GetResourceStream(String) Implements IResourceFileReader System.IDisposable (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.DocumentBuildParameters.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.DocumentBuildParameters.html",
    "title": "Class DocumentBuildParameters | DocFX website",
    "keywords": "Class DocumentBuildParameters Inheritance Object MarshalByRefObject DocumentBuildParameters Implements IBuildParameters Inherited Members MarshalByRefObject.MemberwiseClone(Boolean) MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.CreateObjRef(Type) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Engine Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public sealed class DocumentBuildParameters : MarshalByRefObject, IBuildParameters Properties | Improve this Doc View Source ApplyTemplateSettings Declaration public ApplyTemplateSettings ApplyTemplateSettings { get; set; } Property Value Type Description ApplyTemplateSettings | Improve this Doc View Source Changes Declaration public ImmutableDictionary<string, ChangeKindWithDependency> Changes { get; set; } Property Value Type Description ImmutableDictionary < String , ChangeKindWithDependency > | Improve this Doc View Source CustomLinkResolver Declaration public string CustomLinkResolver { get; set; } Property Value Type Description String | Improve this Doc View Source DisableGitFeatures Declaration public bool DisableGitFeatures { get; set; } Property Value Type Description Boolean | Improve this Doc View Source ExternalReferencePackages Declaration public ImmutableArray<string> ExternalReferencePackages { get; set; } Property Value Type Description ImmutableArray < String > | Improve this Doc View Source FALName Declaration public string FALName { get; set; } Property Value Type Description String | Improve this Doc View Source FileMetadata Declaration public FileMetadata FileMetadata { get; set; } Property Value Type Description FileMetadata | Improve this Doc View Source Files Declaration public FileCollection Files { get; set; } Property Value Type Description FileCollection | Improve this Doc View Source ForcePostProcess Declaration public bool ForcePostProcess { get; set; } Property Value Type Description Boolean | Improve this Doc View Source ForceRebuild Declaration public bool ForceRebuild { get; set; } Property Value Type Description Boolean | Improve this Doc View Source GroupInfo Declaration public GroupInfo GroupInfo { get; set; } Property Value Type Description GroupInfo | Improve this Doc View Source KeepFileLink Declaration public bool KeepFileLink { get; set; } Property Value Type Description Boolean | Improve this Doc View Source LruSize Declaration public int LruSize { get; set; } Property Value Type Description Int32 | Improve this Doc View Source MarkdownEngineName Declaration public string MarkdownEngineName { get; set; } Property Value Type Description String | Improve this Doc View Source MarkdownEngineParameters Declaration public ImmutableDictionary<string, object> MarkdownEngineParameters { get; set; } Property Value Type Description ImmutableDictionary < String , Object > | Improve this Doc View Source MaxHttpParallelism Declaration public int MaxHttpParallelism { get; set; } Property Value Type Description Int32 | Improve this Doc View Source MaxParallelism Declaration public int MaxParallelism { get; set; } Property Value Type Description Int32 | Improve this Doc View Source Metadata Declaration public ImmutableDictionary<string, object> Metadata { get; set; } Property Value Type Description ImmutableDictionary < String , Object > | Improve this Doc View Source OutputBaseDir Declaration public string OutputBaseDir { get; set; } Property Value Type Description String | Improve this Doc View Source OverwriteFragmentsRedirectionRules Declaration public ImmutableArray<FolderRedirectionRule> OverwriteFragmentsRedirectionRules { get; set; } Property Value Type Description ImmutableArray < FolderRedirectionRule > | Improve this Doc View Source PostProcessors Declaration public ImmutableArray<string> PostProcessors { get; set; } Property Value Type Description ImmutableArray < String > | Improve this Doc View Source RootTocPath Declaration public string RootTocPath { get; set; } Property Value Type Description String | Improve this Doc View Source SchemaLicense Declaration public string SchemaLicense { get; set; } Property Value Type Description String | Improve this Doc View Source SitemapOptions Declaration public SitemapOptions SitemapOptions { get; set; } Property Value Type Description SitemapOptions | Improve this Doc View Source TagParameters Declaration public IReadOnlyDictionary<string, JArray> TagParameters { get; set; } Property Value Type Description IReadOnlyDictionary < String , Newtonsoft.Json.Linq.JArray > | Improve this Doc View Source TemplateDir Declaration public string TemplateDir { get; set; } Property Value Type Description String | Improve this Doc View Source TemplateManager Declaration public TemplateManager TemplateManager { get; set; } Property Value Type Description TemplateManager | Improve this Doc View Source VersionDir Declaration public string VersionDir { get; set; } Property Value Type Description String | Improve this Doc View Source VersionName Declaration public string VersionName { get; set; } Property Value Type Description String | Improve this Doc View Source XRefMaps Declaration public ImmutableArray<string> XRefMaps { get; set; } Property Value Type Description ImmutableArray < String > | Improve this Doc View Source XRefServiceUrls Declaration public ImmutableArray<string> XRefServiceUrls { get; set; } Property Value Type Description ImmutableArray < String > | Improve this Doc View Source XRefTags Declaration public List<string> XRefTags { get; set; } Property Value Type Description List < String > Methods | Improve this Doc View Source Clone() Declaration public DocumentBuildParameters Clone() Returns Type Description DocumentBuildParameters Implements IBuildParameters (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.DocumentBuilder.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.DocumentBuilder.html",
    "title": "Class DocumentBuilder | DocFX website",
    "keywords": "Class DocumentBuilder Inheritance Object DocumentBuilder Implements IDisposable Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Engine Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public class DocumentBuilder : IDisposable Constructors | Improve this Doc View Source DocumentBuilder(IEnumerable<Assembly>, ImmutableArray<String>, String, String, String, String, Boolean) Declaration public DocumentBuilder(IEnumerable<Assembly> assemblies, ImmutableArray<string> postProcessorNames, string templateHash, string intermediateFolder = null, string commitFromSHA = null, string commitToSHA = null, bool cleanupCacheHistory = false) Parameters Type Name Description IEnumerable < Assembly > assemblies ImmutableArray < String > postProcessorNames String templateHash String intermediateFolder String commitFromSHA String commitToSHA Boolean cleanupCacheHistory Methods | Improve this Doc View Source Build(DocumentBuildParameters) Declaration public void Build(DocumentBuildParameters parameter) Parameters Type Name Description DocumentBuildParameters parameter | Improve this Doc View Source Build(IList<DocumentBuildParameters>, String) Declaration public void Build(IList<DocumentBuildParameters> parameters, string outputDirectory) Parameters Type Name Description IList < DocumentBuildParameters > parameters String outputDirectory | Improve this Doc View Source Dispose() Declaration public void Dispose() Implements System.IDisposable (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.DfmJsonTokenTreeServiceProvider.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.DfmJsonTokenTreeServiceProvider.html",
    "title": "Class DfmJsonTokenTreeServiceProvider | DocFX website",
    "keywords": "Class DfmJsonTokenTreeServiceProvider Inheritance Object DfmJsonTokenTreeServiceProvider Namespace : Microsoft.DocAsCode.Build.Engine Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax [Export(\"dfmJsonTokenTree\", typeof(IMarkdownServiceProvider))] public class DfmJsonTokenTreeServiceProvider : IMarkdownServiceProvider Properties | Improve this Doc View Source TokenTreeValidator Declaration [ImportMany] public IEnumerable<IMarkdownTokenTreeValidator> TokenTreeValidator { get; set; } Property Value Type Description IEnumerable < IMarkdownTokenTreeValidator > Methods | Improve this Doc View Source CreateMarkdownService(MarkdownServiceParameters) Declaration public IMarkdownService CreateMarkdownService(MarkdownServiceParameters parameters) Parameters Type Name Description MarkdownServiceParameters parameters Returns Type Description IMarkdownService (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.CompositeResourceReader.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.CompositeResourceReader.html",
    "title": "Class CompositeResourceReader | DocFX website",
    "keywords": "Class CompositeResourceReader Inheritance Object ResourceFileReader CompositeResourceReader Implements IResourceFileReader IDisposable Inherited Members ResourceFileReader.GetResource(String) ResourceFileReader.GetResources(String) ResourceFileReader.GetResourceStreams(String) ResourceFileReader.Dispose() ResourceFileReader.GetString(Stream) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Engine Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public sealed class CompositeResourceReader : ResourceFileReader, IResourceFileReader, IDisposable Constructors | Improve this Doc View Source CompositeResourceReader(IEnumerable<ResourceFileReader>) Declaration public CompositeResourceReader(IEnumerable<ResourceFileReader> collectionsInOverriddenOrder) Parameters Type Name Description IEnumerable < ResourceFileReader > collectionsInOverriddenOrder Properties | Improve this Doc View Source IsEmpty Declaration public override bool IsEmpty { get; } Property Value Type Description Boolean Overrides ResourceFileReader.IsEmpty | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description String Overrides ResourceFileReader.Name | Improve this Doc View Source Names Declaration public override IEnumerable<string> Names { get; } Property Value Type Description IEnumerable < String > Overrides ResourceFileReader.Names Methods | Improve this Doc View Source Dispose(Boolean) Declaration protected override void Dispose(bool disposing) Parameters Type Name Description Boolean disposing Overrides ResourceFileReader.Dispose(Boolean) | Improve this Doc View Source GetResourceStream(String) Declaration public override Stream GetResourceStream(string name) Parameters Type Name Description String name Returns Type Description Stream Overrides ResourceFileReader.GetResourceStream(String) Implements IResourceFileReader System.IDisposable (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.BuildPhaseUtility.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.BuildPhaseUtility.html",
    "title": "Class BuildPhaseUtility | DocFX website",
    "keywords": "Class BuildPhaseUtility Inheritance Object BuildPhaseUtility Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Engine Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public static class BuildPhaseUtility Methods | Improve this Doc View Source GetPhaseMessageInfo(BuildMessage, BuildPhase) Declaration public static BuildMessageInfo GetPhaseMessageInfo(BuildMessage messages, BuildPhase phase) Parameters Type Name Description BuildMessage messages BuildPhase phase Returns Type Description BuildMessageInfo | Improve this Doc View Source RunBuildSteps(IEnumerable<IDocumentBuildStep>, Action<IDocumentBuildStep>) Declaration public static void RunBuildSteps(IEnumerable<IDocumentBuildStep> buildSteps, Action<IDocumentBuildStep> action) Parameters Type Name Description IEnumerable < IDocumentBuildStep > buildSteps Action < IDocumentBuildStep > action (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.BasicXRefMapReader.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.BasicXRefMapReader.html",
    "title": "Class BasicXRefMapReader | DocFX website",
    "keywords": "Class BasicXRefMapReader Inheritance Object BasicXRefMapReader Implements IXRefContainerReader Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Engine Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public class BasicXRefMapReader : IXRefContainerReader Constructors | Improve this Doc View Source BasicXRefMapReader(XRefMap) Declaration public BasicXRefMapReader(XRefMap map) Parameters Type Name Description XRefMap map Properties | Improve this Doc View Source Map Declaration protected XRefMap Map { get; } Property Value Type Description XRefMap Methods | Improve this Doc View Source Find(String) Declaration public virtual XRefSpec Find(string uid) Parameters Type Name Description String uid Returns Type Description XRefSpec Implements IXRefContainerReader (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.ArchiveResourceReader.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.ArchiveResourceReader.html",
    "title": "Class ArchiveResourceReader | DocFX website",
    "keywords": "Class ArchiveResourceReader Inheritance Object ResourceFileReader ArchiveResourceReader Implements IResourceFileReader IDisposable Inherited Members ResourceFileReader.GetResources(String) ResourceFileReader.GetResourceStreams(String) ResourceFileReader.Dispose() ResourceFileReader.GetString(Stream) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Engine Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public sealed class ArchiveResourceReader : ResourceFileReader, IResourceFileReader, IDisposable Constructors | Improve this Doc View Source ArchiveResourceReader(Stream, String) Declaration public ArchiveResourceReader(Stream stream, string name) Parameters Type Name Description Stream stream String name Properties | Improve this Doc View Source IsEmpty Declaration public override bool IsEmpty { get; } Property Value Type Description Boolean Overrides ResourceFileReader.IsEmpty | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description String Overrides ResourceFileReader.Name | Improve this Doc View Source Names Declaration public override IEnumerable<string> Names { get; } Property Value Type Description IEnumerable < String > Overrides ResourceFileReader.Names Methods | Improve this Doc View Source Dispose(Boolean) Declaration protected override void Dispose(bool disposing) Parameters Type Name Description Boolean disposing Overrides ResourceFileReader.Dispose(Boolean) | Improve this Doc View Source GetResource(String) Declaration public override string GetResource(string name) Parameters Type Name Description String name Returns Type Description String Overrides ResourceFileReader.GetResource(String) | Improve this Doc View Source GetResourceStream(String) TODO: This is not thread safe, only expose GetResource in interface Declaration public override Stream GetResourceStream(string name) Parameters Type Name Description String name Returns Type Description Stream Overrides ResourceFileReader.GetResourceStream(String) Implements IResourceFileReader System.IDisposable (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.ApplyTemplateSettings.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.ApplyTemplateSettings.html",
    "title": "Class ApplyTemplateSettings | DocFX website",
    "keywords": "Class ApplyTemplateSettings Inheritance Object ApplyTemplateSettings Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Engine Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public class ApplyTemplateSettings Constructors | Improve this Doc View Source ApplyTemplateSettings(String, String) Declaration public ApplyTemplateSettings(string inputFolder, string outputFolder) Parameters Type Name Description String inputFolder String outputFolder | Improve this Doc View Source ApplyTemplateSettings(String, String, String, Boolean) Declaration public ApplyTemplateSettings(string inputFolder, string outputFolder, string debugOutputFolder, bool debugMode) Parameters Type Name Description String inputFolder String outputFolder String debugOutputFolder Boolean debugMode Fields | Improve this Doc View Source DefaultRawModelExportSettings Declaration public static readonly ExportSettings DefaultRawModelExportSettings Field Value Type Description ExportSettings | Improve this Doc View Source DefaultViewModelExportSettings Declaration public static readonly ExportSettings DefaultViewModelExportSettings Field Value Type Description ExportSettings Properties | Improve this Doc View Source DebugMode Declaration public bool DebugMode { get; } Property Value Type Description Boolean | Improve this Doc View Source HrefGenerator Declaration public ICustomHrefGenerator HrefGenerator { get; set; } Property Value Type Description ICustomHrefGenerator | Improve this Doc View Source InputFolder Declaration public string InputFolder { get; } Property Value Type Description String | Improve this Doc View Source Options Declaration public ApplyTemplateOptions Options { get; } Property Value Type Description ApplyTemplateOptions | Improve this Doc View Source OutputFolder Declaration public string OutputFolder { get; } Property Value Type Description String | Improve this Doc View Source RawModelExportSettings Declaration public ExportSettings RawModelExportSettings { get; set; } Property Value Type Description ExportSettings | Improve this Doc View Source RawModelExportSettingsForDebug Declaration public ExportSettings RawModelExportSettingsForDebug { get; set; } Property Value Type Description ExportSettings | Improve this Doc View Source TransformDocument Declaration public bool TransformDocument { get; set; } Property Value Type Description Boolean | Improve this Doc View Source ViewModelExportSettings Declaration public ExportSettings ViewModelExportSettings { get; set; } Property Value Type Description ExportSettings | Improve this Doc View Source ViewModelExportSettingsForDebug Declaration public ExportSettings ViewModelExportSettingsForDebug { get; set; } Property Value Type Description ExportSettings (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Common.FileModelPropertySerialization.html": {
    "href": "api/Microsoft.DocAsCode.Build.Common.FileModelPropertySerialization.html",
    "title": "Class FileModelPropertySerialization | DocFX website",
    "keywords": "Class FileModelPropertySerialization Inheritance Object FileModelPropertySerialization Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Common Assembly : Microsoft.DocAsCode.Build.Common.dll Syntax public static class FileModelPropertySerialization Methods | Improve this Doc View Source Deserialize(Stream, IFormatter, Func<Stream, Object>, Func<Stream, IDictionary<String, Object>>, Action<Stream, FileModel>) Declaration public static FileModel Deserialize(Stream stream, IFormatter formatter, Func<Stream, object> contentDeserializer, Func<Stream, IDictionary<string, object>> propertyDeserializer, Action<Stream, FileModel> otherDeserializer) Parameters Type Name Description Stream stream IFormatter formatter Func < Stream , Object > contentDeserializer Func < Stream , IDictionary < String , Object >> propertyDeserializer Action < Stream , FileModel > otherDeserializer Returns Type Description FileModel | Improve this Doc View Source Serialize(FileModel, Stream, Action<Object, Stream>, Action<IDictionary<String, Object>, Stream>, Action<FileModel, Stream>) Declaration public static void Serialize(FileModel model, Stream stream, Action<object, Stream> contentSerializer, Action<IDictionary<string, object>, Stream> propertySerializer, Action<FileModel, Stream> otherSerializer) Parameters Type Name Description FileModel model Stream stream Action < Object , Stream > contentSerializer Action < IDictionary < String , Object >, Stream > propertySerializer Action < FileModel , Stream > otherSerializer (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Common.DisposableDocumentProcessor.html": {
    "href": "api/Microsoft.DocAsCode.Build.Common.DisposableDocumentProcessor.html",
    "title": "Class DisposableDocumentProcessor | DocFX website",
    "keywords": "Class DisposableDocumentProcessor Inheritance Object DisposableDocumentProcessor ReferenceDocumentProcessorBase ConceptualDocumentProcessor ResourceDocumentProcessor SchemaDrivenDocumentProcessor TocDocumentProcessorBase Implements IDisposable Namespace : Microsoft.DocAsCode.Build.Common Assembly : Microsoft.DocAsCode.Build.Common.dll Syntax public abstract class DisposableDocumentProcessor : IDocumentProcessor, IDisposable Properties | Improve this Doc View Source BuildSteps Declaration public abstract IEnumerable<IDocumentBuildStep> BuildSteps { get; set; } Property Value Type Description IEnumerable < IDocumentBuildStep > | Improve this Doc View Source Name Declaration public abstract string Name { get; } Property Value Type Description String Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source GetProcessingPriority(FileAndType) Declaration public abstract ProcessingPriority GetProcessingPriority(FileAndType file) Parameters Type Name Description FileAndType file Returns Type Description ProcessingPriority | Improve this Doc View Source Load(FileAndType, ImmutableDictionary<String, Object>) Declaration public abstract FileModel Load(FileAndType file, ImmutableDictionary<string, object> metadata) Parameters Type Name Description FileAndType file ImmutableDictionary < String , Object > metadata Returns Type Description FileModel | Improve this Doc View Source Save(FileModel) Declaration public abstract SaveResult Save(FileModel model) Parameters Type Name Description FileModel model Returns Type Description SaveResult | Improve this Doc View Source UpdateHref(FileModel, IDocumentBuildContext) Declaration public virtual void UpdateHref(FileModel model, IDocumentBuildContext context) Parameters Type Name Description FileModel model IDocumentBuildContext context Implements System.IDisposable (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Common.BaseModelAttributeHandler-1.html": {
    "href": "api/Microsoft.DocAsCode.Build.Common.BaseModelAttributeHandler-1.html",
    "title": "Class BaseModelAttributeHandler<T> | DocFX website",
    "keywords": "Class BaseModelAttributeHandler<T> Inheritance Object BaseModelAttributeHandler<T> Implements IModelAttributeHandler Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Common Assembly : Microsoft.DocAsCode.Build.Common.dll Syntax public abstract class BaseModelAttributeHandler<T> : IModelAttributeHandler where T : Attribute Type Parameters Name Description T Constructors | Improve this Doc View Source BaseModelAttributeHandler(Type, IModelAttributeHandler) Declaration protected BaseModelAttributeHandler(Type type, IModelAttributeHandler handler) Parameters Type Name Description Type type IModelAttributeHandler handler Fields | Improve this Doc View Source Handler Declaration protected readonly IModelAttributeHandler Handler Field Value Type Description IModelAttributeHandler Methods | Improve this Doc View Source GetProps(Type) Declaration protected virtual IEnumerable<BaseModelAttributeHandler<T>.PropInfo> GetProps(Type type) Parameters Type Name Description Type type Returns Type Description IEnumerable < BaseModelAttributeHandler.PropInfo <>> | Improve this Doc View Source Handle(Object, HandleModelAttributesContext) Declaration public object Handle(object obj, HandleModelAttributesContext context) Parameters Type Name Description Object obj HandleModelAttributesContext context Returns Type Description Object | Improve this Doc View Source HandleCurrent(Object, Object, PropertyInfo, HandleModelAttributesContext) Declaration protected abstract object HandleCurrent(object currentObj, object declaringObject, PropertyInfo currentPropertyInfo, HandleModelAttributesContext context) Parameters Type Name Description Object currentObj Object declaringObject PropertyInfo currentPropertyInfo HandleModelAttributesContext context Returns Type Description Object | Improve this Doc View Source HandleDictionaryType(Object, HandleModelAttributesContext) By default enumerate Dictionary's value if it does not have defined Attribute Declaration protected virtual object HandleDictionaryType(object currentObj, HandleModelAttributesContext context) Parameters Type Name Description Object currentObj HandleModelAttributesContext context Returns Type Description Object | Improve this Doc View Source HandleIEnumerableType(Object, HandleModelAttributesContext) By default enumerate Enumerable type if it does not have defined Attribute Declaration protected virtual object HandleIEnumerableType(object currentObj, HandleModelAttributesContext context) Parameters Type Name Description Object currentObj HandleModelAttributesContext context Returns Type Description Object | Improve this Doc View Source ProcessNonPrimitiveType(Object, HandleModelAttributesContext) By default step into NonPrimitive type if it does not have defined Attribute Declaration protected virtual object ProcessNonPrimitiveType(object currentObj, HandleModelAttributesContext context) Parameters Type Name Description Object currentObj HandleModelAttributesContext context Returns Type Description Object | Improve this Doc View Source ProcessPrimitiveType(Object, HandleModelAttributesContext) By default skip Primitive type if it does not have defined Attribute Declaration protected virtual object ProcessPrimitiveType(object currentObj, HandleModelAttributesContext context) Parameters Type Name Description Object currentObj HandleModelAttributesContext context Returns Type Description Object | Improve this Doc View Source ShouldHandle(Object, Object, BaseModelAttributeHandler<T>.PropInfo, HandleModelAttributesContext) Declaration protected virtual bool ShouldHandle(object currentObj, object declaringObject, BaseModelAttributeHandler<T>.PropInfo currentPropInfo, HandleModelAttributesContext context) Parameters Type Name Description Object currentObj Object declaringObject BaseModelAttributeHandler.PropInfo <> currentPropInfo HandleModelAttributesContext context Returns Type Description Boolean Implements IModelAttributeHandler (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Common.BaseModelAttributeHandler-1.PropInfo.html": {
    "href": "api/Microsoft.DocAsCode.Build.Common.BaseModelAttributeHandler-1.PropInfo.html",
    "title": "Class BaseModelAttributeHandler<T>.PropInfo | DocFX website",
    "keywords": "Class BaseModelAttributeHandler<T>.PropInfo Inheritance Object BaseModelAttributeHandler<T>.PropInfo Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Common Assembly : Microsoft.DocAsCode.Build.Common.dll Syntax protected sealed class PropInfo Properties | Improve this Doc View Source Attr Declaration public Attribute Attr { get; set; } Property Value Type Description Attribute | Improve this Doc View Source Prop Declaration public PropertyInfo Prop { get; set; } Property Value Type Description PropertyInfo (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.html",
    "title": "Namespace Microsoft.DocAsCode.AzureMarkdownRewriters | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.AzureMarkdownRewriters Classes AzureBlockquoteBlockRule AzureBlockquoteBlockToken AzureEngineBuilder AzureFileInfo AzureHtmlMetadataBlockRule AzureHtmlMetadataBlockToken AzureIncludeBasicToken AzureIncludeBlockRule AzureIncludeBlockToken AzureIncludeInlineRule AzureIncludeInlineToken AzureMarkdownRenderer AzureMarked AzureMigrationEngineBuilder AzureMigrationHtmlMetadataBlockRule AzureMigrationIncludeBasicToken AzureMigrationIncludeBlockRule AzureMigrationIncludeBlockToken AzureMigrationIncludeInlineRule AzureMigrationIncludeInlineToken AzureMigrationMarked AzureMigrationVideoBlockRule AzureNoteBlockRule AzureNoteBlockToken AzureSelectorBlockRule AzureSelectorBlockToken AzureVideoBlockRule AzureVideoBlockToken AzureVideoInfo (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureVideoInfo.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureVideoInfo.html",
    "title": "Class AzureVideoInfo | DocFX website",
    "keywords": "Class AzureVideoInfo Inheritance Object AzureVideoInfo Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.AzureMarkdownRewriters Assembly : Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureVideoInfo Properties | Improve this Doc View Source Height Indicate the video height Declaration public int Height { get; set; } Property Value Type Description Int32 | Improve this Doc View Source Id Indicate the azure video id Declaration public string Id { get; set; } Property Value Type Description String | Improve this Doc View Source Link Indicate the azure video link Declaration public string Link { get; set; } Property Value Type Description String | Improve this Doc View Source Width Indicate the video width Declaration public int Width { get; set; } Property Value Type Description Int32 (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureVideoBlockToken.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureVideoBlockToken.html",
    "title": "Class AzureVideoBlockToken | DocFX website",
    "keywords": "Class AzureVideoBlockToken Inheritance Object AzureVideoBlockToken Namespace : Microsoft.DocAsCode.AzureMarkdownRewriters Assembly : Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureVideoBlockToken : IMarkdownToken Constructors | Improve this Doc View Source AzureVideoBlockToken(IMarkdownRule, IMarkdownContext, String, SourceInfo) Declaration public AzureVideoBlockToken(IMarkdownRule rule, IMarkdownContext context, string videoId, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context String videoId SourceInfo sourceInfo Properties | Improve this Doc View Source Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext | Improve this Doc View Source Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule | Improve this Doc View Source SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo | Improve this Doc View Source VideoId Declaration public string VideoId { get; } Property Value Type Description String (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureVideoBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureVideoBlockRule.html",
    "title": "Class AzureVideoBlockRule | DocFX website",
    "keywords": "Class AzureVideoBlockRule Inheritance Object AzureVideoBlockRule Namespace : Microsoft.DocAsCode.AzureMarkdownRewriters Assembly : Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureVideoBlockRule : IMarkdownRule Properties | Improve this Doc View Source AzureVideoRegex Declaration public virtual Regex AzureVideoRegex { get; } Property Value Type Description Regex | Improve this Doc View Source Name Declaration public virtual string Name { get; } Property Value Type Description String Methods | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public IMarkdownToken TryMatch(IMarkdownParser engine, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser engine IMarkdownParsingContext context Returns Type Description IMarkdownToken (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureNoteBlockToken.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureNoteBlockToken.html",
    "title": "Class AzureNoteBlockToken | DocFX website",
    "keywords": "Class AzureNoteBlockToken Inheritance Object AzureNoteBlockToken Namespace : Microsoft.DocAsCode.AzureMarkdownRewriters Assembly : Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureNoteBlockToken : IMarkdownToken Constructors | Improve this Doc View Source AzureNoteBlockToken(IMarkdownRule, IMarkdownContext, String, String, SourceInfo) Declaration public AzureNoteBlockToken(IMarkdownRule rule, IMarkdownContext context, string noteType, string content, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context String noteType String content SourceInfo sourceInfo Properties | Improve this Doc View Source Content Declaration public string Content { get; } Property Value Type Description String | Improve this Doc View Source Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext | Improve this Doc View Source NoteType Declaration public string NoteType { get; } Property Value Type Description String | Improve this Doc View Source Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule | Improve this Doc View Source SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureNoteBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureNoteBlockRule.html",
    "title": "Class AzureNoteBlockRule | DocFX website",
    "keywords": "Class AzureNoteBlockRule Inheritance Object AzureNoteBlockRule Namespace : Microsoft.DocAsCode.AzureMarkdownRewriters Assembly : Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureNoteBlockRule : IMarkdownRule Properties | Improve this Doc View Source AzureNoteRegex Declaration public virtual Regex AzureNoteRegex { get; } Property Value Type Description Regex | Improve this Doc View Source Name Declaration public virtual string Name { get; } Property Value Type Description String Methods | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public virtual IMarkdownToken TryMatch(IMarkdownParser engine, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser engine IMarkdownParsingContext context Returns Type Description IMarkdownToken (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureMigrationIncludeInlineToken.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureMigrationIncludeInlineToken.html",
    "title": "Class AzureMigrationIncludeInlineToken | DocFX website",
    "keywords": "Class AzureMigrationIncludeInlineToken Inheritance Object AzureMigrationIncludeBasicToken AzureMigrationIncludeInlineToken Inherited Members AzureMigrationIncludeBasicToken.Rule AzureMigrationIncludeBasicToken.Context AzureMigrationIncludeBasicToken.Name AzureMigrationIncludeBasicToken.Src AzureMigrationIncludeBasicToken.Title AzureMigrationIncludeBasicToken.SourceInfo Namespace : Microsoft.DocAsCode.AzureMarkdownRewriters Assembly : Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureMigrationIncludeInlineToken : AzureMigrationIncludeBasicToken Constructors | Improve this Doc View Source AzureMigrationIncludeInlineToken(IMarkdownRule, IMarkdownContext, String, String, String, SourceInfo) Declaration public AzureMigrationIncludeInlineToken(IMarkdownRule rule, IMarkdownContext context, string name, string src, string title, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context String name String src String title SourceInfo sourceInfo (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureMigrationIncludeInlineRule.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureMigrationIncludeInlineRule.html",
    "title": "Class AzureMigrationIncludeInlineRule | DocFX website",
    "keywords": "Class AzureMigrationIncludeInlineRule Inheritance Object AzureMigrationIncludeInlineRule Namespace : Microsoft.DocAsCode.AzureMarkdownRewriters Assembly : Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureMigrationIncludeInlineRule : IMarkdownRule Properties | Improve this Doc View Source AzureIncludeRegex Declaration public virtual Regex AzureIncludeRegex { get; } Property Value Type Description Regex | Improve this Doc View Source Name Declaration public virtual string Name { get; } Property Value Type Description String Methods | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public IMarkdownToken TryMatch(IMarkdownParser engine, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser engine IMarkdownParsingContext context Returns Type Description IMarkdownToken (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureMigrationHtmlMetadataBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureMigrationHtmlMetadataBlockRule.html",
    "title": "Class AzureMigrationHtmlMetadataBlockRule | DocFX website",
    "keywords": "Class AzureMigrationHtmlMetadataBlockRule Inheritance Object AzureMigrationHtmlMetadataBlockRule Namespace : Microsoft.DocAsCode.AzureMarkdownRewriters Assembly : Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureMigrationHtmlMetadataBlockRule : IMarkdownRule Properties | Improve this Doc View Source AzureHtmlMetadataRegex Declaration public virtual Regex AzureHtmlMetadataRegex { get; } Property Value Type Description Regex | Improve this Doc View Source Name Declaration public virtual string Name { get; } Property Value Type Description String Methods | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public virtual IMarkdownToken TryMatch(IMarkdownParser engine, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser engine IMarkdownParsingContext context Returns Type Description IMarkdownToken (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureMigrationEngineBuilder.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureMigrationEngineBuilder.html",
    "title": "Class AzureMigrationEngineBuilder | DocFX website",
    "keywords": "Class AzureMigrationEngineBuilder Inheritance Object AzureMigrationEngineBuilder Namespace : Microsoft.DocAsCode.AzureMarkdownRewriters Assembly : Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureMigrationEngineBuilder : GfmEngineBuilder Constructors | Improve this Doc View Source AzureMigrationEngineBuilder(Options) Declaration public AzureMigrationEngineBuilder(Options options) Parameters Type Name Description Options options Methods | Improve this Doc View Source BuildBlockRules() Declaration protected override void BuildBlockRules() | Improve this Doc View Source BuildInlineRules() Declaration protected override void BuildInlineRules() | Improve this Doc View Source BuildRules() Declaration protected override void BuildRules() | Improve this Doc View Source CreateEngine(Object) Declaration public override IMarkdownEngine CreateEngine(object renderer) Parameters Type Name Description Object renderer Returns Type Description IMarkdownEngine | Improve this Doc View Source CreateRewriters() Declaration protected void CreateRewriters() (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureMarkdownRenderer.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureMarkdownRenderer.html",
    "title": "Class AzureMarkdownRenderer | DocFX website",
    "keywords": "Class AzureMarkdownRenderer Inheritance Object DfmMarkdownRenderer AzureMarkdownRenderer Inherited Members DfmMarkdownRenderer.Render(IMarkdownRenderer, DfmIncludeInlineToken, MarkdownInlineContext) DfmMarkdownRenderer.Render(IMarkdownRenderer, DfmIncludeBlockToken, MarkdownBlockContext) DfmMarkdownRenderer.Render(IMarkdownRenderer, DfmNoteBlockToken, MarkdownBlockContext) DfmMarkdownRenderer.Render(IMarkdownRenderer, DfmYamlHeaderBlockToken, MarkdownBlockContext) DfmMarkdownRenderer.Render(IMarkdownRenderer, DfmSectionBlockToken, MarkdownBlockContext) DfmMarkdownRenderer.Render(IMarkdownRenderer, DfmVideoBlockToken, MarkdownBlockContext) DfmMarkdownRenderer.Render(IMarkdownRenderer, DfmTabGroupBlockToken, MarkdownBlockContext) Namespace : Microsoft.DocAsCode.AzureMarkdownRewriters Assembly : Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureMarkdownRenderer : DfmMarkdownRenderer Methods | Improve this Doc View Source Render(IMarkdownRenderer, AzureIncludeBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer render, AzureIncludeBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer render AzureIncludeBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, AzureIncludeInlineToken, MarkdownInlineContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer render, AzureIncludeInlineToken token, MarkdownInlineContext context) Parameters Type Name Description IMarkdownRenderer render AzureIncludeInlineToken token MarkdownInlineContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, AzureVideoBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer render, AzureVideoBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer render AzureVideoBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureIncludeInlineRule.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureIncludeInlineRule.html",
    "title": "Class AzureIncludeInlineRule | DocFX website",
    "keywords": "Class AzureIncludeInlineRule Inheritance Object AzureIncludeInlineRule Namespace : Microsoft.DocAsCode.AzureMarkdownRewriters Assembly : Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureIncludeInlineRule : IMarkdownRule Properties | Improve this Doc View Source AzureIncludeRegex Declaration public virtual Regex AzureIncludeRegex { get; } Property Value Type Description Regex | Improve this Doc View Source Name Declaration public virtual string Name { get; } Property Value Type Description String Methods | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public IMarkdownToken TryMatch(IMarkdownParser engine, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser engine IMarkdownParsingContext context Returns Type Description IMarkdownToken (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureIncludeBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureIncludeBlockRule.html",
    "title": "Class AzureIncludeBlockRule | DocFX website",
    "keywords": "Class AzureIncludeBlockRule Inheritance Object AzureIncludeBlockRule Namespace : Microsoft.DocAsCode.AzureMarkdownRewriters Assembly : Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureIncludeBlockRule : IMarkdownRule Properties | Improve this Doc View Source AzureIncludeRegex Declaration public virtual Regex AzureIncludeRegex { get; } Property Value Type Description Regex | Improve this Doc View Source Name Declaration public virtual string Name { get; } Property Value Type Description String Methods | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureHtmlMetadataBlockToken.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureHtmlMetadataBlockToken.html",
    "title": "Class AzureHtmlMetadataBlockToken | DocFX website",
    "keywords": "Class AzureHtmlMetadataBlockToken Inheritance Object AzureHtmlMetadataBlockToken Namespace : Microsoft.DocAsCode.AzureMarkdownRewriters Assembly : Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureHtmlMetadataBlockToken : IMarkdownToken Constructors | Improve this Doc View Source AzureHtmlMetadataBlockToken(IMarkdownRule, IMarkdownContext, IReadOnlyDictionary<String, String>, IReadOnlyDictionary<String, String>, SourceInfo) Declaration public AzureHtmlMetadataBlockToken(IMarkdownRule rule, IMarkdownContext context, IReadOnlyDictionary<string, string> properties, IReadOnlyDictionary<string, string> tags, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context IReadOnlyDictionary < String , String > properties IReadOnlyDictionary < String , String > tags SourceInfo sourceInfo Properties | Improve this Doc View Source Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext | Improve this Doc View Source Properties Declaration public IReadOnlyDictionary<string, string> Properties { get; set; } Property Value Type Description IReadOnlyDictionary < String , String > | Improve this Doc View Source Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule | Improve this Doc View Source SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo | Improve this Doc View Source Tags Declaration public IReadOnlyDictionary<string, string> Tags { get; set; } Property Value Type Description IReadOnlyDictionary < String , String > (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureFileInfo.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureFileInfo.html",
    "title": "Class AzureFileInfo | DocFX website",
    "keywords": "Class AzureFileInfo Inheritance Object AzureFileInfo Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.AzureMarkdownRewriters Assembly : Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureFileInfo Properties | Improve this Doc View Source FileName Indicate the azure file name. It's global unique in azure content Declaration public string FileName { get; set; } Property Value Type Description String | Improve this Doc View Source FilePath Indicate currently absolute path of azure file Declaration public string FilePath { get; set; } Property Value Type Description String | Improve this Doc View Source NeedTransformToAzureExternalLink Indicate whether the current relative path need to be changed to external link. If the current file is in docset, then false. Otherwise true. Declaration public bool NeedTransformToAzureExternalLink { get; set; } Property Value Type Description Boolean | Improve this Doc View Source UriPrefix Indicate the uri prefix except the asset id Declaration public string UriPrefix { get; set; } Property Value Type Description String (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureEngineBuilder.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureEngineBuilder.html",
    "title": "Class AzureEngineBuilder | DocFX website",
    "keywords": "Class AzureEngineBuilder Inheritance Object AzureEngineBuilder Namespace : Microsoft.DocAsCode.AzureMarkdownRewriters Assembly : Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureEngineBuilder : GfmEngineBuilder Constructors | Improve this Doc View Source AzureEngineBuilder(Options) Declaration public AzureEngineBuilder(Options options) Parameters Type Name Description Options options Methods | Improve this Doc View Source BuildBlockRules() Declaration protected override void BuildBlockRules() | Improve this Doc View Source BuildInlineRules() Declaration protected override void BuildInlineRules() | Improve this Doc View Source BuildRules() Declaration protected override void BuildRules() | Improve this Doc View Source CreateEngine(Object) Declaration public override IMarkdownEngine CreateEngine(object renderer) Parameters Type Name Description Object renderer Returns Type Description IMarkdownEngine | Improve this Doc View Source CreateRewriters() Declaration protected void CreateRewriters() (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.RoslynCompilation.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.RoslynCompilation.html",
    "title": "Class RoslynCompilation | DocFX website",
    "keywords": "Class RoslynCompilation Inheritance Object AbstractCompilation RoslynCompilation Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.Roslyn.dll Syntax public class RoslynCompilation : AbstractCompilation Constructors | Improve this Doc View Source RoslynCompilation(Compilation) Declaration public RoslynCompilation(Compilation compilation) Parameters Type Name Description Compilation compilation Properties | Improve this Doc View Source Compilation Declaration public Compilation Compilation { get; } Property Value Type Description Compilation Methods | Improve this Doc View Source GetBuildController() Declaration public override IBuildController GetBuildController() Returns Type Description IBuildController Overrides AbstractCompilation.GetBuildController() (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.ResolveReference.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.ResolveReference.html",
    "title": "Class ResolveReference | DocFX website",
    "keywords": "Class ResolveReference Inheritance Object ResolveReference Implements IResolverPipeline Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public class ResolveReference : IResolverPipeline Methods | Improve this Doc View Source Run(MetadataModel, ResolverContext) Declaration public void Run(MetadataModel yaml, ResolverContext context) Parameters Type Name Description MetadataModel yaml ResolverContext context Implements IResolverPipeline (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.DelegatingFilterVisitor.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.DelegatingFilterVisitor.html",
    "title": "Class DelegatingFilterVisitor | DocFX website",
    "keywords": "Class DelegatingFilterVisitor Inheritance Object DelegatingFilterVisitor CachedFilterVisitor ConfigFilterVisitor Implements IFilterVisitor Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.Roslyn.dll Syntax public class DelegatingFilterVisitor : IFilterVisitor Constructors | Improve this Doc View Source DelegatingFilterVisitor(IFilterVisitor) Declaration public DelegatingFilterVisitor(IFilterVisitor inner) Parameters Type Name Description IFilterVisitor inner Properties | Improve this Doc View Source Inner Declaration protected IFilterVisitor Inner { get; } Property Value Type Description IFilterVisitor Methods | Improve this Doc View Source CanVisitApi(ISymbol, Boolean, IFilterVisitor) Declaration public bool CanVisitApi(ISymbol symbol, bool wantProtectedMember, IFilterVisitor outer) Parameters Type Name Description ISymbol symbol Boolean wantProtectedMember IFilterVisitor outer Returns Type Description Boolean | Improve this Doc View Source CanVisitApiCore(ISymbol, Boolean, IFilterVisitor) Declaration protected virtual bool CanVisitApiCore(ISymbol symbol, bool wantProtectedMember, IFilterVisitor outer) Parameters Type Name Description ISymbol symbol Boolean wantProtectedMember IFilterVisitor outer Returns Type Description Boolean | Improve this Doc View Source CanVisitAttribute(ISymbol, Boolean, IFilterVisitor) Declaration public bool CanVisitAttribute(ISymbol symbol, bool wantProtectedMember, IFilterVisitor outer) Parameters Type Name Description ISymbol symbol Boolean wantProtectedMember IFilterVisitor outer Returns Type Description Boolean | Improve this Doc View Source CanVisitAttributeCore(ISymbol, Boolean, IFilterVisitor) Declaration protected virtual bool CanVisitAttributeCore(ISymbol symbol, bool wantProtectedMember, IFilterVisitor outer) Parameters Type Name Description ISymbol symbol Boolean wantProtectedMember IFilterVisitor outer Returns Type Description Boolean Implements IFilterVisitor Extension Methods FilterVisitorExtensions.WithConfig(IFilterVisitor, String) FilterVisitorExtensions.WithConfig(IFilterVisitor, ConfigFilterRule) FilterVisitorExtensions.WithCache(IFilterVisitor) (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.DefaultFilterVisitor.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.DefaultFilterVisitor.html",
    "title": "Class DefaultFilterVisitor | DocFX website",
    "keywords": "Class DefaultFilterVisitor Inheritance Object DefaultFilterVisitor Implements IFilterVisitor Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.Roslyn.dll Syntax public class DefaultFilterVisitor : IFilterVisitor Methods | Improve this Doc View Source CanVisitApi(ISymbol, Boolean, IFilterVisitor) Declaration public bool CanVisitApi(ISymbol symbol, bool wantProtectedMember, IFilterVisitor outer) Parameters Type Name Description ISymbol symbol Boolean wantProtectedMember IFilterVisitor outer Returns Type Description Boolean | Improve this Doc View Source CanVisitAttribute(ISymbol, Boolean, IFilterVisitor) Declaration public bool CanVisitAttribute(ISymbol symbol, bool wantProtectedMember, IFilterVisitor outer) Parameters Type Name Description ISymbol symbol Boolean wantProtectedMember IFilterVisitor outer Returns Type Description Boolean Implements IFilterVisitor Extension Methods FilterVisitorExtensions.WithConfig(IFilterVisitor, String) FilterVisitorExtensions.WithConfig(IFilterVisitor, ConfigFilterRule) FilterVisitorExtensions.WithCache(IFilterVisitor) (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.CSYamlModelGenerator.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.CSYamlModelGenerator.html",
    "title": "Class CSYamlModelGenerator | DocFX website",
    "keywords": "Class CSYamlModelGenerator Inheritance Object YamlModelGenerator SimpleYamlModelGenerator CSYamlModelGenerator Inherited Members SimpleYamlModelGenerator.ShortFormat SimpleYamlModelGenerator.QualifiedFormat SimpleYamlModelGenerator.Language Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.Roslyn.dll Syntax public class CSYamlModelGenerator : SimpleYamlModelGenerator Constructors | Improve this Doc View Source CSYamlModelGenerator() Declaration public CSYamlModelGenerator() Methods | Improve this Doc View Source DefaultVisit(ISymbol, MetadataItem, SymbolVisitorAdapter) Declaration public override void DefaultVisit(ISymbol symbol, MetadataItem item, SymbolVisitorAdapter adapter) Parameters Type Name Description ISymbol symbol MetadataItem item SymbolVisitorAdapter adapter Overrides YamlModelGenerator.DefaultVisit(ISymbol, MetadataItem, SymbolVisitorAdapter) | Improve this Doc View Source GenerateEvent(IEventSymbol, MetadataItem, SymbolVisitorAdapter) Declaration public override void GenerateEvent(IEventSymbol symbol, MetadataItem item, SymbolVisitorAdapter adapter) Parameters Type Name Description IEventSymbol symbol MetadataItem item SymbolVisitorAdapter adapter Overrides YamlModelGenerator.GenerateEvent(IEventSymbol, MetadataItem, SymbolVisitorAdapter) | Improve this Doc View Source GenerateField(IFieldSymbol, MetadataItem, SymbolVisitorAdapter) Declaration public override void GenerateField(IFieldSymbol symbol, MetadataItem item, SymbolVisitorAdapter adapter) Parameters Type Name Description IFieldSymbol symbol MetadataItem item SymbolVisitorAdapter adapter Overrides YamlModelGenerator.GenerateField(IFieldSymbol, MetadataItem, SymbolVisitorAdapter) | Improve this Doc View Source GenerateMethod(IMethodSymbol, MetadataItem, SymbolVisitorAdapter) Declaration public override void GenerateMethod(IMethodSymbol symbol, MetadataItem item, SymbolVisitorAdapter adapter) Parameters Type Name Description IMethodSymbol symbol MetadataItem item SymbolVisitorAdapter adapter Overrides YamlModelGenerator.GenerateMethod(IMethodSymbol, MetadataItem, SymbolVisitorAdapter) | Improve this Doc View Source GenerateNamedType(INamedTypeSymbol, MetadataItem, SymbolVisitorAdapter) Declaration public override void GenerateNamedType(INamedTypeSymbol symbol, MetadataItem item, SymbolVisitorAdapter adapter) Parameters Type Name Description INamedTypeSymbol symbol MetadataItem item SymbolVisitorAdapter adapter Overrides YamlModelGenerator.GenerateNamedType(INamedTypeSymbol, MetadataItem, SymbolVisitorAdapter) | Improve this Doc View Source GenerateProperty(IPropertySymbol, MetadataItem, SymbolVisitorAdapter) Declaration public override void GenerateProperty(IPropertySymbol symbol, MetadataItem item, SymbolVisitorAdapter adapter) Parameters Type Name Description IPropertySymbol symbol MetadataItem item SymbolVisitorAdapter adapter Overrides YamlModelGenerator.GenerateProperty(IPropertySymbol, MetadataItem, SymbolVisitorAdapter) | Improve this Doc View Source GenerateReference(ISymbol, ReferenceItem, SymbolVisitorAdapter, Boolean) Declaration protected override void GenerateReference(ISymbol symbol, ReferenceItem reference, SymbolVisitorAdapter adapter, bool asOverload) Parameters Type Name Description ISymbol symbol ReferenceItem reference SymbolVisitorAdapter adapter Boolean asOverload Overrides SimpleYamlModelGenerator.GenerateReference(ISymbol, ReferenceItem, SymbolVisitorAdapter, Boolean) | Improve this Doc View Source GetLiteralExpressionCore(Object, ITypeSymbol) Declaration public static ExpressionSyntax GetLiteralExpressionCore(object value, ITypeSymbol type) Parameters Type Name Description Object value ITypeSymbol type Returns Type Description ExpressionSyntax | Improve this Doc View Source GetSyntaxContent(MemberType, ISymbol, SymbolVisitorAdapter) Declaration protected override string GetSyntaxContent(MemberType typeKind, ISymbol symbol, SymbolVisitorAdapter adapter) Parameters Type Name Description MemberType typeKind ISymbol symbol SymbolVisitorAdapter adapter Returns Type Description String Overrides SimpleYamlModelGenerator.GetSyntaxContent(MemberType, ISymbol, SymbolVisitorAdapter) (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.CSReferenceItemVisitor.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.CSReferenceItemVisitor.html",
    "title": "Class CSReferenceItemVisitor | DocFX website",
    "keywords": "Class CSReferenceItemVisitor Inheritance Object SymbolVisitor ReferenceItemVisitor CSReferenceItemVisitor Inherited Members ReferenceItemVisitor.ShortFormat ReferenceItemVisitor.QualifiedFormat ReferenceItemVisitor.ShortFormatWithoutGenericeParameter ReferenceItemVisitor.QualifiedFormatWithoutGenericeParameter ReferenceItemVisitor.ReferenceItem ReferenceItemVisitor.VisitNamedType(INamedTypeSymbol) SymbolVisitor.Visit(ISymbol) SymbolVisitor.DefaultVisit(ISymbol) SymbolVisitor.VisitAlias(IAliasSymbol) SymbolVisitor.VisitAssembly(IAssemblySymbol) SymbolVisitor.VisitDiscard(IDiscardSymbol) SymbolVisitor.VisitLabel(ILabelSymbol) SymbolVisitor.VisitLocal(ILocalSymbol) SymbolVisitor.VisitModule(IModuleSymbol) SymbolVisitor.VisitParameter(IParameterSymbol) SymbolVisitor.VisitRangeVariable(IRangeVariableSymbol) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.Roslyn.dll Syntax public class CSReferenceItemVisitor : ReferenceItemVisitor Constructors | Improve this Doc View Source CSReferenceItemVisitor(ReferenceItem, Boolean) Declaration public CSReferenceItemVisitor(ReferenceItem referenceItem, bool asOverload) Parameters Type Name Description ReferenceItem referenceItem Boolean asOverload Methods | Improve this Doc View Source AddBeginGenericParameter() Declaration protected override void AddBeginGenericParameter() Overrides ReferenceItemVisitor.AddBeginGenericParameter() | Improve this Doc View Source AddEndGenericParameter() Declaration protected override void AddEndGenericParameter() Overrides ReferenceItemVisitor.AddEndGenericParameter() | Improve this Doc View Source AddGenericParameterSeparator() Declaration protected override void AddGenericParameterSeparator() Overrides ReferenceItemVisitor.AddGenericParameterSeparator() | Improve this Doc View Source AddLinkItems(INamedTypeSymbol, Boolean) Declaration protected override void AddLinkItems(INamedTypeSymbol symbol, bool withGenericeParameter) Parameters Type Name Description INamedTypeSymbol symbol Boolean withGenericeParameter Overrides ReferenceItemVisitor.AddLinkItems(INamedTypeSymbol, Boolean) | Improve this Doc View Source VisitArrayType(IArrayTypeSymbol) Declaration public override void VisitArrayType(IArrayTypeSymbol symbol) Parameters Type Name Description IArrayTypeSymbol symbol Overrides SymbolVisitor.VisitArrayType(IArrayTypeSymbol) | Improve this Doc View Source VisitDynamicType(IDynamicTypeSymbol) Declaration public override void VisitDynamicType(IDynamicTypeSymbol symbol) Parameters Type Name Description IDynamicTypeSymbol symbol Overrides SymbolVisitor.VisitDynamicType(IDynamicTypeSymbol) | Improve this Doc View Source VisitEvent(IEventSymbol) Declaration public override void VisitEvent(IEventSymbol symbol) Parameters Type Name Description IEventSymbol symbol Overrides SymbolVisitor.VisitEvent(IEventSymbol) | Improve this Doc View Source VisitField(IFieldSymbol) Declaration public override void VisitField(IFieldSymbol symbol) Parameters Type Name Description IFieldSymbol symbol Overrides SymbolVisitor.VisitField(IFieldSymbol) | Improve this Doc View Source VisitMethod(IMethodSymbol) Declaration public override void VisitMethod(IMethodSymbol symbol) Parameters Type Name Description IMethodSymbol symbol Overrides SymbolVisitor.VisitMethod(IMethodSymbol) | Improve this Doc View Source VisitNamespace(INamespaceSymbol) Declaration public override void VisitNamespace(INamespaceSymbol symbol) Parameters Type Name Description INamespaceSymbol symbol Overrides SymbolVisitor.VisitNamespace(INamespaceSymbol) | Improve this Doc View Source VisitPointerType(IPointerTypeSymbol) Declaration public override void VisitPointerType(IPointerTypeSymbol symbol) Parameters Type Name Description IPointerTypeSymbol symbol Overrides SymbolVisitor.VisitPointerType(IPointerTypeSymbol) | Improve this Doc View Source VisitProperty(IPropertySymbol) Declaration public override void VisitProperty(IPropertySymbol symbol) Parameters Type Name Description IPropertySymbol symbol Overrides SymbolVisitor.VisitProperty(IPropertySymbol) | Improve this Doc View Source VisitTypeParameter(ITypeParameterSymbol) Declaration public override void VisitTypeParameter(ITypeParameterSymbol symbol) Parameters Type Name Description ITypeParameterSymbol symbol Overrides SymbolVisitor.VisitTypeParameter(ITypeParameterSymbol) (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.CSharpNameVisitorCreator.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.CSharpNameVisitorCreator.html",
    "title": "Class CSharpNameVisitorCreator | DocFX website",
    "keywords": "Class CSharpNameVisitorCreator Inheritance Object NameVisitorCreator CSharpNameVisitorCreator Inherited Members NameVisitorCreator.GetName(ISymbol) NameVisitorCreator.GetCSharp(NameOptions) NameVisitorCreator.GetVB(NameOptions) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.Roslyn.dll Syntax public class CSharpNameVisitorCreator : NameVisitorCreator Constructors | Improve this Doc View Source CSharpNameVisitorCreator(NameOptions) Declaration public CSharpNameVisitorCreator(NameOptions options) Parameters Type Name Description NameOptions options Methods | Improve this Doc View Source Create() Declaration protected override NameVisitor Create() Returns Type Description NameVisitor Overrides NameVisitorCreator.Create() (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.CRefTarget.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.CRefTarget.html",
    "title": "Class CRefTarget | DocFX website",
    "keywords": "Class CRefTarget Inheritance Object CRefTarget Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.Common.dll Syntax public class CRefTarget Properties | Improve this Doc View Source CommentId Declaration public string CommentId { get; set; } Property Value Type Description String | Improve this Doc View Source Id Declaration public string Id { get; set; } Property Value Type Description String (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.CopyInherited.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.CopyInherited.html",
    "title": "Class CopyInherited | DocFX website",
    "keywords": "Class CopyInherited Copies doc comments to items marked with 'inheritdoc' from interfaces and base classes. Inheritance Object CopyInherited Implements IResolverPipeline Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public class CopyInherited : IResolverPipeline Methods | Improve this Doc View Source Run(MetadataModel, ResolverContext) Declaration public void Run(MetadataModel yaml, ResolverContext context) Parameters Type Name Description MetadataModel yaml ResolverContext context Implements IResolverPipeline (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.ConfigFilterVisitor.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.ConfigFilterVisitor.html",
    "title": "Class ConfigFilterVisitor | DocFX website",
    "keywords": "Class ConfigFilterVisitor Inheritance Object DelegatingFilterVisitor ConfigFilterVisitor Implements IFilterVisitor Inherited Members DelegatingFilterVisitor.Inner DelegatingFilterVisitor.CanVisitApi(ISymbol, Boolean, IFilterVisitor) DelegatingFilterVisitor.CanVisitAttribute(ISymbol, Boolean, IFilterVisitor) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.Roslyn.dll Syntax public class ConfigFilterVisitor : DelegatingFilterVisitor, IFilterVisitor Constructors | Improve this Doc View Source ConfigFilterVisitor(IFilterVisitor, ConfigFilterRule) Declaration public ConfigFilterVisitor(IFilterVisitor inner, ConfigFilterRule rule) Parameters Type Name Description IFilterVisitor inner ConfigFilterRule rule | Improve this Doc View Source ConfigFilterVisitor(IFilterVisitor, String) Declaration public ConfigFilterVisitor(IFilterVisitor inner, string configFile) Parameters Type Name Description IFilterVisitor inner String configFile Methods | Improve this Doc View Source CanVisitApiCore(ISymbol, Boolean, IFilterVisitor) Declaration protected override bool CanVisitApiCore(ISymbol symbol, bool wantProtectedMember, IFilterVisitor outer) Parameters Type Name Description ISymbol symbol Boolean wantProtectedMember IFilterVisitor outer Returns Type Description Boolean Overrides DelegatingFilterVisitor.CanVisitApiCore(ISymbol, Boolean, IFilterVisitor) | Improve this Doc View Source CanVisitAttributeCore(ISymbol, Boolean, IFilterVisitor) Declaration protected override bool CanVisitAttributeCore(ISymbol symbol, bool wantProtectedMember, IFilterVisitor outer) Parameters Type Name Description ISymbol symbol Boolean wantProtectedMember IFilterVisitor outer Returns Type Description Boolean Overrides DelegatingFilterVisitor.CanVisitAttributeCore(ISymbol, Boolean, IFilterVisitor) Implements IFilterVisitor Extension Methods FilterVisitorExtensions.WithConfig(IFilterVisitor, String) FilterVisitorExtensions.WithConfig(IFilterVisitor, ConfigFilterRule) FilterVisitorExtensions.WithCache(IFilterVisitor) (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.ConfigFilterRuleItemUnion.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.ConfigFilterRuleItemUnion.html",
    "title": "Class ConfigFilterRuleItemUnion | DocFX website",
    "keywords": "Class ConfigFilterRuleItemUnion Inheritance Object ConfigFilterRuleItemUnion Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.Common.dll Syntax [Serializable] public class ConfigFilterRuleItemUnion Properties | Improve this Doc View Source Exclude Declaration [YamlMember(Alias = \"exclude\")] public ConfigFilterRuleExcludeItem Exclude { get; set; } Property Value Type Description ConfigFilterRuleExcludeItem | Improve this Doc View Source Include Declaration [YamlMember(Alias = \"include\")] public ConfigFilterRuleIncludeItem Include { get; set; } Property Value Type Description ConfigFilterRuleIncludeItem | Improve this Doc View Source Rule Declaration public ConfigFilterRuleItem Rule { get; } Property Value Type Description ConfigFilterRuleItem (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.ConfigFilterRuleItem.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.ConfigFilterRuleItem.html",
    "title": "Class ConfigFilterRuleItem | DocFX website",
    "keywords": "Class ConfigFilterRuleItem Inheritance Object ConfigFilterRuleItem ConfigFilterRuleExcludeItem ConfigFilterRuleIncludeItem Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.Common.dll Syntax public abstract class ConfigFilterRuleItem Properties | Improve this Doc View Source Attribute Declaration [YamlMember(Alias = \"hasAttribute\")] public AttributeFilterInfo Attribute { get; set; } Property Value Type Description AttributeFilterInfo | Improve this Doc View Source CanVisit Declaration [YamlIgnore] public abstract bool CanVisit { get; } Property Value Type Description Boolean | Improve this Doc View Source Kind Declaration [YamlMember(Alias = \"type\")] public ExtendedSymbolKind? Kind { get; set; } Property Value Type Description Nullable < ExtendedSymbolKind > | Improve this Doc View Source UidRegex Declaration [YamlMember(Alias = \"uidRegex\")] public string UidRegex { get; set; } Property Value Type Description String Methods | Improve this Doc View Source IsMatch(SymbolFilterData) Declaration public bool IsMatch(SymbolFilterData symbol) Parameters Type Name Description SymbolFilterData symbol Returns Type Description Boolean (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.ConfigFilterRuleIncludeItem.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.ConfigFilterRuleIncludeItem.html",
    "title": "Class ConfigFilterRuleIncludeItem | DocFX website",
    "keywords": "Class ConfigFilterRuleIncludeItem Inheritance Object ConfigFilterRuleItem ConfigFilterRuleIncludeItem Inherited Members ConfigFilterRuleItem.UidRegex ConfigFilterRuleItem.Kind ConfigFilterRuleItem.Attribute ConfigFilterRuleItem.IsMatch(SymbolFilterData) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.Common.dll Syntax [Serializable] public class ConfigFilterRuleIncludeItem : ConfigFilterRuleItem Properties | Improve this Doc View Source CanVisit Declaration [YamlIgnore] public override bool CanVisit { get; } Property Value Type Description Boolean Overrides ConfigFilterRuleItem.CanVisit (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.ConfigFilterRuleExcludeItem.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.ConfigFilterRuleExcludeItem.html",
    "title": "Class ConfigFilterRuleExcludeItem | DocFX website",
    "keywords": "Class ConfigFilterRuleExcludeItem Inheritance Object ConfigFilterRuleItem ConfigFilterRuleExcludeItem Inherited Members ConfigFilterRuleItem.UidRegex ConfigFilterRuleItem.Kind ConfigFilterRuleItem.Attribute ConfigFilterRuleItem.IsMatch(SymbolFilterData) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.Common.dll Syntax [Serializable] public class ConfigFilterRuleExcludeItem : ConfigFilterRuleItem Properties | Improve this Doc View Source CanVisit Declaration [YamlIgnore] public override bool CanVisit { get; } Property Value Type Description Boolean Overrides ConfigFilterRuleItem.CanVisit (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.ConfigFilterRule.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.ConfigFilterRule.html",
    "title": "Class ConfigFilterRule | DocFX website",
    "keywords": "Class ConfigFilterRule Inheritance Object ConfigFilterRule Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.Common.dll Syntax [Serializable] public class ConfigFilterRule Properties | Improve this Doc View Source ApiRules Declaration [YamlMember(Alias = \"apiRules\")] public List<ConfigFilterRuleItemUnion> ApiRules { get; set; } Property Value Type Description List < ConfigFilterRuleItemUnion > | Improve this Doc View Source AttributeRules Declaration [YamlMember(Alias = \"attributeRules\")] public List<ConfigFilterRuleItemUnion> AttributeRules { get; set; } Property Value Type Description List < ConfigFilterRuleItemUnion > Methods | Improve this Doc View Source CanVisitApi(SymbolFilterData) Declaration public bool CanVisitApi(SymbolFilterData symbol) Parameters Type Name Description SymbolFilterData symbol Returns Type Description Boolean | Improve this Doc View Source CanVisitAttribute(SymbolFilterData) Declaration public bool CanVisitAttribute(SymbolFilterData symbol) Parameters Type Name Description SymbolFilterData symbol Returns Type Description Boolean | Improve this Doc View Source Load(String) Declaration public static ConfigFilterRule Load(string configFile) Parameters Type Name Description String configFile Returns Type Description ConfigFilterRule | Improve this Doc View Source LoadWithDefaults(String) Declaration public static ConfigFilterRule LoadWithDefaults(string filterConfigFile) Parameters Type Name Description String filterConfigFile Returns Type Description ConfigFilterRule (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.CompositeYamlModelGenerator.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.CompositeYamlModelGenerator.html",
    "title": "Class CompositeYamlModelGenerator | DocFX website",
    "keywords": "Class CompositeYamlModelGenerator Inheritance Object YamlModelGenerator CompositeYamlModelGenerator Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.Roslyn.dll Syntax public sealed class CompositeYamlModelGenerator : YamlModelGenerator Constructors | Improve this Doc View Source CompositeYamlModelGenerator(SimpleYamlModelGenerator[]) Declaration public CompositeYamlModelGenerator(params SimpleYamlModelGenerator[] generators) Parameters Type Name Description SimpleYamlModelGenerator [] generators | Improve this Doc View Source CompositeYamlModelGenerator(IEnumerable<SimpleYamlModelGenerator>) Declaration public CompositeYamlModelGenerator(IEnumerable<SimpleYamlModelGenerator> generators) Parameters Type Name Description IEnumerable < SimpleYamlModelGenerator > generators Methods | Improve this Doc View Source DefaultVisit(ISymbol, MetadataItem, SymbolVisitorAdapter) Declaration public override void DefaultVisit(ISymbol symbol, MetadataItem item, SymbolVisitorAdapter adapter) Parameters Type Name Description ISymbol symbol MetadataItem item SymbolVisitorAdapter adapter Overrides YamlModelGenerator.DefaultVisit(ISymbol, MetadataItem, SymbolVisitorAdapter) | Improve this Doc View Source GenerateEvent(IEventSymbol, MetadataItem, SymbolVisitorAdapter) Declaration public override void GenerateEvent(IEventSymbol symbol, MetadataItem item, SymbolVisitorAdapter adapter) Parameters Type Name Description IEventSymbol symbol MetadataItem item SymbolVisitorAdapter adapter Overrides YamlModelGenerator.GenerateEvent(IEventSymbol, MetadataItem, SymbolVisitorAdapter) | Improve this Doc View Source GenerateField(IFieldSymbol, MetadataItem, SymbolVisitorAdapter) Declaration public override void GenerateField(IFieldSymbol symbol, MetadataItem item, SymbolVisitorAdapter adapter) Parameters Type Name Description IFieldSymbol symbol MetadataItem item SymbolVisitorAdapter adapter Overrides YamlModelGenerator.GenerateField(IFieldSymbol, MetadataItem, SymbolVisitorAdapter) | Improve this Doc View Source GenerateMethod(IMethodSymbol, MetadataItem, SymbolVisitorAdapter) Declaration public override void GenerateMethod(IMethodSymbol symbol, MetadataItem item, SymbolVisitorAdapter adapter) Parameters Type Name Description IMethodSymbol symbol MetadataItem item SymbolVisitorAdapter adapter Overrides YamlModelGenerator.GenerateMethod(IMethodSymbol, MetadataItem, SymbolVisitorAdapter) | Improve this Doc View Source GenerateNamedType(INamedTypeSymbol, MetadataItem, SymbolVisitorAdapter) Declaration public override void GenerateNamedType(INamedTypeSymbol symbol, MetadataItem item, SymbolVisitorAdapter adapter) Parameters Type Name Description INamedTypeSymbol symbol MetadataItem item SymbolVisitorAdapter adapter Overrides YamlModelGenerator.GenerateNamedType(INamedTypeSymbol, MetadataItem, SymbolVisitorAdapter) | Improve this Doc View Source GenerateProperty(IPropertySymbol, MetadataItem, SymbolVisitorAdapter) Declaration public override void GenerateProperty(IPropertySymbol symbol, MetadataItem item, SymbolVisitorAdapter adapter) Parameters Type Name Description IPropertySymbol symbol MetadataItem item SymbolVisitorAdapter adapter Overrides YamlModelGenerator.GenerateProperty(IPropertySymbol, MetadataItem, SymbolVisitorAdapter) Operators | Improve this Doc View Source Addition(CompositeYamlModelGenerator, SimpleYamlModelGenerator) Declaration public static CompositeYamlModelGenerator operator +(CompositeYamlModelGenerator left, SimpleYamlModelGenerator right) Parameters Type Name Description CompositeYamlModelGenerator left SimpleYamlModelGenerator right Returns Type Description CompositeYamlModelGenerator (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.CachedFilterVisitor.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.CachedFilterVisitor.html",
    "title": "Class CachedFilterVisitor | DocFX website",
    "keywords": "Class CachedFilterVisitor Inheritance Object DelegatingFilterVisitor CachedFilterVisitor Implements IFilterVisitor Inherited Members DelegatingFilterVisitor.Inner DelegatingFilterVisitor.CanVisitApi(ISymbol, Boolean, IFilterVisitor) DelegatingFilterVisitor.CanVisitAttribute(ISymbol, Boolean, IFilterVisitor) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.Roslyn.dll Syntax public class CachedFilterVisitor : DelegatingFilterVisitor, IFilterVisitor Constructors | Improve this Doc View Source CachedFilterVisitor(IFilterVisitor) Declaration public CachedFilterVisitor(IFilterVisitor inner) Parameters Type Name Description IFilterVisitor inner Methods | Improve this Doc View Source CanVisitApiCore(ISymbol, Boolean, IFilterVisitor) Declaration protected override bool CanVisitApiCore(ISymbol symbol, bool wantProtectedMember, IFilterVisitor outer) Parameters Type Name Description ISymbol symbol Boolean wantProtectedMember IFilterVisitor outer Returns Type Description Boolean Overrides DelegatingFilterVisitor.CanVisitApiCore(ISymbol, Boolean, IFilterVisitor) | Improve this Doc View Source CanVisitAttributeCore(ISymbol, Boolean, IFilterVisitor) Declaration protected override bool CanVisitAttributeCore(ISymbol symbol, bool wantProtectedMember, IFilterVisitor outer) Parameters Type Name Description ISymbol symbol Boolean wantProtectedMember IFilterVisitor outer Returns Type Description Boolean Overrides DelegatingFilterVisitor.CanVisitAttributeCore(ISymbol, Boolean, IFilterVisitor) Implements IFilterVisitor Extension Methods FilterVisitorExtensions.WithConfig(IFilterVisitor, String) FilterVisitorExtensions.WithConfig(IFilterVisitor, ConfigFilterRule) FilterVisitorExtensions.WithCache(IFilterVisitor) (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.CacheBase.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.CacheBase.html",
    "title": "Class CacheBase | DocFX website",
    "keywords": "Class CacheBase Inheritance Object CacheBase ApplicationLevelCache ProjectLevelCache Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.Common.dll Syntax public abstract class CacheBase Constructors | Improve this Doc View Source CacheBase(String) Declaration public CacheBase(string path) Parameters Type Name Description String path Fields | Improve this Doc View Source AssemblyName Declaration public static readonly string AssemblyName Field Value Type Description String Methods | Improve this Doc View Source CleanupConfig() Declaration protected virtual void CleanupConfig() | Improve this Doc View Source GetConfig(String) Declaration protected virtual BuildInfo GetConfig(string key) Parameters Type Name Description String key Returns Type Description BuildInfo | Improve this Doc View Source GetValidConfig(IEnumerable<String>) Declaration public BuildInfo GetValidConfig(IEnumerable<string> inputProjects) Parameters Type Name Description IEnumerable < String > inputProjects Returns Type Description BuildInfo | Improve this Doc View Source GetValidConfig(String) Declaration public BuildInfo GetValidConfig(string key) Parameters Type Name Description String key Returns Type Description BuildInfo | Improve this Doc View Source ReadConfig(String) Declaration protected virtual BuildInfo ReadConfig(string key) Parameters Type Name Description String key Returns Type Description BuildInfo | Improve this Doc View Source SaveConfig(String, BuildInfo) Declaration protected virtual void SaveConfig(string key, BuildInfo config) Parameters Type Name Description String key BuildInfo config | Improve this Doc View Source SaveToCache(IEnumerable<String>, IDictionary<String, List<String>>, DateTime, String, IList<String>, ExtractMetadataOptions) Declaration public void SaveToCache(IEnumerable<string> inputProjects, IDictionary<string, List<string>> containedFiles, DateTime triggeredTime, string outputFolder, IList<string> fileRelativePaths, ExtractMetadataOptions options) Parameters Type Name Description IEnumerable < String > inputProjects IDictionary < String , List < String >> containedFiles DateTime triggeredTime String outputFolder IList < String > fileRelativePaths ExtractMetadataOptions options | Improve this Doc View Source SaveToCache(String, IDictionary<String, List<String>>, DateTime, String, IList<String>, ExtractMetadataOptions) Declaration public void SaveToCache(string key, IDictionary<string, List<string>> containedFiles, DateTime triggeredTime, string outputFolder, IList<string> fileRelativePaths, ExtractMetadataOptions options) Parameters Type Name Description String key IDictionary < String , List < String >> containedFiles DateTime triggeredTime String outputFolder IList < String > fileRelativePaths ExtractMetadataOptions options | Improve this Doc View Source SaveToCache(String, IEnumerable<String>, DateTime, String, IList<String>, ExtractMetadataOptions) Declaration public void SaveToCache(string key, IEnumerable<string> containedFiles, DateTime triggeredTime, string outputFolder, IList<string> fileRelativePaths, ExtractMetadataOptions options) Parameters Type Name Description String key IEnumerable < String > containedFiles DateTime triggeredTime String outputFolder IList < String > fileRelativePaths ExtractMetadataOptions options (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.BuildToc.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.BuildToc.html",
    "title": "Class BuildToc | DocFX website",
    "keywords": "Class BuildToc Inheritance Object BuildToc Implements IResolverPipeline Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public class BuildToc : IResolverPipeline Methods | Improve this Doc View Source Run(MetadataModel, ResolverContext) Declaration public void Run(MetadataModel yaml, ResolverContext context) Parameters Type Name Description MetadataModel yaml ResolverContext context Implements IResolverPipeline (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.BuildMembers.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.BuildMembers.html",
    "title": "Class BuildMembers | DocFX website",
    "keywords": "Class BuildMembers Inheritance Object BuildMembers Implements IResolverPipeline Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public class BuildMembers : IResolverPipeline Methods | Improve this Doc View Source Run(MetadataModel, ResolverContext) Declaration public void Run(MetadataModel yaml, ResolverContext context) Parameters Type Name Description MetadataModel yaml ResolverContext context Implements IResolverPipeline (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.BuildInfo.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.BuildInfo.html",
    "title": "Class BuildInfo | DocFX website",
    "keywords": "Class BuildInfo Inheritance Object BuildInfo Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.Common.dll Syntax public class BuildInfo Properties | Improve this Doc View Source BuildAssembly Declaration public string BuildAssembly { get; set; } Property Value Type Description String | Improve this Doc View Source CheckSum Declaration public string CheckSum { get; set; } Property Value Type Description String | Improve this Doc View Source CompleteUtcTime Declaration public DateTime CompleteUtcTime { get; set; } Property Value Type Description DateTime | Improve this Doc View Source ContainedFiles Save the files involved in the build Declaration public IDictionary<string, List<string>> ContainedFiles { get; set; } Property Value Type Description IDictionary < String , List < String >> | Improve this Doc View Source InputFilesKey Declaration public string InputFilesKey { get; set; } Property Value Type Description String | Improve this Doc View Source Options Declaration public ExtractMetadataOptions Options { get; set; } Property Value Type Description ExtractMetadataOptions | Improve this Doc View Source OutputFolder Declaration public string OutputFolder { get; set; } Property Value Type Description String | Improve this Doc View Source RelativeOutputFiles Declaration public IEnumerable<string> RelativeOutputFiles { get; set; } Property Value Type Description IEnumerable < String > | Improve this Doc View Source TriggeredUtcTime Declaration public DateTime TriggeredUtcTime { get; set; } Property Value Type Description DateTime (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.AttributeFilterInfo.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.AttributeFilterInfo.html",
    "title": "Class AttributeFilterInfo | DocFX website",
    "keywords": "Class AttributeFilterInfo Inheritance Object AttributeFilterInfo Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.Common.dll Syntax [Serializable] public class AttributeFilterInfo Properties | Improve this Doc View Source ConstructorArguments Declaration [YamlMember(Alias = \"ctorArguments\")] public List<string> ConstructorArguments { get; set; } Property Value Type Description List < String > | Improve this Doc View Source ConstructorNamedArguments Declaration [YamlMember(Alias = \"ctorNamedArguments\")] public Dictionary<string, string> ConstructorNamedArguments { get; set; } Property Value Type Description Dictionary < String , String > | Improve this Doc View Source Uid Declaration [YamlMember(Alias = \"uid\")] public string Uid { get; set; } Property Value Type Description String Methods | Improve this Doc View Source ContainedIn(SymbolFilterData) Declaration public bool ContainedIn(SymbolFilterData symbol) Parameters Type Name Description SymbolFilterData symbol Returns Type Description Boolean (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.AttributeFilterData.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.AttributeFilterData.html",
    "title": "Class AttributeFilterData | DocFX website",
    "keywords": "Class AttributeFilterData Inheritance Object AttributeFilterData Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.Common.dll Syntax public class AttributeFilterData Properties | Improve this Doc View Source ConstructorArguments Declaration public IEnumerable<string> ConstructorArguments { get; set; } Property Value Type Description IEnumerable < String > | Improve this Doc View Source ConstructorNamedArguments Declaration public IDictionary<string, string> ConstructorNamedArguments { get; set; } Property Value Type Description IDictionary < String , String > | Improve this Doc View Source Id Declaration public string Id { get; set; } Property Value Type Description String (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.AssemblyFileInputParameters.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.AssemblyFileInputParameters.html",
    "title": "Class AssemblyFileInputParameters | DocFX website",
    "keywords": "Class AssemblyFileInputParameters Inheritance Object AssemblyFileInputParameters Implements IInputParameters Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.Common.dll Syntax public class AssemblyFileInputParameters : IInputParameters Constructors | Improve this Doc View Source AssemblyFileInputParameters(ExtractMetadataOptions, String) Declaration public AssemblyFileInputParameters(ExtractMetadataOptions options, string key) Parameters Type Name Description ExtractMetadataOptions options String key Properties | Improve this Doc View Source BuildInfo Declaration public BuildInfo BuildInfo { get; } Property Value Type Description BuildInfo | Improve this Doc View Source Cache Declaration public ProjectLevelCache Cache { get; } Property Value Type Description ProjectLevelCache | Improve this Doc View Source Files Declaration public IEnumerable<string> Files { get; set; } Property Value Type Description IEnumerable < String > | Improve this Doc View Source Key Declaration public string Key { get; } Property Value Type Description String | Improve this Doc View Source Options Declaration public ExtractMetadataOptions Options { get; } Property Value Type Description ExtractMetadataOptions Methods | Improve this Doc View Source HasChanged(BuildInfo) Declaration public bool HasChanged(BuildInfo buildInfo) Parameters Type Name Description BuildInfo buildInfo Returns Type Description Boolean Implements IInputParameters (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.ApplicationLevelCache.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.ApplicationLevelCache.html",
    "title": "Class ApplicationLevelCache | DocFX website",
    "keywords": "Class ApplicationLevelCache Inheritance Object CacheBase ApplicationLevelCache Inherited Members CacheBase.AssemblyName CacheBase.GetValidConfig(String) CacheBase.GetValidConfig(IEnumerable<String>) CacheBase.SaveToCache(String, IDictionary<String, List<String>>, DateTime, String, IList<String>, ExtractMetadataOptions) CacheBase.SaveToCache(IEnumerable<String>, IDictionary<String, List<String>>, DateTime, String, IList<String>, ExtractMetadataOptions) CacheBase.SaveToCache(String, IEnumerable<String>, DateTime, String, IList<String>, ExtractMetadataOptions) CacheBase.GetConfig(String) CacheBase.ReadConfig(String) CacheBase.SaveConfig(String, BuildInfo) CacheBase.CleanupConfig() Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.Common.dll Syntax public class ApplicationLevelCache : CacheBase Methods | Improve this Doc View Source Get(IEnumerable<String>) Declaration public static ApplicationLevelCache Get(IEnumerable<string> files) Parameters Type Name Description IEnumerable < String > files Returns Type Description ApplicationLevelCache (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.AllMemberFilterVisitor.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.AllMemberFilterVisitor.html",
    "title": "Class AllMemberFilterVisitor | DocFX website",
    "keywords": "Class AllMemberFilterVisitor Inheritance Object AllMemberFilterVisitor Implements IFilterVisitor Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.Roslyn.dll Syntax public class AllMemberFilterVisitor : IFilterVisitor Methods | Improve this Doc View Source CanVisitApi(ISymbol, Boolean, IFilterVisitor) Declaration public bool CanVisitApi(ISymbol symbol, bool wantProtectedMember, IFilterVisitor outer) Parameters Type Name Description ISymbol symbol Boolean wantProtectedMember IFilterVisitor outer Returns Type Description Boolean | Improve this Doc View Source CanVisitAttribute(ISymbol, Boolean, IFilterVisitor) Declaration public bool CanVisitAttribute(ISymbol symbol, bool wantProtectedMember, IFilterVisitor outer) Parameters Type Name Description ISymbol symbol Boolean wantProtectedMember IFilterVisitor outer Returns Type Description Boolean Implements IFilterVisitor Extension Methods FilterVisitorExtensions.WithConfig(IFilterVisitor, String) FilterVisitorExtensions.WithConfig(IFilterVisitor, ConfigFilterRule) FilterVisitorExtensions.WithCache(IFilterVisitor) (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.AbstractProjectLoader.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.AbstractProjectLoader.html",
    "title": "Class AbstractProjectLoader | DocFX website",
    "keywords": "Class AbstractProjectLoader Inheritance Object AbstractProjectLoader Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.Common.dll Syntax public class AbstractProjectLoader Constructors | Improve this Doc View Source AbstractProjectLoader(IEnumerable<IProjectLoader>) Declaration public AbstractProjectLoader(IEnumerable<IProjectLoader> loaders) Parameters Type Name Description IEnumerable < IProjectLoader > loaders Methods | Improve this Doc View Source Load(String) Declaration public AbstractProject Load(string path) Parameters Type Name Description String path Returns Type Description AbstractProject (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.AbstractProject.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.AbstractProject.html",
    "title": "Class AbstractProject | DocFX website",
    "keywords": "Class AbstractProject Inheritance Object AbstractProject RoslynProject Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.Common.dll Syntax public abstract class AbstractProject Properties | Improve this Doc View Source Documents Declaration public abstract IEnumerable<AbstractDocument> Documents { get; } Property Value Type Description IEnumerable < AbstractDocument > | Improve this Doc View Source FilePath Declaration public abstract string FilePath { get; } Property Value Type Description String | Improve this Doc View Source HasDocuments Declaration public abstract bool HasDocuments { get; } Property Value Type Description Boolean | Improve this Doc View Source PortableExecutableMetadataReferences Declaration public abstract IEnumerable<string> PortableExecutableMetadataReferences { get; } Property Value Type Description IEnumerable < String > | Improve this Doc View Source ProjectReferences Declaration public abstract IEnumerable<AbstractProject> ProjectReferences { get; } Property Value Type Description IEnumerable < AbstractProject > Methods | Improve this Doc View Source GetCompilationAsync() Declaration public abstract Task<AbstractCompilation> GetCompilationAsync() Returns Type Description Task < AbstractCompilation > (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.AbstractDocument.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.AbstractDocument.html",
    "title": "Class AbstractDocument | DocFX website",
    "keywords": "Class AbstractDocument Inheritance Object AbstractDocument RoslynDocument Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.Common.dll Syntax public abstract class AbstractDocument Properties | Improve this Doc View Source FilePath Declaration public abstract string FilePath { get; } Property Value Type Description String (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.AbstractCompilation.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.AbstractCompilation.html",
    "title": "Class AbstractCompilation | DocFX website",
    "keywords": "Class AbstractCompilation Inheritance Object AbstractCompilation RoslynCompilation Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.Common.dll Syntax public abstract class AbstractCompilation Methods | Improve this Doc View Source GetBuildController() Declaration public abstract IBuildController GetBuildController() Returns Type Description IBuildController (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.MergeJsonItemConfig.html": {
    "href": "api/Microsoft.DocAsCode.MergeJsonItemConfig.html",
    "title": "Class MergeJsonItemConfig | DocFX website",
    "keywords": "Class MergeJsonItemConfig Inheritance Object MergeJsonItemConfig Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode Assembly : docfx.dll Syntax [Serializable] public class MergeJsonItemConfig Properties | Improve this Doc View Source BaseDirectory Declaration [JsonIgnore] public string BaseDirectory { get; set; } Property Value Type Description String | Improve this Doc View Source Content Declaration [JsonProperty(\"content\")] public FileMapping Content { get; set; } Property Value Type Description FileMapping | Improve this Doc View Source Destination Declaration [JsonProperty(\"dest\")] public string Destination { get; set; } Property Value Type Description String | Improve this Doc View Source FileMetadata Metadata that applies to some specific files. The key is the metadata name. For each item of the value: The key is the glob pattern to match the files. The value is the value of the metadata. Declaration [JsonProperty(\"fileMetadata\")] public Dictionary<string, FileMetadataPairs> FileMetadata { get; set; } Property Value Type Description Dictionary < String , FileMetadataPairs > | Improve this Doc View Source GlobalMetadata Declaration [JsonProperty(\"globalMetadata\")] [JsonConverter(typeof(JObjectDictionaryToObjectDictionaryConverter))] public Dictionary<string, object> GlobalMetadata { get; set; } Property Value Type Description Dictionary < String , Object > | Improve this Doc View Source OutputFolder Declaration [JsonIgnore] public string OutputFolder { get; set; } Property Value Type Description String | Improve this Doc View Source TocMetadata Declaration [JsonProperty(\"tocMetadata\")] public ListWithStringFallback TocMetadata { get; set; } Property Value Type Description ListWithStringFallback (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.MergeJsonConfigConverter.html": {
    "href": "api/Microsoft.DocAsCode.MergeJsonConfigConverter.html",
    "title": "Class MergeJsonConfigConverter | DocFX website",
    "keywords": "Class MergeJsonConfigConverter Inheritance Object Newtonsoft.Json.JsonConverter MergeJsonConfigConverter Inherited Members Newtonsoft.Json.JsonConverter.GetSchema() Newtonsoft.Json.JsonConverter.CanRead Newtonsoft.Json.JsonConverter.CanWrite Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode Assembly : docfx.dll Syntax public class MergeJsonConfigConverter : JsonConverter Methods | Improve this Doc View Source CanConvert(Type) Declaration public override bool CanConvert(Type objectType) Parameters Type Name Description Type objectType Returns Type Description Boolean Overrides Newtonsoft.Json.JsonConverter.CanConvert(System.Type) | Improve this Doc View Source ReadJson(JsonReader, Type, Object, JsonSerializer) Declaration public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer) Parameters Type Name Description Newtonsoft.Json.JsonReader reader Type objectType Object existingValue Newtonsoft.Json.JsonSerializer serializer Returns Type Description Object Overrides Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, System.Object, Newtonsoft.Json.JsonSerializer) | Improve this Doc View Source WriteJson(JsonWriter, Object, JsonSerializer) Declaration public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer) Parameters Type Name Description Newtonsoft.Json.JsonWriter writer Object value Newtonsoft.Json.JsonSerializer serializer Overrides Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, System.Object, Newtonsoft.Json.JsonSerializer) (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.MarkdownValidators.MarkdownValidatorBuilder.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.MarkdownValidators.MarkdownValidatorBuilder.html",
    "title": "Class MarkdownValidatorBuilder | DocFX website",
    "keywords": "Class MarkdownValidatorBuilder Inheritance Object MarkdownValidatorBuilder Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Dfm.MarkdownValidators Assembly : Microsoft.DocAsCode.Dfm.dll Syntax public class MarkdownValidatorBuilder Constructors | Improve this Doc View Source MarkdownValidatorBuilder(ICompositionContainer) Declaration public MarkdownValidatorBuilder(ICompositionContainer container) Parameters Type Name Description ICompositionContainer container Fields | Improve this Doc View Source DefaultValidatorName Declaration public const string DefaultValidatorName = \"default\" Field Value Type Description String | Improve this Doc View Source MarkdownValidatePhaseName Declaration public const string MarkdownValidatePhaseName = \"Markdown style\" Field Value Type Description String Properties | Improve this Doc View Source Container Declaration public ICompositionContainer Container { get; } Property Value Type Description ICompositionContainer Methods | Improve this Doc View Source AddMetadataValidators(MarkdownMetadataValidationRule[]) Declaration public void AddMetadataValidators(MarkdownMetadataValidationRule[] rules) Parameters Type Name Description MarkdownMetadataValidationRule [] rules | Improve this Doc View Source AddMetadataValidators(String, Dictionary<String, MarkdownMetadataValidationRule>) Declaration public void AddMetadataValidators(string category, Dictionary<string, MarkdownMetadataValidationRule> validators) Parameters Type Name Description String category Dictionary < String , MarkdownMetadataValidationRule > validators | Improve this Doc View Source AddSettings(MarkdownValidationSetting[]) Declaration public void AddSettings(MarkdownValidationSetting[] settings) Parameters Type Name Description MarkdownValidationSetting [] settings | Improve this Doc View Source AddTagValidators(MarkdownTagValidationRule[]) Declaration public void AddTagValidators(MarkdownTagValidationRule[] validators) Parameters Type Name Description MarkdownTagValidationRule [] validators | Improve this Doc View Source AddTagValidators(String, Dictionary<String, MarkdownTagValidationRule>) Declaration public void AddTagValidators(string category, Dictionary<string, MarkdownTagValidationRule> validators) Parameters Type Name Description String category Dictionary < String , MarkdownTagValidationRule > validators | Improve this Doc View Source AddValidators(MarkdownValidationRule[]) Declaration public void AddValidators(MarkdownValidationRule[] rules) Parameters Type Name Description MarkdownValidationRule [] rules | Improve this Doc View Source AddValidators(String, Dictionary<String, MarkdownValidationRule>) Declaration public void AddValidators(string category, Dictionary<string, MarkdownValidationRule> validators) Parameters Type Name Description String category Dictionary < String , MarkdownValidationRule > validators | Improve this Doc View Source Create(ICompositionContainer, String, String) Declaration public static MarkdownValidatorBuilder Create(ICompositionContainer container, string baseDir, string templateDir) Parameters Type Name Description ICompositionContainer container String baseDir String templateDir Returns Type Description MarkdownValidatorBuilder | Improve this Doc View Source CreateRewriter() Declaration public IMarkdownTokenRewriter CreateRewriter() Returns Type Description IMarkdownTokenRewriter | Improve this Doc View Source EnsureDefaultValidator() Declaration public void EnsureDefaultValidator() | Improve this Doc View Source GetEnabledMetadataRules() Declaration public IEnumerable<IInputMetadataValidator> GetEnabledMetadataRules() Returns Type Description IEnumerable < IInputMetadataValidator > (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.LineRangeBlockPathQueryOption.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.LineRangeBlockPathQueryOption.html",
    "title": "Class LineRangeBlockPathQueryOption | DocFX website",
    "keywords": "Class LineRangeBlockPathQueryOption Inheritance Object DfmFencesBlockPathQueryOption LineRangeBlockPathQueryOption Implements IDfmFencesBlockPathQueryOption Inherited Members DfmFencesBlockPathQueryOption.HighlightLines DfmFencesBlockPathQueryOption.DedentLength DfmFencesBlockPathQueryOption.ErrorMessage DfmFencesBlockPathQueryOption.GetQueryLines(String[]) DfmFencesBlockPathQueryOption.ValidateAndPrepare(String[], DfmFencesToken) DfmFencesBlockPathQueryOption.IDfmFencesBlockPathQueryOption.ValidateHighlightLinesAndDedentLength(Int32) DfmFencesBlockPathQueryOption.ProcessIncludedLines(List<String>, DfmFencesToken) DfmFencesBlockPathQueryOption.ValidateHighlightLinesAndDedentLength(Int32) DfmFencesBlockPathQueryOption.CheckLineRange(Int32, Nullable<Int32>, Nullable<Int32>, Boolean) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Dfm Assembly : Microsoft.DocAsCode.Dfm.dll Syntax [Obsolete(\"use MultipleLineRangeBlockPathQueryOption\")] public class LineRangeBlockPathQueryOption : DfmFencesBlockPathQueryOption, IDfmFencesBlockPathQueryOption Properties | Improve this Doc View Source EndLine Declaration public int? EndLine { get; set; } Property Value Type Description Nullable < Int32 > | Improve this Doc View Source StartLine Declaration public int? StartLine { get; set; } Property Value Type Description Nullable < Int32 > Methods | Improve this Doc View Source GetQueryLines(String[], DfmFencesToken) Declaration public override IEnumerable<string> GetQueryLines(string[] lines, DfmFencesToken token) Parameters Type Name Description String [] lines DfmFencesToken token Returns Type Description IEnumerable < String > Overrides DfmFencesBlockPathQueryOption.GetQueryLines(String[], DfmFencesToken) Implements IDfmFencesBlockPathQueryOption (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.DfmXrefInlineToken.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmXrefInlineToken.html",
    "title": "Class DfmXrefInlineToken | DocFX website",
    "keywords": "Class DfmXrefInlineToken Inheritance Object DfmXrefInlineToken Implements IMarkdownRewritable < DfmXrefInlineToken > Namespace : Microsoft.DocAsCode.Dfm Assembly : Microsoft.DocAsCode.Dfm.dll Syntax public class DfmXrefInlineToken : IMarkdownExpression, IMarkdownRewritable<DfmXrefInlineToken> Constructors | Improve this Doc View Source DfmXrefInlineToken(IMarkdownRule, IMarkdownContext, String, ImmutableArray<IMarkdownToken>, String, Boolean, SourceInfo) Declaration public DfmXrefInlineToken(IMarkdownRule rule, IMarkdownContext context, string href, ImmutableArray<IMarkdownToken> content, string title, bool throwIfNotResolved, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context String href ImmutableArray < IMarkdownToken > content String title Boolean throwIfNotResolved SourceInfo sourceInfo Properties | Improve this Doc View Source Content Declaration public ImmutableArray<IMarkdownToken> Content { get; } Property Value Type Description ImmutableArray < IMarkdownToken > | Improve this Doc View Source Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext | Improve this Doc View Source Href Declaration public string Href { get; } Property Value Type Description String | Improve this Doc View Source Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule | Improve this Doc View Source SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo | Improve this Doc View Source ThrowIfNotResolved Declaration public bool ThrowIfNotResolved { get; } Property Value Type Description Boolean | Improve this Doc View Source Title Declaration public string Title { get; } Property Value Type Description String Methods | Improve this Doc View Source GetChildren() Declaration public IEnumerable<IMarkdownToken> GetChildren() Returns Type Description IEnumerable < IMarkdownToken > | Improve this Doc View Source Rewrite(IMarkdownRewriteEngine) Declaration public DfmXrefInlineToken Rewrite(IMarkdownRewriteEngine rewriteEngine) Parameters Type Name Description IMarkdownRewriteEngine rewriteEngine Returns Type Description DfmXrefInlineToken Implements IMarkdownRewritable<> (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.DfmXrefAutoLinkInlineRule.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmXrefAutoLinkInlineRule.html",
    "title": "Class DfmXrefAutoLinkInlineRule | DocFX website",
    "keywords": "Class DfmXrefAutoLinkInlineRule Xref auto link syntax: &lt;xref:uid> &lt;xref:&quot;uid with space&quot;> Inheritance Object DfmXrefAutoLinkInlineRule Namespace : Microsoft.DocAsCode.Dfm Assembly : Microsoft.DocAsCode.Dfm.dll Syntax public class DfmXrefAutoLinkInlineRule : IMarkdownRule Fields | Improve this Doc View Source XrefAutoLinkRegexString Declaration public static readonly string XrefAutoLinkRegexString Field Value Type Description String | Improve this Doc View Source XrefAutoLinkRegexWithQuoteString Declaration public static readonly string XrefAutoLinkRegexWithQuoteString Field Value Type Description String Properties | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description String Methods | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.DfmVideoBlockToken.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmVideoBlockToken.html",
    "title": "Class DfmVideoBlockToken | DocFX website",
    "keywords": "Class DfmVideoBlockToken Inheritance Object DfmVideoBlockToken Implements IDfmBlockSpecialSplitToken Namespace : Microsoft.DocAsCode.Dfm Assembly : Microsoft.DocAsCode.Dfm.dll Syntax public class DfmVideoBlockToken : IMarkdownToken, IDfmBlockSpecialSplitToken Constructors | Improve this Doc View Source DfmVideoBlockToken(IMarkdownRule, IMarkdownContext, String, SourceInfo) Declaration public DfmVideoBlockToken(IMarkdownRule rule, IMarkdownContext context, string link, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context String link SourceInfo sourceInfo Properties | Improve this Doc View Source Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext | Improve this Doc View Source Link Declaration public string Link { get; } Property Value Type Description String | Improve this Doc View Source Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule | Improve this Doc View Source SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Implements IDfmBlockSpecialSplitToken (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.DfmVideoBlockSplitToken.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmVideoBlockSplitToken.html",
    "title": "Class DfmVideoBlockSplitToken | DocFX website",
    "keywords": "Class DfmVideoBlockSplitToken Inheritance Object SplitToken DfmVideoBlockSplitToken Inherited Members SplitToken.Token SplitToken.InnerTokens SplitToken.Rule SplitToken.Context SplitToken.SourceInfo Namespace : Microsoft.DocAsCode.Dfm Assembly : Microsoft.DocAsCode.Dfm.dll Syntax public class DfmVideoBlockSplitToken : SplitToken Constructors | Improve this Doc View Source DfmVideoBlockSplitToken(IMarkdownToken) Declaration public DfmVideoBlockSplitToken(IMarkdownToken token) Parameters Type Name Description IMarkdownToken token (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.DfmVideoBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmVideoBlockRule.html",
    "title": "Class DfmVideoBlockRule | DocFX website",
    "keywords": "Class DfmVideoBlockRule Inheritance Object DfmVideoBlockRule Namespace : Microsoft.DocAsCode.Dfm Assembly : Microsoft.DocAsCode.Dfm.dll Syntax public class DfmVideoBlockRule : IMarkdownRule Properties | Improve this Doc View Source Name Declaration public virtual string Name { get; } Property Value Type Description String | Improve this Doc View Source VideoMatcher Declaration public virtual Matcher VideoMatcher { get; } Property Value Type Description Matcher | Improve this Doc View Source VideoRegex Declaration [Obsolete(\"Please use VideoMatcher.\")] public virtual Regex VideoRegex { get; } Property Value Type Description Regex Methods | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken | Improve this Doc View Source TryMatchOld(IMarkdownParser, IMarkdownParsingContext) Declaration [Obsolete] public IMarkdownToken TryMatchOld(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.DfmTextInlineRule.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmTextInlineRule.html",
    "title": "Class DfmTextInlineRule | DocFX website",
    "keywords": "Class DfmTextInlineRule Inheritance Object DfmTextInlineRule Namespace : Microsoft.DocAsCode.Dfm Assembly : Microsoft.DocAsCode.Dfm.dll Syntax public class DfmTextInlineRule : MarkdownTextInlineRule Properties | Improve this Doc View Source Text Override the one in MarkdownLite, difference is: If there is a @ following . , , , ; , : , ! , ? or whitespace, exclude it as it is a xref Declaration public override Regex Text { get; } Property Value Type Description Regex (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.DfmTagNameResolveResult.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmTagNameResolveResult.html",
    "title": "Class DfmTagNameResolveResult | DocFX website",
    "keywords": "Class DfmTagNameResolveResult Inheritance Object DfmTagNameResolveResult Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Dfm Assembly : Microsoft.DocAsCode.Dfm.dll Syntax public class DfmTagNameResolveResult Properties | Improve this Doc View Source EndLine Declaration public int EndLine { get; set; } Property Value Type Description Int32 | Improve this Doc View Source ErrorMessage Declaration public string ErrorMessage { get; set; } Property Value Type Description String | Improve this Doc View Source ExcludesLines Declaration public HashSet<int> ExcludesLines { get; set; } Property Value Type Description HashSet < Int32 > | Improve this Doc View Source IsSuccessful Declaration public bool IsSuccessful { get; set; } Property Value Type Description Boolean | Improve this Doc View Source StartLine Declaration public int StartLine { get; set; } Property Value Type Description Int32 (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.DfmTabTitleBlockToken.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmTabTitleBlockToken.html",
    "title": "Class DfmTabTitleBlockToken | DocFX website",
    "keywords": "Class DfmTabTitleBlockToken Inheritance Object DfmTabTitleBlockToken Implements IMarkdownRewritable < DfmTabTitleBlockToken > Namespace : Microsoft.DocAsCode.Dfm Assembly : Microsoft.DocAsCode.Dfm.dll Syntax public class DfmTabTitleBlockToken : IMarkdownExpression, IMarkdownRewritable<DfmTabTitleBlockToken> Constructors | Improve this Doc View Source DfmTabTitleBlockToken(IMarkdownRule, IMarkdownContext, InlineContent, SourceInfo) Declaration public DfmTabTitleBlockToken(IMarkdownRule rule, IMarkdownContext context, InlineContent content, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context InlineContent content SourceInfo sourceInfo Properties | Improve this Doc View Source Content Declaration public InlineContent Content { get; } Property Value Type Description InlineContent | Improve this Doc View Source Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext | Improve this Doc View Source Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule | Improve this Doc View Source SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Methods | Improve this Doc View Source GetChildren() Declaration public IEnumerable<IMarkdownToken> GetChildren() Returns Type Description IEnumerable < IMarkdownToken > | Improve this Doc View Source Rewrite(IMarkdownRewriteEngine) Declaration public DfmTabTitleBlockToken Rewrite(IMarkdownRewriteEngine rewriteEngine) Parameters Type Name Description IMarkdownRewriteEngine rewriteEngine Returns Type Description DfmTabTitleBlockToken Implements IMarkdownRewritable<> (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.DfmTableBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmTableBlockRule.html",
    "title": "Class DfmTableBlockRule | DocFX website",
    "keywords": "Class DfmTableBlockRule Inheritance Object DfmTableBlockRule Namespace : Microsoft.DocAsCode.Dfm Assembly : Microsoft.DocAsCode.Dfm.dll Syntax public class DfmTableBlockRule : MarkdownTableBlockRule Methods | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public override IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.DfmTabItemBlockToken.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmTabItemBlockToken.html",
    "title": "Class DfmTabItemBlockToken | DocFX website",
    "keywords": "Class DfmTabItemBlockToken Inheritance Object DfmTabItemBlockToken Implements IMarkdownRewritable < DfmTabItemBlockToken > Namespace : Microsoft.DocAsCode.Dfm Assembly : Microsoft.DocAsCode.Dfm.dll Syntax public class DfmTabItemBlockToken : IMarkdownExpression, IMarkdownRewritable<DfmTabItemBlockToken> Constructors | Improve this Doc View Source DfmTabItemBlockToken(IMarkdownRule, IMarkdownContext, String, String, DfmTabTitleBlockToken, DfmTabContentBlockToken, Boolean, SourceInfo) Declaration public DfmTabItemBlockToken(IMarkdownRule rule, IMarkdownContext context, string id, string condition, DfmTabTitleBlockToken title, DfmTabContentBlockToken content, bool visible, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context String id String condition DfmTabTitleBlockToken title DfmTabContentBlockToken content Boolean visible SourceInfo sourceInfo Properties | Improve this Doc View Source Condition Declaration public string Condition { get; } Property Value Type Description String | Improve this Doc View Source Content Declaration public DfmTabContentBlockToken Content { get; } Property Value Type Description DfmTabContentBlockToken | Improve this Doc View Source Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext | Improve this Doc View Source Id Declaration public string Id { get; } Property Value Type Description String | Improve this Doc View Source Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule | Improve this Doc View Source SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo | Improve this Doc View Source Title Declaration public DfmTabTitleBlockToken Title { get; } Property Value Type Description DfmTabTitleBlockToken | Improve this Doc View Source Visible Declaration public bool Visible { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source GetChildren() Declaration public IEnumerable<IMarkdownToken> GetChildren() Returns Type Description IEnumerable < IMarkdownToken > | Improve this Doc View Source Rewrite(IMarkdownRewriteEngine) Declaration public DfmTabItemBlockToken Rewrite(IMarkdownRewriteEngine rewriteEngine) Parameters Type Name Description IMarkdownRewriteEngine rewriteEngine Returns Type Description DfmTabItemBlockToken | Improve this Doc View Source SetVisible(Boolean) Declaration public DfmTabItemBlockToken SetVisible(bool visible) Parameters Type Name Description Boolean visible Returns Type Description DfmTabItemBlockToken Implements IMarkdownRewritable<> (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.DfmTabGroupBlockToken.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmTabGroupBlockToken.html",
    "title": "Class DfmTabGroupBlockToken | DocFX website",
    "keywords": "Class DfmTabGroupBlockToken Inheritance Object DfmTabGroupBlockToken Implements IMarkdownRewritable < DfmTabGroupBlockToken > Namespace : Microsoft.DocAsCode.Dfm Assembly : Microsoft.DocAsCode.Dfm.dll Syntax public class DfmTabGroupBlockToken : IMarkdownExpression, IMarkdownRewritable<DfmTabGroupBlockToken> Constructors | Improve this Doc View Source DfmTabGroupBlockToken(IMarkdownRule, IMarkdownContext, String, ImmutableArray<DfmTabItemBlockToken>, Int32, SourceInfo) Declaration public DfmTabGroupBlockToken(IMarkdownRule rule, IMarkdownContext context, string id, ImmutableArray<DfmTabItemBlockToken> items, int activeTabIndex, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context String id ImmutableArray < DfmTabItemBlockToken > items Int32 activeTabIndex SourceInfo sourceInfo Properties | Improve this Doc View Source ActiveTabIndex Declaration public int ActiveTabIndex { get; } Property Value Type Description Int32 | Improve this Doc View Source Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext | Improve this Doc View Source Id Declaration public string Id { get; } Property Value Type Description String | Improve this Doc View Source Items Declaration public ImmutableArray<DfmTabItemBlockToken> Items { get; } Property Value Type Description ImmutableArray < DfmTabItemBlockToken > | Improve this Doc View Source Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule | Improve this Doc View Source SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Methods | Improve this Doc View Source GetChildren() Declaration public IEnumerable<IMarkdownToken> GetChildren() Returns Type Description IEnumerable < IMarkdownToken > | Improve this Doc View Source Rewrite(IMarkdownRewriteEngine) Declaration public DfmTabGroupBlockToken Rewrite(IMarkdownRewriteEngine rewriteEngine) Parameters Type Name Description IMarkdownRewriteEngine rewriteEngine Returns Type Description DfmTabGroupBlockToken Implements IMarkdownRewritable<> (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.DfmTabGroupBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmTabGroupBlockRule.html",
    "title": "Class DfmTabGroupBlockRule | DocFX website",
    "keywords": "Class DfmTabGroupBlockRule Fake rule for Dfm Tab group. Inheritance Object DfmTabGroupBlockRule Namespace : Microsoft.DocAsCode.Dfm Assembly : Microsoft.DocAsCode.Dfm.dll Syntax public class DfmTabGroupBlockRule : IMarkdownRule Fields | Improve this Doc View Source Instance Declaration public static readonly DfmTabGroupBlockRule Instance Field Value Type Description DfmTabGroupBlockRule Properties | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description String Methods | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.DfmTabContentBlockToken.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmTabContentBlockToken.html",
    "title": "Class DfmTabContentBlockToken | DocFX website",
    "keywords": "Class DfmTabContentBlockToken Inheritance Object DfmTabContentBlockToken Implements IMarkdownRewritable < DfmTabContentBlockToken > Namespace : Microsoft.DocAsCode.Dfm Assembly : Microsoft.DocAsCode.Dfm.dll Syntax public class DfmTabContentBlockToken : IMarkdownExpression, IMarkdownRewritable<DfmTabContentBlockToken> Constructors | Improve this Doc View Source DfmTabContentBlockToken(IMarkdownRule, IMarkdownContext, ImmutableArray<IMarkdownToken>, SourceInfo) Declaration public DfmTabContentBlockToken(IMarkdownRule rule, IMarkdownContext context, ImmutableArray<IMarkdownToken> content, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context ImmutableArray < IMarkdownToken > content SourceInfo sourceInfo Properties | Improve this Doc View Source Content Declaration public ImmutableArray<IMarkdownToken> Content { get; } Property Value Type Description ImmutableArray < IMarkdownToken > | Improve this Doc View Source Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext | Improve this Doc View Source Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule | Improve this Doc View Source SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Methods | Improve this Doc View Source GetChildren() Declaration public IEnumerable<IMarkdownToken> GetChildren() Returns Type Description IEnumerable < IMarkdownToken > | Improve this Doc View Source Rewrite(IMarkdownRewriteEngine) Declaration public DfmTabContentBlockToken Rewrite(IMarkdownRewriteEngine rewriteEngine) Parameters Type Name Description IMarkdownRewriteEngine rewriteEngine Returns Type Description DfmTabContentBlockToken Implements IMarkdownRewritable<> (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.DfmSectionBlockToken.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmSectionBlockToken.html",
    "title": "Class DfmSectionBlockToken | DocFX website",
    "keywords": "Class DfmSectionBlockToken Inheritance Object DfmSectionBlockToken Implements IDfmBlockSpecialSplitToken Namespace : Microsoft.DocAsCode.Dfm Assembly : Microsoft.DocAsCode.Dfm.dll Syntax public class DfmSectionBlockToken : IMarkdownToken, IDfmBlockSpecialSplitToken Constructors | Improve this Doc View Source DfmSectionBlockToken(IMarkdownRule, IMarkdownContext, String, SourceInfo) Declaration public DfmSectionBlockToken(IMarkdownRule rule, IMarkdownContext context, string attributes, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context String attributes SourceInfo sourceInfo Properties | Improve this Doc View Source Attributes Declaration public string Attributes { get; } Property Value Type Description String | Improve this Doc View Source Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext | Improve this Doc View Source Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule | Improve this Doc View Source SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo Implements IDfmBlockSpecialSplitToken (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.DfmSectionBlockSplitToken.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmSectionBlockSplitToken.html",
    "title": "Class DfmSectionBlockSplitToken | DocFX website",
    "keywords": "Class DfmSectionBlockSplitToken Inheritance Object SplitToken DfmSectionBlockSplitToken Inherited Members SplitToken.Token SplitToken.InnerTokens SplitToken.Rule SplitToken.Context SplitToken.SourceInfo Namespace : Microsoft.DocAsCode.Dfm Assembly : Microsoft.DocAsCode.Dfm.dll Syntax public class DfmSectionBlockSplitToken : SplitToken Constructors | Improve this Doc View Source DfmSectionBlockSplitToken(IMarkdownToken) Declaration public DfmSectionBlockSplitToken(IMarkdownToken token) Parameters Type Name Description IMarkdownToken token (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.DfmSectionBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmSectionBlockRule.html",
    "title": "Class DfmSectionBlockRule | DocFX website",
    "keywords": "Class DfmSectionBlockRule Inheritance Object DfmSectionBlockRule Namespace : Microsoft.DocAsCode.Dfm Assembly : Microsoft.DocAsCode.Dfm.dll Syntax public class DfmSectionBlockRule : IMarkdownRule Properties | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description String Methods | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public virtual IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.DfmFencesBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmFencesBlockRule.html",
    "title": "Class DfmFencesBlockRule | DocFX website",
    "keywords": "Class DfmFencesBlockRule Inheritance Object DfmFencesRule DfmFencesBlockRule Inherited Members DfmFencesRule.ParsePathQueryString(String, String) DfmFencesRule.ParsePathQueryString(String, String, Boolean) Namespace : Microsoft.DocAsCode.Dfm Assembly : Microsoft.DocAsCode.Dfm.dll Syntax public class DfmFencesBlockRule : DfmFencesRule Properties | Improve this Doc View Source DfmFencesMatcher Declaration public virtual Matcher DfmFencesMatcher { get; } Property Value Type Description Matcher | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description String Overrides DfmFencesRule.Name Methods | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public override IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Overrides DfmFencesRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.DfmFencesBlockPathQueryOptionParameters.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmFencesBlockPathQueryOptionParameters.html",
    "title": "Class DfmFencesBlockPathQueryOptionParameters | DocFX website",
    "keywords": "Class DfmFencesBlockPathQueryOptionParameters Inheritance Object DfmFencesBlockPathQueryOptionParameters Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Dfm Assembly : Microsoft.DocAsCode.Dfm.dll Syntax public class DfmFencesBlockPathQueryOptionParameters Properties | Improve this Doc View Source DedentLength Declaration public int? DedentLength { get; set; } Property Value Type Description Nullable < Int32 > | Improve this Doc View Source HighlightLines Declaration public string HighlightLines { get; set; } Property Value Type Description String | Improve this Doc View Source LinePairs Declaration public List<Tuple<int? , int? >> LinePairs { get; set; } Property Value Type Description List < Tuple < Nullable < Int32 >, Nullable < Int32 >>> | Improve this Doc View Source TagName Declaration public string TagName { get; set; } Property Value Type Description String Methods | Improve this Doc View Source Create(String) Declaration public static DfmFencesBlockPathQueryOptionParameters Create(string queryAndFragment) Parameters Type Name Description String queryAndFragment Returns Type Description DfmFencesBlockPathQueryOptionParameters (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.DfmFencesBlockPathQueryOption.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmFencesBlockPathQueryOption.html",
    "title": "Class DfmFencesBlockPathQueryOption | DocFX website",
    "keywords": "Class DfmFencesBlockPathQueryOption Inheritance Object DfmFencesBlockPathQueryOption FullFileBlockPathQueryOption LineRangeBlockPathQueryOption MultipleLineRangeBlockPathQueryOption TagNameBlockPathQueryOption Implements IDfmFencesBlockPathQueryOption Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Dfm Assembly : Microsoft.DocAsCode.Dfm.dll Syntax public abstract class DfmFencesBlockPathQueryOption : IDfmFencesBlockPathQueryOption Properties | Improve this Doc View Source DedentLength Declaration public int? DedentLength { get; set; } Property Value Type Description Nullable < Int32 > | Improve this Doc View Source ErrorMessage Declaration public string ErrorMessage { get; protected set; } Property Value Type Description String | Improve this Doc View Source HighlightLines Declaration public string HighlightLines { get; set; } Property Value Type Description String Methods | Improve this Doc View Source CheckLineRange(Int32, Nullable<Int32>, Nullable<Int32>, Boolean) Declaration protected bool CheckLineRange(int totalLines, int? startLine, int? endLine, bool needThrow = true) Parameters Type Name Description Int32 totalLines Nullable < Int32 > startLine Nullable < Int32 > endLine Boolean needThrow Returns Type Description Boolean | Improve this Doc View Source GetQueryLines(String[]) Declaration public IEnumerable<string> GetQueryLines(string[] lines) Parameters Type Name Description String [] lines Returns Type Description IEnumerable < String > | Improve this Doc View Source GetQueryLines(String[], DfmFencesToken) Declaration public abstract IEnumerable<string> GetQueryLines(string[] lines, DfmFencesToken token) Parameters Type Name Description String [] lines DfmFencesToken token Returns Type Description IEnumerable < String > | Improve this Doc View Source ProcessIncludedLines(List<String>, DfmFencesToken) Declaration protected IEnumerable<string> ProcessIncludedLines(List<string> lines, DfmFencesToken token) Parameters Type Name Description List < String > lines DfmFencesToken token Returns Type Description IEnumerable < String > | Improve this Doc View Source ValidateAndPrepare(String[], DfmFencesToken) Declaration public bool ValidateAndPrepare(string[] lines, DfmFencesToken token) Parameters Type Name Description String [] lines DfmFencesToken token Returns Type Description Boolean | Improve this Doc View Source ValidateHighlightLinesAndDedentLength(Int32) Declaration protected string ValidateHighlightLinesAndDedentLength(int totalLines) Parameters Type Name Description Int32 totalLines Returns Type Description String Explicit Interface Implementations | Improve this Doc View Source IDfmFencesBlockPathQueryOption.ValidateHighlightLinesAndDedentLength(Int32) Declaration bool IDfmFencesBlockPathQueryOption.ValidateHighlightLinesAndDedentLength(int totalLines) Parameters Type Name Description Int32 totalLines Returns Type Description Boolean Implements IDfmFencesBlockPathQueryOption (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.DfmFencesBlockHelper.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmFencesBlockHelper.html",
    "title": "Class DfmFencesBlockHelper | DocFX website",
    "keywords": "Class DfmFencesBlockHelper Inheritance Object DfmFencesBlockHelper Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Dfm Assembly : Microsoft.DocAsCode.Dfm.dll Syntax [Obsolete] public static class DfmFencesBlockHelper Methods | Improve this Doc View Source GenerateReferenceNotFoundErrorMessage(IMarkdownRenderer, DfmFencesBlockToken) Declaration [Obsolete] public static string GenerateReferenceNotFoundErrorMessage(IMarkdownRenderer renderer, DfmFencesBlockToken token) Parameters Type Name Description IMarkdownRenderer renderer DfmFencesBlockToken token Returns Type Description String | Improve this Doc View Source GenerateReferenceNotFoundErrorMessage(IMarkdownRenderer, DfmFencesToken) Declaration [Obsolete] public static string GenerateReferenceNotFoundErrorMessage(IMarkdownRenderer renderer, DfmFencesToken token) Parameters Type Name Description IMarkdownRenderer renderer DfmFencesToken token Returns Type Description String | Improve this Doc View Source GetRenderedFencesBlockString(DfmFencesBlockToken, Options, String, String[]) Declaration [Obsolete] public static string GetRenderedFencesBlockString(DfmFencesBlockToken token, Options options, string errorMessage, string[] codeLines = null) Parameters Type Name Description DfmFencesBlockToken token Options options String errorMessage String [] codeLines Returns Type Description String | Improve this Doc View Source GetRenderedFencesBlockString(DfmFencesToken, Options, String, String[]) Declaration [Obsolete] public static string GetRenderedFencesBlockString(DfmFencesToken token, Options options, string errorMessage, string[] codeLines = null) Parameters Type Name Description DfmFencesToken token Options options String errorMessage String [] codeLines Returns Type Description String (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.DfmFallbackHelper.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmFallbackHelper.html",
    "title": "Class DfmFallbackHelper | DocFX website",
    "keywords": "Class DfmFallbackHelper Inheritance Object DfmFallbackHelper Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Dfm Assembly : Microsoft.DocAsCode.Dfm.dll Syntax public static class DfmFallbackHelper Methods | Improve this Doc View Source GetFilePathWithFallback(String, IMarkdownContext) Get file path with fallback Declaration public static Tuple<string, bool> GetFilePathWithFallback(string relativePath, IMarkdownContext context) Parameters Type Name Description String relativePath original relative path in markdown. IMarkdownContext context markdown context Returns Type Description Tuple < String , Boolean > item1: acutal file path. item: true if it hit fallback file. Otherwise false (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.DfmExtractCodeResult.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmExtractCodeResult.html",
    "title": "Class DfmExtractCodeResult | DocFX website",
    "keywords": "Class DfmExtractCodeResult Inheritance Object DfmExtractCodeResult Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Dfm Assembly : Microsoft.DocAsCode.Dfm.dll Syntax public class DfmExtractCodeResult Properties | Improve this Doc View Source CodeLines Declaration public string[] CodeLines { get; set; } Property Value Type Description String [] | Improve this Doc View Source ErrorMessage Declaration public string ErrorMessage { get; set; } Property Value Type Description String | Improve this Doc View Source IsSuccessful Declaration public bool IsSuccessful { get; set; } Property Value Type Description Boolean (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.DfmEngineBuilder.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmEngineBuilder.html",
    "title": "Class DfmEngineBuilder | DocFX website",
    "keywords": "Class DfmEngineBuilder Inheritance Object DfmEngineBuilder Namespace : Microsoft.DocAsCode.Dfm Assembly : Microsoft.DocAsCode.Dfm.dll Syntax public class DfmEngineBuilder : GfmEngineBuilder Constructors | Improve this Doc View Source DfmEngineBuilder(Options, String, String, IReadOnlyList<String>) Declaration public DfmEngineBuilder(Options options, string baseDir = null, string templateDir = null, IReadOnlyList<string> fallbackFolders = null) Parameters Type Name Description Options options String baseDir String templateDir IReadOnlyList < String > fallbackFolders | Improve this Doc View Source DfmEngineBuilder(Options, String, String, IReadOnlyList<String>, ICompositionContainer) Declaration public DfmEngineBuilder(Options options, string baseDir, string templateDir, IReadOnlyList<string> fallbackFolders, ICompositionContainer container) Parameters Type Name Description Options options String baseDir String templateDir IReadOnlyList < String > fallbackFolders ICompositionContainer container Methods | Improve this Doc View Source CreateDfmEngine(Object) Declaration public DfmEngine CreateDfmEngine(object renderer) Parameters Type Name Description Object renderer Returns Type Description DfmEngine | Improve this Doc View Source CreateEngine(Object) Declaration public override IMarkdownEngine CreateEngine(object renderer) Parameters Type Name Description Object renderer Returns Type Description IMarkdownEngine (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.DfmEngine.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmEngine.html",
    "title": "Class DfmEngine | DocFX website",
    "keywords": "Class DfmEngine Inheritance Object DfmEngine Namespace : Microsoft.DocAsCode.Dfm Assembly : Microsoft.DocAsCode.Dfm.dll Syntax public class DfmEngine : MarkdownEngine Constructors | Improve this Doc View Source DfmEngine(IMarkdownContext, IMarkdownTokenRewriter, Object, Options) Declaration public DfmEngine(IMarkdownContext context, IMarkdownTokenRewriter rewriter, object renderer, Options options) Parameters Type Name Description IMarkdownContext context IMarkdownTokenRewriter rewriter Object renderer Options options Methods | Improve this Doc View Source Markup(String, IMarkdownContext) Declaration public string Markup(string src, IMarkdownContext context) Parameters Type Name Description String src IMarkdownContext context Returns Type Description String | Improve this Doc View Source Markup(String, String) Declaration public override string Markup(string src, string path) Parameters Type Name Description String src String path Returns Type Description String | Improve this Doc View Source Markup(String, String, HashSet<String>) Declaration public string Markup(string src, string path, HashSet<string> dependency) Parameters Type Name Description String src String path HashSet < String > dependency Returns Type Description String (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.DfmEmailInlineRule.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmEmailInlineRule.html",
    "title": "Class DfmEmailInlineRule | DocFX website",
    "keywords": "Class DfmEmailInlineRule Inheritance Object DfmEmailInlineRule Namespace : Microsoft.DocAsCode.Dfm Assembly : Microsoft.DocAsCode.Dfm.dll Syntax public class DfmEmailInlineRule : IMarkdownRule Properties | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description String | Improve this Doc View Source Xref Declaration public virtual Regex Xref { get; } Property Value Type Description Regex Methods | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.DfmDefaultBlockQuoteBlockSplitToken.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmDefaultBlockQuoteBlockSplitToken.html",
    "title": "Class DfmDefaultBlockQuoteBlockSplitToken | DocFX website",
    "keywords": "Class DfmDefaultBlockQuoteBlockSplitToken Inheritance Object SplitToken DfmDefaultBlockQuoteBlockSplitToken Inherited Members SplitToken.Token SplitToken.InnerTokens SplitToken.Rule SplitToken.Context SplitToken.SourceInfo Namespace : Microsoft.DocAsCode.Dfm Assembly : Microsoft.DocAsCode.Dfm.dll Syntax public class DfmDefaultBlockQuoteBlockSplitToken : SplitToken Constructors | Improve this Doc View Source DfmDefaultBlockQuoteBlockSplitToken(IMarkdownToken) Declaration public DfmDefaultBlockQuoteBlockSplitToken(IMarkdownToken token) Parameters Type Name Description IMarkdownToken token (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.DfmCustomizedRendererPartBase-3.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmCustomizedRendererPartBase-3.html",
    "title": "Class DfmCustomizedRendererPartBase<TRenderer, TToken, TContext> | DocFX website",
    "keywords": "Class DfmCustomizedRendererPartBase<TRenderer, TToken, TContext> Inheritance Object DfmCustomizedRendererPartBase<TRenderer, TToken, TContext> Implements IDfmCustomizedRendererPart Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Dfm Assembly : Microsoft.DocAsCode.Dfm.dll Syntax public abstract class DfmCustomizedRendererPartBase<TRenderer, TToken, TContext> : IDfmCustomizedRendererPart where TRenderer : IMarkdownRenderer where TToken : IMarkdownToken where TContext : IMarkdownContext Type Parameters Name Description TRenderer TToken TContext Constructors | Improve this Doc View Source DfmCustomizedRendererPartBase() Declaration protected DfmCustomizedRendererPartBase() Properties | Improve this Doc View Source MarkdownContextType Declaration public Type MarkdownContextType { get; } Property Value Type Description Type | Improve this Doc View Source MarkdownRendererType Declaration public Type MarkdownRendererType { get; } Property Value Type Description Type | Improve this Doc View Source MarkdownTokenType Declaration public Type MarkdownTokenType { get; } Property Value Type Description Type | Improve this Doc View Source Name Declaration public abstract string Name { get; } Property Value Type Description String Methods | Improve this Doc View Source Match(TRenderer, TToken, TContext) Declaration public abstract bool Match(TRenderer renderer, TToken token, TContext context) Parameters Type Name Description TRenderer renderer TToken token TContext context Returns Type Description Boolean | Improve this Doc View Source Render(TRenderer, TToken, TContext) Declaration public abstract StringBuffer Render(TRenderer renderer, TToken token, TContext context) Parameters Type Name Description TRenderer renderer TToken token TContext context Returns Type Description StringBuffer Explicit Interface Implementations | Improve this Doc View Source IDfmCustomizedRendererPart.Match(IMarkdownRenderer, IMarkdownToken, IMarkdownContext) Declaration bool IDfmCustomizedRendererPart.Match(IMarkdownRenderer renderer, IMarkdownToken token, IMarkdownContext context) Parameters Type Name Description IMarkdownRenderer renderer IMarkdownToken token IMarkdownContext context Returns Type Description Boolean | Improve this Doc View Source IDfmCustomizedRendererPart.Render(IMarkdownRenderer, IMarkdownToken, IMarkdownContext) Declaration StringBuffer IDfmCustomizedRendererPart.Render(IMarkdownRenderer renderer, IMarkdownToken token, IMarkdownContext context) Parameters Type Name Description IMarkdownRenderer renderer IMarkdownToken token IMarkdownContext context Returns Type Description StringBuffer Implements IDfmCustomizedRendererPart (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.DfmContextExtensions.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmContextExtensions.html",
    "title": "Class DfmContextExtensions | DocFX website",
    "keywords": "Class DfmContextExtensions Inheritance Object DfmContextExtensions Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Dfm Assembly : Microsoft.DocAsCode.Dfm.dll Syntax public static class DfmContextExtensions Methods | Improve this Doc View Source GetBaseFolder(IMarkdownContext) Declaration public static string GetBaseFolder(this IMarkdownContext context) Parameters Type Name Description IMarkdownContext context Returns Type Description String | Improve this Doc View Source GetFallbackFolders(IMarkdownContext) Declaration public static IReadOnlyList<string> GetFallbackFolders(this IMarkdownContext context) Parameters Type Name Description IMarkdownContext context Returns Type Description IReadOnlyList < String > | Improve this Doc View Source GetFilePathStack(IMarkdownContext) Declaration public static ImmutableStack<string> GetFilePathStack(this IMarkdownContext context) Parameters Type Name Description IMarkdownContext context Returns Type Description ImmutableStack < String > | Improve this Doc View Source GetIsInclude(IMarkdownContext) Declaration public static bool GetIsInclude(this IMarkdownContext context) Parameters Type Name Description IMarkdownContext context Returns Type Description Boolean | Improve this Doc View Source GetIsInTable(IMarkdownContext) Declaration public static bool GetIsInTable(this IMarkdownContext context) Parameters Type Name Description IMarkdownContext context Returns Type Description Boolean | Improve this Doc View Source ReportDependency(IMarkdownContext, IEnumerable<String>) Declaration public static void ReportDependency(this IMarkdownContext context, IEnumerable<string> files) Parameters Type Name Description IMarkdownContext context IEnumerable < String > files | Improve this Doc View Source ReportDependency(IMarkdownContext, String) Declaration public static void ReportDependency(this IMarkdownContext context, string file) Parameters Type Name Description IMarkdownContext context String file | Improve this Doc View Source SetBaseFolder(IMarkdownContext, String) Declaration public static IMarkdownContext SetBaseFolder(this IMarkdownContext context, string baseFolder) Parameters Type Name Description IMarkdownContext context String baseFolder Returns Type Description IMarkdownContext | Improve this Doc View Source SetDependency(IMarkdownContext, HashSet<String>) Declaration public static IMarkdownContext SetDependency(this IMarkdownContext context, HashSet<string> dependency) Parameters Type Name Description IMarkdownContext context HashSet < String > dependency Returns Type Description IMarkdownContext | Improve this Doc View Source SetFallbackFolders(IMarkdownContext, IReadOnlyList<String>) Declaration public static IMarkdownContext SetFallbackFolders(this IMarkdownContext context, IReadOnlyList<string> fallbackFolders) Parameters Type Name Description IMarkdownContext context IReadOnlyList < String > fallbackFolders Returns Type Description IMarkdownContext | Improve this Doc View Source SetFilePathStack(IMarkdownContext, ImmutableStack<String>) Declaration public static IMarkdownContext SetFilePathStack(this IMarkdownContext context, ImmutableStack<string> filePathStack) Parameters Type Name Description IMarkdownContext context ImmutableStack < String > filePathStack Returns Type Description IMarkdownContext | Improve this Doc View Source SetIsInclude(IMarkdownContext) Declaration public static IMarkdownContext SetIsInclude(this IMarkdownContext context) Parameters Type Name Description IMarkdownContext context Returns Type Description IMarkdownContext | Improve this Doc View Source SetIsInTable(IMarkdownContext) Declaration public static IMarkdownContext SetIsInTable(this IMarkdownContext context) Parameters Type Name Description IMarkdownContext context Returns Type Description IMarkdownContext (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.DfmCodeRenderer.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmCodeRenderer.html",
    "title": "Class DfmCodeRenderer | DocFX website",
    "keywords": "Class DfmCodeRenderer Inheritance Object DfmCodeRenderer Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Dfm Assembly : Microsoft.DocAsCode.Dfm.dll Syntax public class DfmCodeRenderer Constructors | Improve this Doc View Source DfmCodeRenderer() Declaration public DfmCodeRenderer() | Improve this Doc View Source DfmCodeRenderer(CodeLanguageExtractorsBuilder) Declaration public DfmCodeRenderer(CodeLanguageExtractorsBuilder builder) Parameters Type Name Description CodeLanguageExtractorsBuilder builder | Improve this Doc View Source DfmCodeRenderer(DfmCodeExtractor) Declaration public DfmCodeRenderer(DfmCodeExtractor extractor) Parameters Type Name Description DfmCodeExtractor extractor Methods | Improve this Doc View Source ExtractCode(DfmFencesToken, String) Declaration [Obsolete] public virtual DfmExtractCodeResult ExtractCode(DfmFencesToken token, string filePath) Parameters Type Name Description DfmFencesToken token String filePath Returns Type Description DfmExtractCodeResult | Improve this Doc View Source ExtractCode(DfmFencesToken, String, IDfmFencesBlockPathQueryOption) Declaration public virtual DfmExtractCodeResult ExtractCode(DfmFencesToken token, string filePath, IDfmFencesBlockPathQueryOption option) Parameters Type Name Description DfmFencesToken token String filePath IDfmFencesBlockPathQueryOption option Returns Type Description DfmExtractCodeResult | Improve this Doc View Source ExtractCode(DfmFencesToken, String[]) Declaration [Obsolete] public virtual DfmExtractCodeResult ExtractCode(DfmFencesToken token, string[] fencesCode) Parameters Type Name Description DfmFencesToken token String [] fencesCode Returns Type Description DfmExtractCodeResult | Improve this Doc View Source ExtractCode(DfmFencesToken, String[], IDfmFencesBlockPathQueryOption) Declaration public virtual DfmExtractCodeResult ExtractCode(DfmFencesToken token, string[] fencesCode, IDfmFencesBlockPathQueryOption option) Parameters Type Name Description DfmFencesToken token String [] fencesCode IDfmFencesBlockPathQueryOption option Returns Type Description DfmExtractCodeResult | Improve this Doc View Source FindFile(DfmFencesToken, IMarkdownContext) Declaration public virtual string FindFile(DfmFencesToken token, IMarkdownContext context) Parameters Type Name Description DfmFencesToken token IMarkdownContext context Returns Type Description String | Improve this Doc View Source Render(IMarkdownRenderer, DfmFencesToken, IMarkdownContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, DfmFencesToken token, IMarkdownContext context) Parameters Type Name Description IMarkdownRenderer renderer DfmFencesToken token IMarkdownContext context Returns Type Description StringBuffer | Improve this Doc View Source RenderCloseCodeTag(StringBuffer, DfmFencesToken, Options) Declaration public virtual StringBuffer RenderCloseCodeTag(StringBuffer result, DfmFencesToken token, Options options) Parameters Type Name Description StringBuffer result DfmFencesToken token Options options Returns Type Description StringBuffer | Improve this Doc View Source RenderClosePreTag(StringBuffer, DfmFencesToken, Options) Declaration public virtual StringBuffer RenderClosePreTag(StringBuffer result, DfmFencesToken token, Options options) Parameters Type Name Description StringBuffer result DfmFencesToken token Options options Returns Type Description StringBuffer | Improve this Doc View Source RenderCodeErrorString(String) Declaration public virtual StringBuffer RenderCodeErrorString(string errorMessage) Parameters Type Name Description String errorMessage Returns Type Description StringBuffer | Improve this Doc View Source RenderFencesCode(DfmFencesToken, Options, String, String[], IDfmFencesBlockPathQueryOption) Declaration public virtual StringBuffer RenderFencesCode(DfmFencesToken token, Options options, string errorMessage, string[] codeLines = null, IDfmFencesBlockPathQueryOption pathQueryOption = null) Parameters Type Name Description DfmFencesToken token Options options String errorMessage String [] codeLines IDfmFencesBlockPathQueryOption pathQueryOption Returns Type Description StringBuffer | Improve this Doc View Source RenderFencesFromCodeContent(String, DfmFencesBlockToken) Declaration public virtual StringBuffer RenderFencesFromCodeContent(string codeContent, DfmFencesBlockToken token) Parameters Type Name Description String codeContent DfmFencesBlockToken token Returns Type Description StringBuffer | Improve this Doc View Source RenderFencesFromCodeContent(String, String, String, String, String, String) Declaration [Obsolete] public virtual StringBuffer RenderFencesFromCodeContent(string codeContent, string path, string queryStringAndFragment = null, string name = null, string lang = null, string title = null) Parameters Type Name Description String codeContent String path String queryStringAndFragment String name String lang String title Returns Type Description StringBuffer | Improve this Doc View Source RenderOpenCodeTag(StringBuffer, DfmFencesToken, Options) Declaration [Obsolete] public virtual StringBuffer RenderOpenCodeTag(StringBuffer result, DfmFencesToken token, Options options) Parameters Type Name Description StringBuffer result DfmFencesToken token Options options Returns Type Description StringBuffer | Improve this Doc View Source RenderOpenCodeTag(StringBuffer, DfmFencesToken, Options, IDfmFencesBlockPathQueryOption) Declaration public virtual StringBuffer RenderOpenCodeTag(StringBuffer result, DfmFencesToken token, Options options, IDfmFencesBlockPathQueryOption pathQueryOption) Parameters Type Name Description StringBuffer result DfmFencesToken token Options options IDfmFencesBlockPathQueryOption pathQueryOption Returns Type Description StringBuffer | Improve this Doc View Source RenderOpenPreTag(StringBuffer, DfmFencesToken, Options) Declaration public virtual StringBuffer RenderOpenPreTag(StringBuffer result, DfmFencesToken token, Options options) Parameters Type Name Description StringBuffer result DfmFencesToken token Options options Returns Type Description StringBuffer | Improve this Doc View Source RenderReferenceNotFoundErrorMessage(IMarkdownRenderer, DfmFencesToken) Declaration public virtual StringBuffer RenderReferenceNotFoundErrorMessage(IMarkdownRenderer renderer, DfmFencesToken token) Parameters Type Name Description IMarkdownRenderer renderer DfmFencesToken token Returns Type Description StringBuffer (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.DfmCodeExtractorHelper.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmCodeExtractorHelper.html",
    "title": "Class DfmCodeExtractorHelper | DocFX website",
    "keywords": "Class DfmCodeExtractorHelper Inheritance Object DfmCodeExtractorHelper Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Dfm Assembly : Microsoft.DocAsCode.Dfm.dll Syntax public static class DfmCodeExtractorHelper Fields | Improve this Doc View Source AllowedIndentCharacters Declaration public static readonly List<char> AllowedIndentCharacters Field Value Type Description List < Char > Methods | Improve this Doc View Source GetIndentLength(String) Declaration public static int GetIndentLength(string s) Parameters Type Name Description String s Returns Type Description Int32 (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.DataContracts.ManagedReference.SyntaxDetailViewModel.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.ManagedReference.SyntaxDetailViewModel.html",
    "title": "Class SyntaxDetailViewModel | DocFX website",
    "keywords": "Class SyntaxDetailViewModel Inheritance Object SyntaxDetailViewModel Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.DataContracts.ManagedReference Assembly : Microsoft.DocAsCode.DataContracts.ManagedReference.dll Syntax [Serializable] public class SyntaxDetailViewModel Properties | Improve this Doc View Source Content Declaration [YamlMember(Alias = \"content\")] [JsonProperty(\"content\")] public string Content { get; set; } Property Value Type Description String | Improve this Doc View Source ContentForCSharp Declaration [YamlIgnore] [JsonIgnore] public string ContentForCSharp { get; set; } Property Value Type Description String | Improve this Doc View Source ContentForVB Declaration [YamlIgnore] [JsonIgnore] public string ContentForVB { get; set; } Property Value Type Description String | Improve this Doc View Source Contents Declaration [JsonIgnore] public SortedList<string, string> Contents { get; set; } Property Value Type Description SortedList < String , String > | Improve this Doc View Source Parameters Declaration [YamlMember(Alias = \"parameters\")] [JsonProperty(\"parameters\")] public List<ApiParameter> Parameters { get; set; } Property Value Type Description List < ApiParameter > | Improve this Doc View Source Return Declaration [YamlMember(Alias = \"return\")] [JsonProperty(\"return\")] public ApiParameter Return { get; set; } Property Value Type Description ApiParameter | Improve this Doc View Source TypeParameters Declaration [YamlMember(Alias = \"typeParameters\")] [JsonProperty(\"typeParameters\")] public List<ApiParameter> TypeParameters { get; set; } Property Value Type Description List < ApiParameter > (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.DataContracts.ManagedReference.PageViewModel.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.ManagedReference.PageViewModel.html",
    "title": "Class PageViewModel | DocFX website",
    "keywords": "Class PageViewModel Inheritance Object PageViewModel Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.DataContracts.ManagedReference Assembly : Microsoft.DocAsCode.DataContracts.ManagedReference.dll Syntax [Serializable] public class PageViewModel Properties | Improve this Doc View Source Items Declaration [YamlMember(Alias = \"items\")] [JsonProperty(\"items\")] public List<ItemViewModel> Items { get; set; } Property Value Type Description List < ItemViewModel > | Improve this Doc View Source Metadata Declaration [JsonExtensionData] public Dictionary<string, object> Metadata { get; set; } Property Value Type Description Dictionary < String , Object > | Improve this Doc View Source References Declaration [YamlMember(Alias = \"references\")] [JsonProperty(\"references\")] public List<ReferenceViewModel> References { get; set; } Property Value Type Description List < ReferenceViewModel > | Improve this Doc View Source ShouldSkipMarkup Declaration [YamlMember(Alias = \"shouldSkipMarkup\")] [JsonProperty(\"shouldSkipMarkup\")] public bool ShouldSkipMarkup { get; set; } Property Value Type Description Boolean (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.DataContracts.Common.Constants.MetadataName.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.Common.Constants.MetadataName.html",
    "title": "Class Constants.MetadataName | DocFX website",
    "keywords": "Class Constants.MetadataName Inheritance Object Constants.MetadataName Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.DataContracts.Common Assembly : Microsoft.DocAsCode.DataContracts.Common.dll Syntax public static class MetadataName Fields | Improve this Doc View Source Version Declaration public const string Version = \"version\" Field Value Type Description String (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.DataContracts.Common.Constants.ExtensionMemberPrefix.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.Common.Constants.ExtensionMemberPrefix.html",
    "title": "Class Constants.ExtensionMemberPrefix | DocFX website",
    "keywords": "Class Constants.ExtensionMemberPrefix Inheritance Object Constants.ExtensionMemberPrefix Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.DataContracts.Common Assembly : Microsoft.DocAsCode.DataContracts.Common.dll Syntax public static class ExtensionMemberPrefix Fields | Improve this Doc View Source Assemblies Declaration public const string Assemblies = \"assemblies.\" Field Value Type Description String | Improve this Doc View Source Children Declaration public const string Children = \"children.\" Field Value Type Description String | Improve this Doc View Source Content Declaration public const string Content = \"content.\" Field Value Type Description String | Improve this Doc View Source DerivedClasses Declaration public const string DerivedClasses = \"derivedClasses.\" Field Value Type Description String | Improve this Doc View Source Exceptions Declaration public const string Exceptions = \"exceptions.\" Field Value Type Description String | Improve this Doc View Source ExtensionMethods Declaration public const string ExtensionMethods = \"extensionMethods.\" Field Value Type Description String | Improve this Doc View Source FullName Declaration public const string FullName = \"fullName.\" Field Value Type Description String | Improve this Doc View Source Implements Declaration public const string Implements = \"implements.\" Field Value Type Description String | Improve this Doc View Source Inheritance Declaration public const string Inheritance = \"inheritance.\" Field Value Type Description String | Improve this Doc View Source InheritedMembers Declaration public const string InheritedMembers = \"inheritedMembers.\" Field Value Type Description String | Improve this Doc View Source Modifiers Declaration public const string Modifiers = \"modifiers.\" Field Value Type Description String | Improve this Doc View Source Name Declaration public const string Name = \"name.\" Field Value Type Description String | Improve this Doc View Source Namespace Declaration public const string Namespace = \"namespace.\" Field Value Type Description String | Improve this Doc View Source NameWithType Declaration public const string NameWithType = \"nameWithType.\" Field Value Type Description String | Improve this Doc View Source Overload Declaration public const string Overload = \"overload.\" Field Value Type Description String | Improve this Doc View Source Overridden Declaration public const string Overridden = \"overridden.\" Field Value Type Description String | Improve this Doc View Source Parent Declaration public const string Parent = \"parent.\" Field Value Type Description String | Improve this Doc View Source Platform Declaration public const string Platform = \"platform.\" Field Value Type Description String | Improve this Doc View Source Return Declaration public const string Return = \"return.\" Field Value Type Description String | Improve this Doc View Source Source Declaration public const string Source = \"source.\" Field Value Type Description String | Improve this Doc View Source Spec Declaration public const string Spec = \"spec.\" Field Value Type Description String (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.DataContracts.Common.Constants.DocumentType.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.Common.Constants.DocumentType.html",
    "title": "Class Constants.DocumentType | DocFX website",
    "keywords": "Class Constants.DocumentType Inheritance Object Constants.DocumentType Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.DataContracts.Common Assembly : Microsoft.DocAsCode.DataContracts.Common.dll Syntax public static class DocumentType Fields | Improve this Doc View Source Toc Declaration public const string Toc = \"Toc\" Field Value Type Description String (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.DataContracts.Common.Constants.DevLang.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.Common.Constants.DevLang.html",
    "title": "Class Constants.DevLang | DocFX website",
    "keywords": "Class Constants.DevLang Inheritance Object Constants.DevLang Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.DataContracts.Common Assembly : Microsoft.DocAsCode.DataContracts.Common.dll Syntax public static class DevLang Fields | Improve this Doc View Source CSharp Declaration public const string CSharp = \"csharp\" Field Value Type Description String | Improve this Doc View Source VB Declaration public const string VB = \"vb\" Field Value Type Description String (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.CustomAssemblyTextAttribute.html": {
    "href": "api/Microsoft.DocAsCode.CustomAssemblyTextAttribute.html",
    "title": "Class CustomAssemblyTextAttribute | DocFX website",
    "keywords": "Class CustomAssemblyTextAttribute Inheritance Object Attribute CustomAssemblyTextAttribute AssemblyLicenseAttribute AssemblyUsageAttribute Implements _Attribute Inherited Members Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.Equals(Object) Attribute.GetHashCode() Attribute.Match(Object) Attribute.IsDefaultAttribute() Attribute._Attribute.GetTypeInfoCount(UInt32) Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr) Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr) Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr) Attribute.TypeId Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode Assembly : docfx.dll Syntax public abstract class CustomAssemblyTextAttribute : Attribute, _Attribute Constructors | Improve this Doc View Source CustomAssemblyTextAttribute(String[]) Declaration public CustomAssemblyTextAttribute(params string[] lines) Parameters Type Name Description String [] lines Properties | Improve this Doc View Source Value Declaration public string Value { get; } Property Value Type Description String Implements System.Runtime.InteropServices._Attribute (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.ContentPairingInfo.html": {
    "href": "api/Microsoft.DocAsCode.ContentPairingInfo.html",
    "title": "Class ContentPairingInfo | DocFX website",
    "keywords": "Class ContentPairingInfo Inheritance Object ContentPairingInfo Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode Assembly : docfx.dll Syntax [Serializable] public class ContentPairingInfo Properties | Improve this Doc View Source ContentFolder Declaration [JsonProperty(\"contentFolder\")] public string ContentFolder { get; set; } Property Value Type Description String | Improve this Doc View Source OverwriteFragmentsFolder Declaration [JsonProperty(\"overwriteFragmentsFolder\")] public string OverwriteFragmentsFolder { get; set; } Property Value Type Description String (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Common.html": {
    "href": "api/Microsoft.DocAsCode.Common.html",
    "title": "Namespace Microsoft.DocAsCode.Common | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.Common Classes CompositionContainer ManifestUtility (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Common.ManifestUtility.html": {
    "href": "api/Microsoft.DocAsCode.Common.ManifestUtility.html",
    "title": "Class ManifestUtility | DocFX website",
    "keywords": "Class ManifestUtility Inheritance Object ManifestUtility Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Common Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public static class ManifestUtility Methods | Improve this Doc View Source ApplyLogCodes(ManifestItemCollection, ConcurrentDictionary<String, ImmutableHashSet<String>>) Declaration public static void ApplyLogCodes(ManifestItemCollection manifestItems, ConcurrentDictionary<string, ImmutableHashSet<string>> codes) Parameters Type Name Description ManifestItemCollection manifestItems ConcurrentDictionary < String , ImmutableHashSet < String >> codes | Improve this Doc View Source MergeManifest(List<Manifest>) Declaration public static Manifest MergeManifest(List<Manifest> manifests) Parameters Type Name Description List < Manifest > manifests Returns Type Description Manifest | Improve this Doc View Source RemoveDuplicateOutputFiles(ManifestItemCollection) Declaration public static void RemoveDuplicateOutputFiles(ManifestItemCollection manifestItems) Parameters Type Name Description ManifestItemCollection manifestItems (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Common.CompositionContainer.html": {
    "href": "api/Microsoft.DocAsCode.Common.CompositionContainer.html",
    "title": "Class CompositionContainer | DocFX website",
    "keywords": "Class CompositionContainer Inheritance Object CompositionContainer Namespace : Microsoft.DocAsCode.Common Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax [Export(typeof(ICompositionContainer))] public class CompositionContainer : ICompositionContainer Constructors | Improve this Doc View Source CompositionContainer() Declaration public CompositionContainer() | Improve this Doc View Source CompositionContainer(CompositionHost) Declaration public CompositionContainer(CompositionHost container) Parameters Type Name Description CompositionHost container Properties | Improve this Doc View Source Container Declaration public CompositionHost Container { get; } Property Value Type Description CompositionHost | Improve this Doc View Source DefaultContainer Declaration public static CompositionHost DefaultContainer { get; } Property Value Type Description CompositionHost Methods | Improve this Doc View Source GetContainer(IEnumerable<Assembly>) Declaration public static CompositionHost GetContainer(IEnumerable<Assembly> assemblies) Parameters Type Name Description IEnumerable < Assembly > assemblies Returns Type Description CompositionHost | Improve this Doc View Source GetExport(CompositionHost, Type, String) Declaration public static object GetExport(CompositionHost container, Type type, string name) Parameters Type Name Description CompositionHost container Type type String name Returns Type Description Object | Improve this Doc View Source GetExport<T>() Declaration public T GetExport<T>() Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source GetExport<T>(CompositionHost, String) Declaration public static T GetExport<T>(CompositionHost container, string name) Parameters Type Name Description CompositionHost container String name Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source GetExport<T>(String) Declaration public T GetExport<T>(string name) Parameters Type Name Description String name Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source GetExports<T>() Declaration public IEnumerable<T> GetExports<T>() Returns Type Description IEnumerable <T> Type Parameters Name Description T | Improve this Doc View Source GetExports<T>(String) Declaration public IEnumerable<T> GetExports<T>(string name) Parameters Type Name Description String name Returns Type Description IEnumerable <T> Type Parameters Name Description T (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.CascadableOptions.html": {
    "href": "api/Microsoft.DocAsCode.CascadableOptions.html",
    "title": "Class CascadableOptions | DocFX website",
    "keywords": "Class CascadableOptions Inheritance Object CascadableOptions Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode Assembly : docfx.dll Syntax public class CascadableOptions Properties | Improve this Doc View Source ForceRebuild Declaration [Option('f', \"force\")] public bool ForceRebuild { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Log Declaration [Option('l', \"log\", HelpText = \"Specify the file name to save processing log\")] public string Log { get; set; } Property Value Type Description String | Improve this Doc View Source LogLevel Declaration [Option(\"logLevel\", HelpText = \"Specify to which log level will be logged. By default log level >= Info will be logged. The acceptable value could be Verbose, Info, Warning, Error.\")] public LogLevel? LogLevel { get; set; } Property Value Type Description Nullable < LogLevel > | Improve this Doc View Source Port Declaration [Option('p', \"port\", HelpText = \"Specify the port of the hosted website\")] public int? Port { get; set; } Property Value Type Description Nullable < Int32 > | Improve this Doc View Source PreserveRawInlineComments Declaration [Option(\"raw\", HelpText = \"Preserve the existing xml comment tags inside 'summary' triple slash comments\")] public bool PreserveRawInlineComments { get; set; } Property Value Type Description Boolean | Improve this Doc View Source RootOutputFolder Declaration [Option('o', \"output\")] public string RootOutputFolder { get; set; } Property Value Type Description String | Improve this Doc View Source Serve Declaration [Option('s', \"serve\", HelpText = \"Host the generated documentation to a website\")] public bool Serve { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Templates Declaration [OptionList('t', \"template\", Separator = ',', HelpText = \"Specifies the template name to apply to. If not specified, output YAML file will not be transformed.\")] public List<string> Templates { get; set; } Property Value Type Description List < String > | Improve this Doc View Source Themes Declaration [OptionList(\"theme\", Separator = ',', HelpText = \"Specifies which theme to use. By default 'default' theme is offered.\")] public List<string> Themes { get; set; } Property Value Type Description List < String > (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.BuildJsonConfig.html": {
    "href": "api/Microsoft.DocAsCode.BuildJsonConfig.html",
    "title": "Class BuildJsonConfig | DocFX website",
    "keywords": "Class BuildJsonConfig Inheritance Object BuildJsonConfig PdfJsonConfig Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode Assembly : docfx.dll Syntax [Serializable] public class BuildJsonConfig Properties | Improve this Doc View Source BaseDirectory Declaration [JsonIgnore] public string BaseDirectory { get; set; } Property Value Type Description String | Improve this Doc View Source ChangesFile Declaration [JsonProperty(\"changesFile\")] public string ChangesFile { get; set; } Property Value Type Description String | Improve this Doc View Source CleanupCacheHistory Declaration [JsonProperty(\"cleanupCacheHistory\")] public bool CleanupCacheHistory { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Content Declaration [JsonProperty(\"content\")] public FileMapping Content { get; set; } Property Value Type Description FileMapping | Improve this Doc View Source CustomLinkResolver Declaration [JsonProperty(\"customLinkResolver\")] public string CustomLinkResolver { get; set; } Property Value Type Description String | Improve this Doc View Source Destination Declaration [JsonProperty(\"dest\")] public string Destination { get; set; } Property Value Type Description String | Improve this Doc View Source DisableGitFeatures Declaration [JsonProperty(\"disableGitFeatures\")] public bool DisableGitFeatures { get; set; } Property Value Type Description Boolean | Improve this Doc View Source DryRun Declaration [JsonProperty(\"dryRun\")] public bool? DryRun { get; set; } Property Value Type Description Nullable < Boolean > | Improve this Doc View Source EnableDebugMode Declaration [JsonProperty(\"debug\")] public bool? EnableDebugMode { get; set; } Property Value Type Description Nullable < Boolean > | Improve this Doc View Source ExportRawModel Declaration [JsonProperty(\"exportRawModel\")] public bool? ExportRawModel { get; set; } Property Value Type Description Nullable < Boolean > | Improve this Doc View Source ExportViewModel Declaration [JsonProperty(\"exportViewModel\")] public bool? ExportViewModel { get; set; } Property Value Type Description Nullable < Boolean > | Improve this Doc View Source FALName Declaration [JsonProperty(\"falName\")] public string FALName { get; set; } Property Value Type Description String | Improve this Doc View Source FileMetadata Metadata that applies to some specific files. The key is the metadata name. For each item of the value: The key is the glob pattern to match the files. The value is the value of the metadata. Declaration [JsonProperty(\"fileMetadata\")] public Dictionary<string, FileMetadataPairs> FileMetadata { get; set; } Property Value Type Description Dictionary < String , FileMetadataPairs > | Improve this Doc View Source FileMetadataFilePaths Declaration [JsonProperty(\"fileMetadataFiles\")] public ListWithStringFallback FileMetadataFilePaths { get; set; } Property Value Type Description ListWithStringFallback | Improve this Doc View Source Force Declaration [JsonProperty(\"force\")] public bool? Force { get; set; } Property Value Type Description Nullable < Boolean > | Improve this Doc View Source ForcePostProcess Declaration [JsonProperty(\"forcePostProcess\")] public bool? ForcePostProcess { get; set; } Property Value Type Description Nullable < Boolean > | Improve this Doc View Source GlobalMetadata Declaration [JsonProperty(\"globalMetadata\")] [JsonConverter(typeof(JObjectDictionaryToObjectDictionaryConverter))] public Dictionary<string, object> GlobalMetadata { get; set; } Property Value Type Description Dictionary < String , Object > | Improve this Doc View Source GlobalMetadataFilePaths Declaration [JsonProperty(\"globalMetadataFiles\")] public ListWithStringFallback GlobalMetadataFilePaths { get; set; } Property Value Type Description ListWithStringFallback | Improve this Doc View Source Groups Declaration [JsonProperty(\"groups\")] public Dictionary<string, GroupConfig> Groups { get; set; } Property Value Type Description Dictionary < String , GroupConfig > | Improve this Doc View Source Host Declaration [JsonProperty(\"host\")] public string Host { get; set; } Property Value Type Description String | Improve this Doc View Source IntermediateFolder Declaration [JsonProperty(\"intermediateFolder\")] public string IntermediateFolder { get; set; } Property Value Type Description String | Improve this Doc View Source KeepFileLink Declaration [JsonProperty(\"keepFileLink\")] public bool KeepFileLink { get; set; } Property Value Type Description Boolean | Improve this Doc View Source LruSize Declaration [JsonProperty(\"lruSize\")] public int? LruSize { get; set; } Property Value Type Description Nullable < Int32 > | Improve this Doc View Source MarkdownEngineName Declaration [JsonProperty(\"markdownEngineName\")] public string MarkdownEngineName { get; set; } Property Value Type Description String | Improve this Doc View Source MarkdownEngineProperties Declaration [JsonProperty(\"markdownEngineProperties\")] [JsonConverter(typeof(JObjectDictionaryToObjectDictionaryConverter))] public Dictionary<string, object> MarkdownEngineProperties { get; set; } Property Value Type Description Dictionary < String , Object > | Improve this Doc View Source MaxParallelism Declaration [JsonProperty(\"maxParallelism\")] public int? MaxParallelism { get; set; } Property Value Type Description Nullable < Int32 > | Improve this Doc View Source NoLangKeyword Disable default lang keyword, e.g. null Declaration [JsonProperty(\"noLangKeyword\")] public bool NoLangKeyword { get; set; } Property Value Type Description Boolean | Improve this Doc View Source OutputFolder Declaration [JsonIgnore] public string OutputFolder { get; set; } Property Value Type Description String | Improve this Doc View Source OutputFolderForDebugFiles Declaration [JsonProperty(\"debugOutput\")] public string OutputFolderForDebugFiles { get; set; } Property Value Type Description String | Improve this Doc View Source Overwrite Declaration [JsonProperty(\"overwrite\")] public FileMapping Overwrite { get; set; } Property Value Type Description FileMapping | Improve this Doc View Source Pairing Declaration [JsonProperty(\"pairing\")] public List<ContentPairingInfo> Pairing { get; set; } Property Value Type Description List < ContentPairingInfo > | Improve this Doc View Source Port Declaration [JsonProperty(\"port\")] public string Port { get; set; } Property Value Type Description String | Improve this Doc View Source PostProcessors Declaration [JsonProperty(\"postProcessors\")] public ListWithStringFallback PostProcessors { get; set; } Property Value Type Description ListWithStringFallback | Improve this Doc View Source RawModelOutputFolder Declaration [JsonProperty(\"rawModelOutputFolder\")] public string RawModelOutputFolder { get; set; } Property Value Type Description String | Improve this Doc View Source Resource Declaration [JsonProperty(\"resource\")] public FileMapping Resource { get; set; } Property Value Type Description FileMapping | Improve this Doc View Source SchemaLicense Declaration [JsonProperty(\"schemaLicense\")] public string SchemaLicense { get; set; } Property Value Type Description String | Improve this Doc View Source Serve Declaration [JsonProperty(\"serve\")] public bool? Serve { get; set; } Property Value Type Description Nullable < Boolean > | Improve this Doc View Source SitemapOptions Declaration [JsonProperty(\"sitemap\")] public SitemapOptions SitemapOptions { get; set; } Property Value Type Description SitemapOptions | Improve this Doc View Source TagParameters Declaration [JsonProperty(\"tagParameters\")] public Dictionary<string, JArray> TagParameters { get; set; } Property Value Type Description Dictionary < String , Newtonsoft.Json.Linq.JArray > | Improve this Doc View Source Templates Declaration [JsonProperty(\"template\")] public ListWithStringFallback Templates { get; set; } Property Value Type Description ListWithStringFallback | Improve this Doc View Source Themes Declaration [JsonProperty(\"theme\")] public ListWithStringFallback Themes { get; set; } Property Value Type Description ListWithStringFallback | Improve this Doc View Source Versions Declaration [Obsolete] [JsonProperty(\"versions\")] public Dictionary<string, GroupConfig> Versions { get; set; } Property Value Type Description Dictionary < String , GroupConfig > | Improve this Doc View Source ViewModelOutputFolder Declaration [JsonProperty(\"viewModelOutputFolder\")] public string ViewModelOutputFolder { get; set; } Property Value Type Description String | Improve this Doc View Source XRefMaps Declaration [JsonProperty(\"xref\")] public ListWithStringFallback XRefMaps { get; set; } Property Value Type Description ListWithStringFallback | Improve this Doc View Source XRefServiceUrls Declaration [JsonProperty(\"xrefService\")] public ListWithStringFallback XRefServiceUrls { get; set; } Property Value Type Description ListWithStringFallback | Improve this Doc View Source XrefTags Declaration [JsonProperty(\"xrefTags\")] public ListWithStringFallback XrefTags { get; set; } Property Value Type Description ListWithStringFallback (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.UniversalReference.html": {
    "href": "api/Microsoft.DocAsCode.Build.UniversalReference.html",
    "title": "Namespace Microsoft.DocAsCode.Build.UniversalReference | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.Build.UniversalReference Classes ApiBuildOutput ApiBuildOutputMetadataResolver ApiBuildOutputProfile ApiExceptionInfoBuildOutput ApiHrefLinkInfoBuildOutputUrlResolver ApiInheritanceTreeBuildOutput ApiLanguageValuePair<T> ApiLinkInfoBuildOutput ApiListInDevLangsOfApiNamesTypeConverter ApiNames ApiNamesProfile ApiNamesSpecResolver ApiNamesTypeConverter ApiParameterBuildOutput ApiSyntaxBuildOutput ApplyOverwriteDocumentForUref BuildUniversalReferenceDocument FillReferenceInformation ModelConverter UniversalReferenceDocumentProcessor (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.UniversalReference.UniversalReferenceDocumentProcessor.html": {
    "href": "api/Microsoft.DocAsCode.Build.UniversalReference.UniversalReferenceDocumentProcessor.html",
    "title": "Class UniversalReferenceDocumentProcessor | DocFX website",
    "keywords": "Class UniversalReferenceDocumentProcessor Inheritance Object DisposableDocumentProcessor ReferenceDocumentProcessorBase UniversalReferenceDocumentProcessor Implements IDisposable Inherited Members ReferenceDocumentProcessorBase.Load(FileAndType, ImmutableDictionary<String, Object>) ReferenceDocumentProcessorBase.LoadOverwrite(FileAndType, ImmutableDictionary<String, Object>) DisposableDocumentProcessor.Dispose() DisposableDocumentProcessor.UpdateHref(FileModel, IDocumentBuildContext) Namespace : Microsoft.DocAsCode.Build.UniversalReference Assembly : Microsoft.DocAsCode.Build.UniversalReference.dll Syntax [Export(typeof(IDocumentProcessor))] public class UniversalReferenceDocumentProcessor : ReferenceDocumentProcessorBase, IDisposable Properties | Improve this Doc View Source BuildSteps Declaration [ImportMany(\"UniversalReferenceDocumentProcessor\")] public override IEnumerable<IDocumentBuildStep> BuildSteps { get; set; } Property Value Type Description IEnumerable < IDocumentBuildStep > Overrides DisposableDocumentProcessor.BuildSteps | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description String Overrides DisposableDocumentProcessor.Name | Improve this Doc View Source ProcessedDocumentType Declaration protected override string ProcessedDocumentType { get; } Property Value Type Description String Overrides ReferenceDocumentProcessorBase.ProcessedDocumentType Methods | Improve this Doc View Source GetProcessingPriority(FileAndType) Declaration public override ProcessingPriority GetProcessingPriority(FileAndType file) Parameters Type Name Description FileAndType file Returns Type Description ProcessingPriority | Improve this Doc View Source LoadArticle(FileAndType, ImmutableDictionary<String, Object>) Declaration protected override FileModel LoadArticle(FileAndType file, ImmutableDictionary<string, object> metadata) Parameters Type Name Description FileAndType file ImmutableDictionary < String , Object > metadata Returns Type Description FileModel | Improve this Doc View Source Save(FileModel) Declaration public override SaveResult Save(FileModel model) Parameters Type Name Description FileModel model Returns Type Description SaveResult | Improve this Doc View Source UpdateModelContent(FileModel) Declaration protected virtual void UpdateModelContent(FileModel model) Parameters Type Name Description FileModel model Implements System.IDisposable (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.UniversalReference.ModelConverter.html": {
    "href": "api/Microsoft.DocAsCode.Build.UniversalReference.ModelConverter.html",
    "title": "Class ModelConverter | DocFX website",
    "keywords": "Class ModelConverter Inheritance Object ModelConverter Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.UniversalReference Assembly : Microsoft.DocAsCode.Build.UniversalReference.dll Syntax public static class ModelConverter Methods | Improve this Doc View Source GetXref(String, String, String) Declaration public static string GetXref(string uid, string text = null, string alt = null) Parameters Type Name Description String uid String text String alt Returns Type Description String | Improve this Doc View Source ResolveApiNames(String, String[], IReadOnlyDictionary<String, ApiNames>) Declaration public static ApiNames ResolveApiNames(string uid, string[] supportedLanguages, IReadOnlyDictionary<string, ApiNames> references) Parameters Type Name Description String uid String [] supportedLanguages IReadOnlyDictionary < String , ApiNames > references Returns Type Description ApiNames | Improve this Doc View Source ToApiBuildOutput(PageViewModel) Declaration public static ApiBuildOutput ToApiBuildOutput(PageViewModel model) Parameters Type Name Description PageViewModel model Returns Type Description ApiBuildOutput | Improve this Doc View Source ToApiListInDevLangs<T>(T, SortedList<String, T>, String[]) Declaration public static List<ApiLanguageValuePair<T>> ToApiListInDevLangs<T>(T defaultValue, SortedList<string, T> values, string[] supportedLanguages) Parameters Type Name Description T defaultValue SortedList < String , T> values String [] supportedLanguages Returns Type Description List < ApiLanguageValuePair <T>> Type Parameters Name Description T | Improve this Doc View Source ToApiListInDevLangsResolvingApiNames(ApiParameter, SortedList<String, ApiParameter>, String[], IReadOnlyDictionary<String, ApiNames>) Declaration public static List<ApiLanguageValuePair<ApiParameterBuildOutput>> ToApiListInDevLangsResolvingApiNames(ApiParameter defaultValue, SortedList<string, ApiParameter> values, string[] supportedLanguages, IReadOnlyDictionary<string, ApiNames> references) Parameters Type Name Description ApiParameter defaultValue SortedList < String , ApiParameter > values String [] supportedLanguages IReadOnlyDictionary < String , ApiNames > references Returns Type Description List < ApiLanguageValuePair < ApiParameterBuildOutput >> | Improve this Doc View Source ToApiListInDevlangsResolvingApiNames(List<ExceptionInfo>, SortedList<String, List<ExceptionInfo>>, String[], IReadOnlyDictionary<String, ApiNames>) Declaration public static List<ApiLanguageValuePair<List<ApiExceptionInfoBuildOutput>>> ToApiListInDevlangsResolvingApiNames(List<ExceptionInfo> defaultValue, SortedList<string, List<ExceptionInfo>> values, string[] supportedLanguages, IReadOnlyDictionary<string, ApiNames> references) Parameters Type Name Description List < ExceptionInfo > defaultValue SortedList < String , List < ExceptionInfo >> values String [] supportedLanguages IReadOnlyDictionary < String , ApiNames > references Returns Type Description List < ApiLanguageValuePair < List < ApiExceptionInfoBuildOutput >>> | Improve this Doc View Source ToApiListInDevlangsResolvingApiNames(List<InheritanceTree>, SortedList<String, List<InheritanceTree>>, String[], IReadOnlyDictionary<String, ApiNames>) Declaration public static List<ApiLanguageValuePair<List<ApiInheritanceTreeBuildOutput>>> ToApiListInDevlangsResolvingApiNames(List<InheritanceTree> defaultValue, SortedList<string, List<InheritanceTree>> values, string[] supportedLanguages, IReadOnlyDictionary<string, ApiNames> references) Parameters Type Name Description List < InheritanceTree > defaultValue SortedList < String , List < InheritanceTree >> values String [] supportedLanguages IReadOnlyDictionary < String , ApiNames > references Returns Type Description List < ApiLanguageValuePair < List < ApiInheritanceTreeBuildOutput >>> | Improve this Doc View Source ToApiListInDevLangsResolvingApiNames(List<String>, SortedList<String, List<String>>, String[], IReadOnlyDictionary<String, ApiNames>) Declaration public static List<ApiLanguageValuePair<List<ApiNames>>> ToApiListInDevLangsResolvingApiNames(List<string> defaultValue, SortedList<string, List<string>> values, string[] supportedLanguages, IReadOnlyDictionary<string, ApiNames> references) Parameters Type Name Description List < String > defaultValue SortedList < String , List < String >> values String [] supportedLanguages IReadOnlyDictionary < String , ApiNames > references Returns Type Description List < ApiLanguageValuePair < List < ApiNames >>> | Improve this Doc View Source ToApiListInDevLangsResolvingApiNames(String, SortedList<String, String>, String[], IReadOnlyDictionary<String, ApiNames>) Declaration public static List<ApiLanguageValuePair<ApiNames>> ToApiListInDevLangsResolvingApiNames(string defaultValue, SortedList<string, string> values, string[] supportedLanguages, IReadOnlyDictionary<string, ApiNames> references) Parameters Type Name Description String defaultValue SortedList < String , String > values String [] supportedLanguages IReadOnlyDictionary < String , ApiNames > references Returns Type Description List < ApiLanguageValuePair < ApiNames >> (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.SchemaDriven.ReferenceType.html": {
    "href": "api/Microsoft.DocAsCode.Build.SchemaDriven.ReferenceType.html",
    "title": "Enum ReferenceType | DocFX website",
    "keywords": "Enum ReferenceType Namespace : Microsoft.DocAsCode.Build.SchemaDriven Assembly : Microsoft.DocAsCode.Build.SchemaDriven.dll Syntax public enum ReferenceType Fields Name Description File None (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.SchemaDriven.Processors.html": {
    "href": "api/Microsoft.DocAsCode.Build.SchemaDriven.Processors.html",
    "title": "Namespace Microsoft.DocAsCode.Build.SchemaDriven.Processors | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.Build.SchemaDriven.Processors Classes FileIncludeInterpreter FileInterpreter FragmentsValidationInterpreter HrefInterpreter MarkdownAstInterpreter MarkdownInterpreter MarkdownWithContentAnchorInterpreter MergeTypeInterpreter ProcessContext SchemaProcessor TagsInterpreter XrefInterpreter XrefPropertiesInterpreter Interfaces IInterpreter IProcessContext ITagInterpreter (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.SchemaDriven.OverwriteModelType.html": {
    "href": "api/Microsoft.DocAsCode.Build.SchemaDriven.OverwriteModelType.html",
    "title": "Enum OverwriteModelType | DocFX website",
    "keywords": "Enum OverwriteModelType Namespace : Microsoft.DocAsCode.Build.SchemaDriven Assembly : Microsoft.DocAsCode.Build.SchemaDriven.dll Syntax public enum OverwriteModelType Fields Name Description Classic MarkdownFragments (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.SchemaDriven.OverwriteApplier.html": {
    "href": "api/Microsoft.DocAsCode.Build.SchemaDriven.OverwriteApplier.html",
    "title": "Class OverwriteApplier | DocFX website",
    "keywords": "Class OverwriteApplier Inheritance Object OverwriteApplier Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.SchemaDriven Assembly : Microsoft.DocAsCode.Build.SchemaDriven.dll Syntax public class OverwriteApplier Constructors | Improve this Doc View Source OverwriteApplier(IHostService, OverwriteModelType) Declaration public OverwriteApplier(IHostService host, OverwriteModelType type) Parameters Type Name Description IHostService host OverwriteModelType type Methods | Improve this Doc View Source BuildOverwriteWithSchema(FileModel, OverwriteDocumentModel, BaseSchema) Declaration public object BuildOverwriteWithSchema(FileModel owModel, OverwriteDocumentModel overwrite, BaseSchema schema) Parameters Type Name Description FileModel owModel OverwriteDocumentModel overwrite BaseSchema schema Returns Type Description Object | Improve this Doc View Source MergeContentWithOverwrite(ref Object, Object, String, String, BaseSchema) Declaration public void MergeContentWithOverwrite(ref object source, object overwrite, string uid, string path, BaseSchema schema) Parameters Type Name Description Object source Object overwrite String uid String path BaseSchema schema | Improve this Doc View Source UpdateXrefSpec(FileModel, BaseSchema) Declaration public void UpdateXrefSpec(FileModel fileModel, BaseSchema schema) Parameters Type Name Description FileModel fileModel BaseSchema schema (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.SchemaDriven.MergeType.html": {
    "href": "api/Microsoft.DocAsCode.Build.SchemaDriven.MergeType.html",
    "title": "Enum MergeType | DocFX website",
    "keywords": "Enum MergeType Namespace : Microsoft.DocAsCode.Build.SchemaDriven Assembly : Microsoft.DocAsCode.Build.SchemaDriven.dll Syntax public enum MergeType Fields Name Description Ignore Key Merge Replace (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.SchemaDriven.JsonPointer.html": {
    "href": "api/Microsoft.DocAsCode.Build.SchemaDriven.JsonPointer.html",
    "title": "Class JsonPointer | DocFX website",
    "keywords": "Class JsonPointer Json Pointer: https://tools.ietf.org/html/rfc6901 Inheritance Object JsonPointer Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.SchemaDriven Assembly : Microsoft.DocAsCode.Build.SchemaDriven.dll Syntax public class JsonPointer Constructors | Improve this Doc View Source JsonPointer(String) Declaration public JsonPointer(string raw) Parameters Type Name Description String raw | Improve this Doc View Source JsonPointer(String[]) Declaration public JsonPointer(string[] parts) Parameters Type Name Description String [] parts Methods | Improve this Doc View Source FindSchema(DocumentSchema) Declaration public BaseSchema FindSchema(DocumentSchema rootSchema) Parameters Type Name Description DocumentSchema rootSchema Returns Type Description BaseSchema | Improve this Doc View Source GetChild(Object, String) Declaration public static object GetChild(object root, string part) Parameters Type Name Description Object root String part Returns Type Description Object | Improve this Doc View Source GetChildSchema(BaseSchema, String) Declaration public static BaseSchema GetChildSchema(BaseSchema parent, string part) Parameters Type Name Description BaseSchema parent String part Returns Type Description BaseSchema | Improve this Doc View Source GetParentPointer() Declaration public JsonPointer GetParentPointer() Returns Type Description JsonPointer | Improve this Doc View Source GetValue(Object) Declaration public object GetValue(object root) Parameters Type Name Description Object root Returns Type Description Object | Improve this Doc View Source SetChild(Object, String, Object) Declaration public static void SetChild(object parent, string part, object value) Parameters Type Name Description Object parent String part Object value | Improve this Doc View Source SetValue(ref Object, Object) Declaration public void SetValue(ref object root, object value) Parameters Type Name Description Object root Object value | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() | Improve this Doc View Source TryCreate(String, out JsonPointer) Declaration public static bool TryCreate(string raw, out JsonPointer pointer) Parameters Type Name Description String raw JsonPointer pointer Returns Type Description Boolean (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.SchemaDriven.ISchemaFragmentsHandler.html": {
    "href": "api/Microsoft.DocAsCode.Build.SchemaDriven.ISchemaFragmentsHandler.html",
    "title": "Interface ISchemaFragmentsHandler | DocFX website",
    "keywords": "Interface ISchemaFragmentsHandler Namespace : Microsoft.DocAsCode.Build.SchemaDriven Assembly : Microsoft.DocAsCode.Build.SchemaDriven.dll Syntax public interface ISchemaFragmentsHandler Methods | Improve this Doc View Source HandleProperty(String, YamlMappingNode, Dictionary<String, MarkdownFragment>, BaseSchema, String, String) Declaration void HandleProperty(string propertyKey, YamlMappingNode node, Dictionary<string, MarkdownFragment> fragments, BaseSchema schema, string oPathPrefix, string uid) Parameters Type Name Description String propertyKey YamlDotNet.RepresentationModel.YamlMappingNode node Dictionary < String , MarkdownFragment > fragments BaseSchema schema String oPathPrefix String uid | Improve this Doc View Source HandleUid(String, YamlMappingNode, Dictionary<String, MarkdownFragment>, BaseSchema, String, String) Declaration void HandleUid(string uidKey, YamlMappingNode node, Dictionary<string, MarkdownFragment> fragments, BaseSchema schema, string oPathPrefix, string uid) Parameters Type Name Description String uidKey YamlDotNet.RepresentationModel.YamlMappingNode node Dictionary < String , MarkdownFragment > fragments BaseSchema schema String oPathPrefix String uid (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.SchemaDriven.IContentAnchorParser.html": {
    "href": "api/Microsoft.DocAsCode.Build.SchemaDriven.IContentAnchorParser.html",
    "title": "Interface IContentAnchorParser | DocFX website",
    "keywords": "Interface IContentAnchorParser Namespace : Microsoft.DocAsCode.Build.SchemaDriven Assembly : Microsoft.DocAsCode.Build.SchemaDriven.dll Syntax public interface IContentAnchorParser Properties | Improve this Doc View Source ContainsAnchor Declaration bool ContainsAnchor { get; } Property Value Type Description Boolean | Improve this Doc View Source Content Declaration string Content { get; } Property Value Type Description String Methods | Improve this Doc View Source Parse(String) Declaration string Parse(string input) Parameters Type Name Description String input Returns Type Description String (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.SchemaDriven.DocumentSchema.html": {
    "href": "api/Microsoft.DocAsCode.Build.SchemaDriven.DocumentSchema.html",
    "title": "Class DocumentSchema | DocFX website",
    "keywords": "Class DocumentSchema Inheritance Object BaseSchema DocumentSchema Inherited Members BaseSchema.Title BaseSchema.Description BaseSchema.Type BaseSchema.Default BaseSchema.Properties BaseSchema.Items BaseSchema.Reference BaseSchema.ContentType BaseSchema.Tags BaseSchema.MergeType BaseSchema.XrefProperties Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.SchemaDriven Assembly : Microsoft.DocAsCode.Build.SchemaDriven.dll Syntax public class DocumentSchema : BaseSchema Properties | Improve this Doc View Source AllowOverwrite Overwrites are only allowed when the schema contains \"uid\" definition Declaration public bool AllowOverwrite { get; } Property Value Type Description Boolean | Improve this Doc View Source Id Declaration public Uri Id { get; set; } Property Value Type Description Uri | Improve this Doc View Source Metadata Declaration public string Metadata { get; set; } Property Value Type Description String | Improve this Doc View Source MetadataReference Declaration public JsonPointer MetadataReference { get; } Property Value Type Description JsonPointer | Improve this Doc View Source SchemaVersion Declaration public Uri SchemaVersion { get; set; } Property Value Type Description Uri | Improve this Doc View Source Validator Declaration public SchemaValidator Validator { get; } Property Value Type Description SchemaValidator | Improve this Doc View Source Version Declaration public string Version { get; set; } Property Value Type Description String Methods | Improve this Doc View Source Load(TextReader, String) Declaration public static DocumentSchema Load(TextReader reader, string title) Parameters Type Name Description TextReader reader String title Returns Type Description DocumentSchema Extension Methods SchemaExtensions.IsRequiredInFragments(BaseSchema) SchemaExtensions.IsLegalInFragments(BaseSchema) (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.SchemaDriven.ContentType.html": {
    "href": "api/Microsoft.DocAsCode.Build.SchemaDriven.ContentType.html",
    "title": "Enum ContentType | DocFX website",
    "keywords": "Enum ContentType Namespace : Microsoft.DocAsCode.Build.SchemaDriven Assembly : Microsoft.DocAsCode.Build.SchemaDriven.dll Syntax public enum ContentType Fields Name Description Default File Href Markdown Uid Xref (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.SchemaDriven.ContentAnchorParser.html": {
    "href": "api/Microsoft.DocAsCode.Build.SchemaDriven.ContentAnchorParser.html",
    "title": "Class ContentAnchorParser | DocFX website",
    "keywords": "Class ContentAnchorParser Inheritance Object ContentAnchorParser Implements IContentAnchorParser Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.SchemaDriven Assembly : Microsoft.DocAsCode.Build.SchemaDriven.dll Syntax public class ContentAnchorParser : IContentAnchorParser Constructors | Improve this Doc View Source ContentAnchorParser(String) Declaration public ContentAnchorParser(string content) Parameters Type Name Description String content Fields | Improve this Doc View Source AnchorContentName Declaration public const string AnchorContentName = \"*content\" Field Value Type Description String Properties | Improve this Doc View Source ContainsAnchor Declaration public bool ContainsAnchor { get; } Property Value Type Description Boolean | Improve this Doc View Source Content Declaration public string Content { get; } Property Value Type Description String Methods | Improve this Doc View Source Parse(String) Declaration public string Parse(string input) Parameters Type Name Description String input Returns Type Description String Implements IContentAnchorParser (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.SchemaDriven.BuildSchemaBasedDocument.html": {
    "href": "api/Microsoft.DocAsCode.Build.SchemaDriven.BuildSchemaBasedDocument.html",
    "title": "Class BuildSchemaBasedDocument | DocFX website",
    "keywords": "Class BuildSchemaBasedDocument Inheritance Object BaseDocumentBuildStep BuildReferenceDocumentBase BuildSchemaBasedDocument Implements ISupportIncrementalBuildStep Inherited Members BuildReferenceDocumentBase.Build(FileModel, IHostService) BuildReferenceDocumentBase.BuildOverwrite(IHostService, FileModel) BuildReferenceDocumentBase.BuildArticleCore(IHostService, FileModel, IModelAttributeHandler, HandleModelAttributesContext, Boolean) BaseDocumentBuildStep.Prebuild(ImmutableList<FileModel>, IHostService) BaseDocumentBuildStep.Postbuild(ImmutableList<FileModel>, IHostService) Namespace : Microsoft.DocAsCode.Build.SchemaDriven Assembly : Microsoft.DocAsCode.Build.SchemaDriven.dll Syntax [Export(\"SchemaDrivenDocumentProcessor\", typeof(IDocumentBuildStep))] public class BuildSchemaBasedDocument : BuildReferenceDocumentBase, ISupportIncrementalBuildStep Properties | Improve this Doc View Source BuildOrder Declaration public override int BuildOrder { get; } Property Value Type Description Int32 Overrides BuildReferenceDocumentBase.BuildOrder | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description String Overrides BaseDocumentBuildStep.Name Methods | Improve this Doc View Source BuildArticle(IHostService, FileModel) Declaration protected override void BuildArticle(IHostService host, FileModel model) Parameters Type Name Description IHostService host FileModel model | Improve this Doc View Source CanIncrementalBuild(FileAndType) Declaration public bool CanIncrementalBuild(FileAndType fileAndType) Parameters Type Name Description FileAndType fileAndType Returns Type Description Boolean | Improve this Doc View Source GetDependencyTypesToRegister() Declaration public IEnumerable<DependencyType> GetDependencyTypesToRegister() Returns Type Description IEnumerable < DependencyType > | Improve this Doc View Source GetIncrementalContextHash() Declaration public string GetIncrementalContextHash() Returns Type Description String Implements ISupportIncrementalBuildStep (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.SchemaDriven.BaseSchema.html": {
    "href": "api/Microsoft.DocAsCode.Build.SchemaDriven.BaseSchema.html",
    "title": "Class BaseSchema | DocFX website",
    "keywords": "Class BaseSchema Inheritance Object BaseSchema DocumentSchema Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.SchemaDriven Assembly : Microsoft.DocAsCode.Build.SchemaDriven.dll Syntax public class BaseSchema Properties | Improve this Doc View Source ContentType Declaration public ContentType ContentType { get; set; } Property Value Type Description ContentType | Improve this Doc View Source Default Declaration public JToken Default { get; set; } Property Value Type Description Newtonsoft.Json.Linq.JToken | Improve this Doc View Source Description Declaration public string Description { get; set; } Property Value Type Description String | Improve this Doc View Source Items Declaration public BaseSchema Items { get; set; } Property Value Type Description BaseSchema | Improve this Doc View Source MergeType Declaration public MergeType MergeType { get; set; } Property Value Type Description MergeType | Improve this Doc View Source Properties Declaration public Dictionary<string, BaseSchema> Properties { get; set; } Property Value Type Description Dictionary < String , BaseSchema > | Improve this Doc View Source Reference Declaration public ReferenceType Reference { get; set; } Property Value Type Description ReferenceType | Improve this Doc View Source Tags Declaration public List<string> Tags { get; set; } Property Value Type Description List < String > | Improve this Doc View Source Title Declaration public string Title { get; set; } Property Value Type Description String | Improve this Doc View Source Type Declaration public JSchemaType? Type { get; set; } Property Value Type Description Nullable < Newtonsoft.Json.Schema.JSchemaType > | Improve this Doc View Source XrefProperties Declaration public List<string> XrefProperties { get; set; } Property Value Type Description List < String > Extension Methods SchemaExtensions.IsRequiredInFragments(BaseSchema) SchemaExtensions.IsLegalInFragments(BaseSchema) (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.SchemaDriven.ApplyTags.html": {
    "href": "api/Microsoft.DocAsCode.Build.SchemaDriven.ApplyTags.html",
    "title": "Class ApplyTags | DocFX website",
    "keywords": "Class ApplyTags Inheritance Object BaseDocumentBuildStep ApplyTags Implements ISupportIncrementalBuildStep Inherited Members BaseDocumentBuildStep.Prebuild(ImmutableList<FileModel>, IHostService) BaseDocumentBuildStep.Build(FileModel, IHostService) Namespace : Microsoft.DocAsCode.Build.SchemaDriven Assembly : Microsoft.DocAsCode.Build.SchemaDriven.dll Syntax [Export(\"SchemaDrivenDocumentProcessor\", typeof(IDocumentBuildStep))] public class ApplyTags : BaseDocumentBuildStep, ISupportIncrementalBuildStep Properties | Improve this Doc View Source BuildOrder Declaration public override int BuildOrder { get; } Property Value Type Description Int32 Overrides BaseDocumentBuildStep.BuildOrder | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description String Overrides BaseDocumentBuildStep.Name | Improve this Doc View Source TagInterpreters Declaration [ImportMany] public IEnumerable<ITagInterpreter> TagInterpreters { get; set; } Property Value Type Description IEnumerable < ITagInterpreter > Methods | Improve this Doc View Source CanIncrementalBuild(FileAndType) Declaration public bool CanIncrementalBuild(FileAndType fileAndType) Parameters Type Name Description FileAndType fileAndType Returns Type Description Boolean | Improve this Doc View Source GetDependencyTypesToRegister() Declaration public IEnumerable<DependencyType> GetDependencyTypesToRegister() Returns Type Description IEnumerable < DependencyType > | Improve this Doc View Source GetIncrementalContextHash() Declaration public string GetIncrementalContextHash() Returns Type Description String | Improve this Doc View Source Postbuild(ImmutableList<FileModel>, IHostService) Declaration public override void Postbuild(ImmutableList<FileModel> models, IHostService host) Parameters Type Name Description ImmutableList < FileModel > models IHostService host Implements ISupportIncrementalBuildStep (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.SchemaDriven.ApplyOverwriteFragments.html": {
    "href": "api/Microsoft.DocAsCode.Build.SchemaDriven.ApplyOverwriteFragments.html",
    "title": "Class ApplyOverwriteFragments | DocFX website",
    "keywords": "Class ApplyOverwriteFragments Inheritance Object BaseDocumentBuildStep ApplyOverwriteFragments Implements ISupportIncrementalBuildStep Inherited Members BaseDocumentBuildStep.Prebuild(ImmutableList<FileModel>, IHostService) BaseDocumentBuildStep.Postbuild(ImmutableList<FileModel>, IHostService) Namespace : Microsoft.DocAsCode.Build.SchemaDriven Assembly : Microsoft.DocAsCode.Build.SchemaDriven.dll Syntax [Export(\"SchemaDrivenDocumentProcessor\", typeof(IDocumentBuildStep))] public class ApplyOverwriteFragments : BaseDocumentBuildStep, ISupportIncrementalBuildStep Properties | Improve this Doc View Source BuildOrder Declaration public override int BuildOrder { get; } Property Value Type Description Int32 Overrides BaseDocumentBuildStep.BuildOrder | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description String Overrides BaseDocumentBuildStep.Name Methods | Improve this Doc View Source Build(FileModel, IHostService) Declaration public override void Build(FileModel model, IHostService host) Parameters Type Name Description FileModel model IHostService host | Improve this Doc View Source CanIncrementalBuild(FileAndType) Declaration public bool CanIncrementalBuild(FileAndType fileAndType) Parameters Type Name Description FileAndType fileAndType Returns Type Description Boolean | Improve this Doc View Source GetDependencyTypesToRegister() Declaration public IEnumerable<DependencyType> GetDependencyTypesToRegister() Returns Type Description IEnumerable < DependencyType > | Improve this Doc View Source GetIncrementalContextHash() Declaration public string GetIncrementalContextHash() Returns Type Description String Implements ISupportIncrementalBuildStep (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.SchemaDriven.ApplyOverwriteDocument.html": {
    "href": "api/Microsoft.DocAsCode.Build.SchemaDriven.ApplyOverwriteDocument.html",
    "title": "Class ApplyOverwriteDocument | DocFX website",
    "keywords": "Class ApplyOverwriteDocument Inheritance Object BaseDocumentBuildStep ApplyOverwriteDocument Implements ISupportIncrementalBuildStep Inherited Members BaseDocumentBuildStep.Prebuild(ImmutableList<FileModel>, IHostService) BaseDocumentBuildStep.Build(FileModel, IHostService) Namespace : Microsoft.DocAsCode.Build.SchemaDriven Assembly : Microsoft.DocAsCode.Build.SchemaDriven.dll Syntax [Export(\"SchemaDrivenDocumentProcessor\", typeof(IDocumentBuildStep))] public class ApplyOverwriteDocument : BaseDocumentBuildStep, ISupportIncrementalBuildStep Properties | Improve this Doc View Source BuildOrder Declaration public override int BuildOrder { get; } Property Value Type Description Int32 Overrides BaseDocumentBuildStep.BuildOrder | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description String Overrides BaseDocumentBuildStep.Name Methods | Improve this Doc View Source CanIncrementalBuild(FileAndType) Declaration public bool CanIncrementalBuild(FileAndType fileAndType) Parameters Type Name Description FileAndType fileAndType Returns Type Description Boolean | Improve this Doc View Source GetDependencyTypesToRegister() Declaration public IEnumerable<DependencyType> GetDependencyTypesToRegister() Returns Type Description IEnumerable < DependencyType > | Improve this Doc View Source GetIncrementalContextHash() Declaration public string GetIncrementalContextHash() Returns Type Description String | Improve this Doc View Source Postbuild(ImmutableList<FileModel>, IHostService) Declaration public override void Postbuild(ImmutableList<FileModel> models, IHostService host) Parameters Type Name Description ImmutableList < FileModel > models IHostService host Implements ISupportIncrementalBuildStep (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs.ApiExceptionInfoBuildOutput.html": {
    "href": "api/Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs.ApiExceptionInfoBuildOutput.html",
    "title": "Class ApiExceptionInfoBuildOutput | DocFX website",
    "keywords": "Class ApiExceptionInfoBuildOutput Inheritance Object ApiExceptionInfoBuildOutput Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs Assembly : Microsoft.DocAsCode.Build.ManagedReference.dll Syntax [Serializable] public class ApiExceptionInfoBuildOutput Properties | Improve this Doc View Source Description Declaration [YamlMember(Alias = \"description\")] [JsonProperty(\"description\")] public string Description { get; set; } Property Value Type Description String | Improve this Doc View Source Type Declaration [YamlMember(Alias = \"type\")] [JsonProperty(\"type\")] public ApiNames Type { get; set; } Property Value Type Description ApiNames Methods | Improve this Doc View Source Expand(Dictionary<String, ApiReferenceBuildOutput>, String[]) Declaration public void Expand(Dictionary<string, ApiReferenceBuildOutput> references, string[] supportedLanguages) Parameters Type Name Description Dictionary < String , ApiReferenceBuildOutput > references String [] supportedLanguages | Improve this Doc View Source FromModel(ExceptionInfo) Declaration public static ApiExceptionInfoBuildOutput FromModel(ExceptionInfo model) Parameters Type Name Description ExceptionInfo model Returns Type Description ApiExceptionInfoBuildOutput | Improve this Doc View Source FromModel(ExceptionInfo, Dictionary<String, ApiReferenceBuildOutput>, String[]) Declaration public static ApiExceptionInfoBuildOutput FromModel(ExceptionInfo model, Dictionary<string, ApiReferenceBuildOutput> references, string[] supportedLanguages) Parameters Type Name Description ExceptionInfo model Dictionary < String , ApiReferenceBuildOutput > references String [] supportedLanguages Returns Type Description ApiExceptionInfoBuildOutput (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs.ApiBuildOutputUtility.html": {
    "href": "api/Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs.ApiBuildOutputUtility.html",
    "title": "Class ApiBuildOutputUtility | DocFX website",
    "keywords": "Class ApiBuildOutputUtility Inheritance Object ApiBuildOutputUtility Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs Assembly : Microsoft.DocAsCode.Build.ManagedReference.dll Syntax public static class ApiBuildOutputUtility Methods | Improve this Doc View Source GetApiNames(String, Dictionary<String, ApiReferenceBuildOutput>, String[]) Declaration public static ApiNames GetApiNames(string key, Dictionary<string, ApiReferenceBuildOutput> references, string[] supportedLanguages) Parameters Type Name Description String key Dictionary < String , ApiReferenceBuildOutput > references String [] supportedLanguages Returns Type Description ApiNames | Improve this Doc View Source GetHref(String, String) Declaration public static string GetHref(string url, string altText = null) Parameters Type Name Description String url String altText Returns Type Description String | Improve this Doc View Source GetReferenceViewModel(String, Dictionary<String, ApiReferenceBuildOutput>, String[]) Declaration public static ApiReferenceBuildOutput GetReferenceViewModel(string key, Dictionary<string, ApiReferenceBuildOutput> references, string[] supportedLanguages) Parameters Type Name Description String key Dictionary < String , ApiReferenceBuildOutput > references String [] supportedLanguages Returns Type Description ApiReferenceBuildOutput | Improve this Doc View Source GetReferenceViewModel(String, Dictionary<String, ApiReferenceBuildOutput>, String[], Int32) Declaration public static ApiReferenceBuildOutput GetReferenceViewModel(string key, Dictionary<string, ApiReferenceBuildOutput> references, string[] supportedLanguages, int index) Parameters Type Name Description String key Dictionary < String , ApiReferenceBuildOutput > references String [] supportedLanguages Int32 index Returns Type Description ApiReferenceBuildOutput | Improve this Doc View Source GetSpec(String, Dictionary<String, ApiReferenceBuildOutput>, String[]) Declaration public static List<ApiLanguageValuePair> GetSpec(string key, Dictionary<string, ApiReferenceBuildOutput> references, string[] supportedLanguages) Parameters Type Name Description String key Dictionary < String , ApiReferenceBuildOutput > references String [] supportedLanguages Returns Type Description List < ApiLanguageValuePair > | Improve this Doc View Source GetXref(String, String, String) Declaration public static string GetXref(string uid, string text = null, string alt = null) Parameters Type Name Description String uid String text String alt Returns Type Description String | Improve this Doc View Source TransformToLanguagePairList(String, SortedList<String, String>, String[]) Declaration public static List<ApiLanguageValuePair> TransformToLanguagePairList(string defaultValue, SortedList<string, string> values, string[] supportedLanguages) Parameters Type Name Description String defaultValue SortedList < String , String > values String [] supportedLanguages Returns Type Description List < ApiLanguageValuePair > (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.XRefMapRedirection.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.XRefMapRedirection.html",
    "title": "Class XRefMapRedirection | DocFX website",
    "keywords": "Class XRefMapRedirection Inheritance Object XRefMapRedirection Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Engine Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public class XRefMapRedirection Properties | Improve this Doc View Source Href Declaration [YamlMember(Alias = \"href\")] public string Href { get; set; } Property Value Type Description String | Improve this Doc View Source UidPrefix Declaration [YamlMember(Alias = \"uidPrefix\")] public string UidPrefix { get; set; } Property Value Type Description String (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.XRefMapReader.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.XRefMapReader.html",
    "title": "Class XRefMapReader | DocFX website",
    "keywords": "Class XRefMapReader Inheritance Object XRefRedirectionReader XRefMapReader Implements IXRefContainerReader Inherited Members XRefRedirectionReader.Find(String) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Engine Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public sealed class XRefMapReader : XRefRedirectionReader, IXRefContainerReader Constructors | Improve this Doc View Source XRefMapReader(String, Dictionary<String, IXRefContainer>) Declaration public XRefMapReader(string majorKey, Dictionary<string, IXRefContainer> maps) Parameters Type Name Description String majorKey Dictionary < String , IXRefContainer > maps Methods | Improve this Doc View Source GetMap(String) Declaration protected override IXRefContainer GetMap(string name) Parameters Type Name Description String name Returns Type Description IXRefContainer Overrides XRefRedirectionReader.GetMap(String) Implements IXRefContainerReader (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.XRefMapDownloader.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.XRefMapDownloader.html",
    "title": "Class XRefMapDownloader | DocFX website",
    "keywords": "Class XRefMapDownloader Inheritance Object XRefMapDownloader Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Engine Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public class XRefMapDownloader Constructors | Improve this Doc View Source XRefMapDownloader(String, Int32) Declaration public XRefMapDownloader(string baseFolder = null, int maxParallelism = 16) Parameters Type Name Description String baseFolder Int32 maxParallelism Methods | Improve this Doc View Source DownloadAsync(Uri) Download xref map file from uri (async). Declaration public Task<IXRefContainer> DownloadAsync(Uri uri) Parameters Type Name Description Uri uri The uri of xref map file. Returns Type Description Task < IXRefContainer > An instance of XRefMap . | Improve this Doc View Source DownloadBySchemeAsync(Uri) Declaration protected virtual Task<IXRefContainer> DownloadBySchemeAsync(Uri uri) Parameters Type Name Description Uri uri Returns Type Description Task < IXRefContainer > Remarks Support scheme: http, https, ftp, file, embedded. | Improve this Doc View Source DownloadFromLocal(Uri) Declaration protected static IXRefContainer DownloadFromLocal(Uri uri) Parameters Type Name Description Uri uri Returns Type Description IXRefContainer | Improve this Doc View Source DownloadFromWebAsync(Uri) Declaration protected static Task<XRefMap> DownloadFromWebAsync(Uri uri) Parameters Type Name Description Uri uri Returns Type Description Task < XRefMap > | Improve this Doc View Source UpdateHref(XRefMap, Uri) Declaration public static void UpdateHref(XRefMap map, Uri uri) Parameters Type Name Description XRefMap map Uri uri (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.XRefMap.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.XRefMap.html",
    "title": "Class XRefMap | DocFX website",
    "keywords": "Class XRefMap Inheritance Object XRefMap Implements IXRefContainer Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Engine Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public class XRefMap : IXRefContainer Properties | Improve this Doc View Source BaseUrl Declaration [YamlMember(Alias = \"baseUrl\")] public string BaseUrl { get; set; } Property Value Type Description String | Improve this Doc View Source HrefUpdated Declaration [YamlMember(Alias = \"hrefUpdated\")] public bool? HrefUpdated { get; set; } Property Value Type Description Nullable < Boolean > | Improve this Doc View Source IsEmbeddedRedirections Declaration public bool IsEmbeddedRedirections { get; } Property Value Type Description Boolean | Improve this Doc View Source Others Declaration public Dictionary<string, object> Others { get; set; } Property Value Type Description Dictionary < String , Object > | Improve this Doc View Source Redirections Declaration [YamlMember(Alias = \"redirections\")] public List<XRefMapRedirection> Redirections { get; set; } Property Value Type Description List < XRefMapRedirection > | Improve this Doc View Source References Declaration [YamlMember(Alias = \"references\")] public List<XRefSpec> References { get; set; } Property Value Type Description List < XRefSpec > | Improve this Doc View Source Sorted Declaration [YamlMember(Alias = \"sorted\")] public bool? Sorted { get; set; } Property Value Type Description Nullable < Boolean > | Improve this Doc View Source Tags Declaration [YamlMember(Alias = \"tags\")] public List<string> Tags { get; set; } Property Value Type Description List < String > Methods | Improve this Doc View Source GetReader() Declaration public IXRefContainerReader GetReader() Returns Type Description IXRefContainerReader | Improve this Doc View Source GetRedirections() Declaration public IEnumerable<XRefMapRedirection> GetRedirections() Returns Type Description IEnumerable < XRefMapRedirection > | Improve this Doc View Source Sort() Declaration public void Sort() | Improve this Doc View Source UpdateHref(Uri) Declaration public void UpdateHref(Uri baseUri) Parameters Type Name Description Uri baseUri Implements IXRefContainer (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.XRefDetails.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.XRefDetails.html",
    "title": "Class XRefDetails | DocFX website",
    "keywords": "Class XRefDetails Inheritance Object XRefDetails Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Engine Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax [Serializable] public sealed class XRefDetails Properties | Improve this Doc View Source Alt Declaration public string Alt { get; } Property Value Type Description String | Improve this Doc View Source AltProperty Declaration public string AltProperty { get; } Property Value Type Description String | Improve this Doc View Source Anchor Declaration public string Anchor { get; } Property Value Type Description String | Improve this Doc View Source DisplayProperty Declaration public string DisplayProperty { get; } Property Value Type Description String | Improve this Doc View Source Href Declaration public string Href { get; } Property Value Type Description String | Improve this Doc View Source InnerHtml Declaration public string InnerHtml { get; } Property Value Type Description String | Improve this Doc View Source Raw Declaration public string Raw { get; } Property Value Type Description String | Improve this Doc View Source RawSource Declaration public string RawSource { get; } Property Value Type Description String | Improve this Doc View Source SourceEndLineNumber Declaration public int SourceEndLineNumber { get; } Property Value Type Description Int32 | Improve this Doc View Source SourceFile Declaration public string SourceFile { get; } Property Value Type Description String | Improve this Doc View Source SourceStartLineNumber Declaration public int SourceStartLineNumber { get; } Property Value Type Description Int32 | Improve this Doc View Source Spec Declaration public XRefSpec Spec { get; } Property Value Type Description XRefSpec | Improve this Doc View Source TemplatePath Declaration public string TemplatePath { get; } Property Value Type Description String | Improve this Doc View Source Text Declaration public string Text { get; } Property Value Type Description String | Improve this Doc View Source ThrowIfNotResolved Declaration public bool ThrowIfNotResolved { get; } Property Value Type Description Boolean | Improve this Doc View Source Title Declaration public string Title { get; } Property Value Type Description String | Improve this Doc View Source Uid Declaration public string Uid { get; } Property Value Type Description String Methods | Improve this Doc View Source ApplyXrefSpec(XRefSpec) Declaration public void ApplyXrefSpec(XRefSpec spec) Parameters Type Name Description XRefSpec spec | Improve this Doc View Source ConvertToHtmlNode(String, ITemplateRenderer) TODO: multi-lang support Declaration public HtmlNode ConvertToHtmlNode(string language, ITemplateRenderer renderer) Parameters Type Name Description String language ITemplateRenderer renderer Returns Type Description HtmlAgilityPack.HtmlNode | Improve this Doc View Source ConvertXrefLinkNodeToXrefNode(HtmlNode) Declaration public static HtmlNode ConvertXrefLinkNodeToXrefNode(HtmlNode node) Parameters Type Name Description HtmlAgilityPack.HtmlNode node Returns Type Description HtmlAgilityPack.HtmlNode | Improve this Doc View Source From(HtmlNode) Declaration public static XRefDetails From(HtmlNode node) Parameters Type Name Description HtmlAgilityPack.HtmlNode node Returns Type Description XRefDetails (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.XrefClient.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.XrefClient.html",
    "title": "Class XrefClient | DocFX website",
    "keywords": "Class XrefClient Inheritance Object XrefClient Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Engine Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public class XrefClient Constructors | Improve this Doc View Source XrefClient() Declaration public XrefClient() | Improve this Doc View Source XrefClient(Int32) Declaration public XrefClient(int maxParallism) Parameters Type Name Description Int32 maxParallism | Improve this Doc View Source XrefClient(HttpClient) Declaration public XrefClient(HttpClient client) Parameters Type Name Description HttpClient client | Improve this Doc View Source XrefClient(HttpClient, Int32) Declaration public XrefClient(HttpClient client, int maxParallism) Parameters Type Name Description HttpClient client Int32 maxParallism | Improve this Doc View Source XrefClient(HttpClient, SemaphoreSlim) Declaration public XrefClient(HttpClient client, SemaphoreSlim semaphore) Parameters Type Name Description HttpClient client SemaphoreSlim semaphore | Improve this Doc View Source XrefClient(SemaphoreSlim) Declaration public XrefClient(SemaphoreSlim semaphore) Parameters Type Name Description SemaphoreSlim semaphore Fields | Improve this Doc View Source Default Declaration public static readonly XrefClient Default Field Value Type Description XrefClient Methods | Improve this Doc View Source ResolveAsync(String) Declaration public Task<List<XRefSpec>> ResolveAsync(string url) Parameters Type Name Description String url Returns Type Description Task < List < XRefSpec >> (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.XRefArchiveReader.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.XRefArchiveReader.html",
    "title": "Class XRefArchiveReader | DocFX website",
    "keywords": "Class XRefArchiveReader Inheritance Object XRefRedirectionReader XRefArchiveReader Implements IXRefContainerReader IDisposable Inherited Members XRefRedirectionReader.Find(String) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Engine Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public class XRefArchiveReader : XRefRedirectionReader, IXRefContainerReader, IDisposable Constructors | Improve this Doc View Source XRefArchiveReader(XRefArchive) Declaration public XRefArchiveReader(XRefArchive archive) Parameters Type Name Description XRefArchive archive Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source GetMap(String) Declaration protected override IXRefContainer GetMap(string name) Parameters Type Name Description String name Returns Type Description IXRefContainer Overrides XRefRedirectionReader.GetMap(String) Implements IXRefContainerReader System.IDisposable (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.XRefArchiveMode.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.XRefArchiveMode.html",
    "title": "Enum XRefArchiveMode | DocFX website",
    "keywords": "Enum XRefArchiveMode Namespace : Microsoft.DocAsCode.Build.Engine Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public enum XRefArchiveMode Fields Name Description Create Read Update (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.TemplateProcessor.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.TemplateProcessor.html",
    "title": "Class TemplateProcessor | DocFX website",
    "keywords": "Class TemplateProcessor Inheritance Object TemplateProcessor Implements IDisposable Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Engine Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public class TemplateProcessor : IDisposable Constructors | Improve this Doc View Source TemplateProcessor(ResourceFileReader, DocumentBuildContext, Int32) TemplateName can be either file or folder If TemplateName is file, it is considered as the default template If TemplateName is a folder, files inside the folder is considered as the template, each file is named after {DocumentType}.{extension} Declaration public TemplateProcessor(ResourceFileReader resourceProvider, DocumentBuildContext context, int maxParallelism = 0) Parameters Type Name Description ResourceFileReader resourceProvider DocumentBuildContext context Int32 maxParallelism Properties | Improve this Doc View Source Tokens Declaration public IDictionary<string, string> Tokens { get; } Property Value Type Description IDictionary < String , String > Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source GetTemplateBundle(String) Declaration public TemplateBundle GetTemplateBundle(string documentType) Parameters Type Name Description String documentType Returns Type Description TemplateBundle | Improve this Doc View Source TryGetFileExtension(String, out String) Declaration public bool TryGetFileExtension(string documentType, out string fileExtension) Parameters Type Name Description String documentType String fileExtension Returns Type Description Boolean Implements System.IDisposable (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.Incrementals.ChangeKindWithDependency.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.Incrementals.ChangeKindWithDependency.html",
    "title": "Enum ChangeKindWithDependency | DocFX website",
    "keywords": "Enum ChangeKindWithDependency Namespace : Microsoft.DocAsCode.Build.Engine.Incrementals Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public enum ChangeKindWithDependency Fields Name Description Created Deleted DependencyUpdated None Updated (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.Incrementals.ChangeKind.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.Incrementals.ChangeKind.html",
    "title": "Enum ChangeKind | DocFX website",
    "keywords": "Enum ChangeKind Namespace : Microsoft.DocAsCode.Build.Engine.Incrementals Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public enum ChangeKind Fields Name Description Created Deleted None Updated (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.Incrementals.ChangeItem.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.Incrementals.ChangeItem.html",
    "title": "Class ChangeItem | DocFX website",
    "keywords": "Class ChangeItem Inheritance Object ChangeItem Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Engine.Incrementals Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public sealed class ChangeItem Properties | Improve this Doc View Source FilePath Declaration public string FilePath { get; set; } Property Value Type Description String | Improve this Doc View Source Kind Declaration public ChangeKindWithDependency Kind { get; set; } Property Value Type Description ChangeKindWithDependency (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.Incrementals.BuildVersionInfo.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.Incrementals.BuildVersionInfo.html",
    "title": "Class BuildVersionInfo | DocFX website",
    "keywords": "Class BuildVersionInfo Inheritance Object BuildVersionInfo Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Engine.Incrementals Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public class BuildVersionInfo Properties | Improve this Doc View Source Attributes deserialized attributes Declaration [JsonIgnore] public IDictionary<string, FileAttributeItem> Attributes { get; set; } Property Value Type Description IDictionary < String , FileAttributeItem > | Improve this Doc View Source AttributesFile The file link for file attributes.(type is FileAttributes ). e.g. last modified time, md5. Declaration public string AttributesFile { get; set; } Property Value Type Description String | Improve this Doc View Source BaseDir Declaration [JsonIgnore] public string BaseDir { get; } Property Value Type Description String | Improve this Doc View Source BuildMessage deserialized build messages. Declaration [JsonIgnore] public BuildMessage BuildMessage { get; } Property Value Type Description BuildMessage | Improve this Doc View Source BuildMessageFile The file link for the build message file (type is BuildMessage ). Declaration public string BuildMessageFile { get; set; } Property Value Type Description String | Improve this Doc View Source BuildOutputs deserialized outputs Declaration [JsonIgnore] public BuildOutputs BuildOutputs { get; } Property Value Type Description BuildOutputs | Improve this Doc View Source ConfigHash The hash info for configs. Include global metadata, file metadata. Declaration public string ConfigHash { get; set; } Property Value Type Description String | Improve this Doc View Source Dependency deserialized dependency graph Declaration [JsonIgnore] public DependencyGraph Dependency { get; set; } Property Value Type Description DependencyGraph | Improve this Doc View Source DependencyFile The file link for dependency (type is Load(TextReader) ). Declaration public string DependencyFile { get; set; } Property Value Type Description String | Improve this Doc View Source ExternalXRefSpecFile The file link for the ExternalXRefSpec file. Declaration public string ExternalXRefSpecFile { get; set; } Property Value Type Description String | Improve this Doc View Source FileMap deserialized filemap. Declaration [JsonIgnore] public IDictionary<string, FileMapItem> FileMap { get; } Property Value Type Description IDictionary < String , FileMapItem > | Improve this Doc View Source FileMapFile The file link for the FileMap file. Declaration public string FileMapFile { get; set; } Property Value Type Description String | Improve this Doc View Source Manifest deserialized manifestitems Declaration [JsonIgnore] public IEnumerable<ManifestItem> Manifest { get; set; } Property Value Type Description IEnumerable < ManifestItem > | Improve this Doc View Source ManifestFile The file link for the manifest file(type is Microsoft.DocAsCode.Plugins.Manifest ). Declaration public string ManifestFile { get; set; } Property Value Type Description String | Improve this Doc View Source OutputFile The file link for build outputs (type is BuildOutputs ). Declaration public string OutputFile { get; set; } Property Value Type Description String | Improve this Doc View Source Processors The information for processors. Declaration public List<ProcessorInfo> Processors { get; } Property Value Type Description List < ProcessorInfo > | Improve this Doc View Source TocRestructions deserialized Toc Restructions. Declaration [JsonIgnore] public IDictionary<string, List<TreeItemRestructure>> TocRestructions { get; } Property Value Type Description IDictionary < String , List < TreeItemRestructure >> | Improve this Doc View Source TocRestructionsFile The file link for the TocRestructions file. Declaration public string TocRestructionsFile { get; set; } Property Value Type Description String | Improve this Doc View Source VersionName The version name of documents. Declaration public string VersionName { get; set; } Property Value Type Description String | Improve this Doc View Source XRefSpecMap deserialized xrefspecmap. Key is original file path from root. Value is XrefSpecs reported by the file. Declaration [JsonIgnore] public IDictionary<string, List<XRefSpec>> XRefSpecMap { get; } Property Value Type Description IDictionary < String , List < XRefSpec >> | Improve this Doc View Source XRefSpecMapFile The file link for the XRefMap file(type is XRefMap ). Declaration public string XRefSpecMapFile { get; set; } Property Value Type Description String Methods | Improve this Doc View Source SaveManifest() Declaration public void SaveManifest() (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.Incrementals.BuildOutputs.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.Incrementals.BuildOutputs.html",
    "title": "Class BuildOutputs | DocFX website",
    "keywords": "Class BuildOutputs Inheritance Object Dictionary < String , String > OSPlatformSensitiveDictionary < String > BuildOutputs Implements IDictionary < String , String > ICollection < KeyValuePair < String , String >> IDictionary ICollection IReadOnlyDictionary < String , String > IReadOnlyCollection < KeyValuePair < String , String >> IEnumerable < KeyValuePair < String , String >> IEnumerable ISerializable IDeserializationCallback Inherited Members Dictionary<String, String>.Add(String, String) System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.String>>.Add(System.Collections.Generic.KeyValuePair<System.String, System.String>) System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.String>>.Contains(System.Collections.Generic.KeyValuePair<System.String, System.String>) System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.String>>.Remove(System.Collections.Generic.KeyValuePair<System.String, System.String>) Dictionary<String, String>.Clear() Dictionary<String, String>.ContainsKey(String) Dictionary<String, String>.ContainsValue(String) Dictionary<String, String>.GetEnumerator() System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.String>>.GetEnumerator() Dictionary<String, String>.GetObjectData(SerializationInfo, StreamingContext) Dictionary<String, String>.OnDeserialization(Object) Dictionary<String, String>.Remove(String) Dictionary<String, String>.TryGetValue(String, String) System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.String>>.CopyTo(System.Collections.Generic.KeyValuePair<System.String, System.String>[], System.Int32) Dictionary<String, String>.ICollection.CopyTo(Array, Int32) Dictionary<String, String>.IEnumerable.GetEnumerator() System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.IDictionary.get_Item(System.Object) System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.IDictionary.set_Item(System.Object, System.Object) Dictionary<String, String>.IDictionary.Add(Object, Object) Dictionary<String, String>.IDictionary.Contains(Object) Dictionary<String, String>.IDictionary.GetEnumerator() Dictionary<String, String>.IDictionary.Remove(Object) Dictionary<String, String>.Comparer Dictionary<String, String>.Count Dictionary<String, String>.Keys System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.IDictionary<System.String, System.String>.Keys System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.IReadOnlyDictionary<System.String, System.String>.Keys Dictionary<String, String>.Values System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.IDictionary<System.String, System.String>.Values System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.IReadOnlyDictionary<System.String, System.String>.Values Dictionary<String, String>.Item[String] System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.String>>.IsReadOnly Dictionary<String, String>.ICollection.IsSynchronized Dictionary<String, String>.ICollection.SyncRoot Dictionary<String, String>.IDictionary.IsFixedSize Dictionary<String, String>.IDictionary.IsReadOnly Dictionary<String, String>.IDictionary.Keys Dictionary<String, String>.IDictionary.Values Dictionary<String, String>.IDictionary.Item[Object] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Engine.Incrementals Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public class BuildOutputs : OSPlatformSensitiveDictionary<string>, IDictionary<string, string>, ICollection<KeyValuePair<string, string>>, IDictionary, ICollection, IReadOnlyDictionary<string, string>, IReadOnlyCollection<KeyValuePair<string, string>>, IEnumerable<KeyValuePair<string, string>>, IEnumerable, ISerializable, IDeserializationCallback Implements System.Collections.Generic.IDictionary<TKey,TValue> System.Collections.Generic.ICollection<T> System.Collections.IDictionary System.Collections.ICollection System.Collections.Generic.IReadOnlyDictionary<TKey,TValue> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.Runtime.Serialization.ISerializable System.Runtime.Serialization.IDeserializationCallback (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.FileCollection.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.FileCollection.html",
    "title": "Class FileCollection | DocFX website",
    "keywords": "Class FileCollection Inheritance Object FileCollection Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Engine Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public class FileCollection Constructors | Improve this Doc View Source FileCollection(FileCollection) Declaration public FileCollection(FileCollection collection) Parameters Type Name Description FileCollection collection | Improve this Doc View Source FileCollection(String) Declaration public FileCollection(string defaultBaseDir) Parameters Type Name Description String defaultBaseDir Properties | Improve this Doc View Source Count Declaration public int Count { get; } Property Value Type Description Int32 | Improve this Doc View Source DefaultBaseDir Declaration public string DefaultBaseDir { get; set; } Property Value Type Description String Methods | Improve this Doc View Source Add(DocumentType, IEnumerable<String>, String, String) Declaration public void Add(DocumentType type, IEnumerable<string> files, string sourceDir = null, string destinationDir = null) Parameters Type Name Description DocumentType type IEnumerable < String > files String sourceDir String destinationDir | Improve this Doc View Source Add(DocumentType, String, IEnumerable<String>, String, String) Declaration public void Add(DocumentType type, string baseDir, IEnumerable<string> files, string sourceDir = null, string destinationDir = null) Parameters Type Name Description DocumentType type String baseDir IEnumerable < String > files String sourceDir String destinationDir | Improve this Doc View Source EnumerateFiles() Declaration public IEnumerable<FileAndType> EnumerateFiles() Returns Type Description IEnumerable < FileAndType > | Improve this Doc View Source RemoveAll(Predicate<FileAndType>) Declaration public void RemoveAll(Predicate<FileAndType> match) Parameters Type Name Description Predicate < FileAndType > match (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.ExtractSearchIndex.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.ExtractSearchIndex.html",
    "title": "Class ExtractSearchIndex | DocFX website",
    "keywords": "Class ExtractSearchIndex Inheritance Object ExtractSearchIndex Namespace : Microsoft.DocAsCode.Build.Engine Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax [Export(\"ExtractSearchIndex\", typeof(IPostProcessor))] public class ExtractSearchIndex : IPostProcessor Fields | Improve this Doc View Source IndexFileName Declaration public const string IndexFileName = \"index.json\" Field Value Type Description String Properties | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description String Methods | Improve this Doc View Source PrepareMetadata(ImmutableDictionary<String, Object>) Declaration public ImmutableDictionary<string, object> PrepareMetadata(ImmutableDictionary<string, object> metadata) Parameters Type Name Description ImmutableDictionary < String , Object > metadata Returns Type Description ImmutableDictionary < String , Object > | Improve this Doc View Source Process(Manifest, String) Declaration public Manifest Process(Manifest manifest, string outputFolder) Parameters Type Name Description Manifest manifest String outputFolder Returns Type Description Manifest (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.DocumentBuildContext.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.DocumentBuildContext.html",
    "title": "Class DocumentBuildContext | DocFX website",
    "keywords": "Class DocumentBuildContext Inheritance Object DocumentBuildContext Namespace : Microsoft.DocAsCode.Build.Engine Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public sealed class DocumentBuildContext : IDocumentBuildContext Constructors | Improve this Doc View Source DocumentBuildContext(DocumentBuildParameters) Declaration public DocumentBuildContext(DocumentBuildParameters parameters) Parameters Type Name Description DocumentBuildParameters parameters | Improve this Doc View Source DocumentBuildContext(String) Declaration public DocumentBuildContext(string buildOutputFolder) Parameters Type Name Description String buildOutputFolder | Improve this Doc View Source DocumentBuildContext(String, IEnumerable<FileAndType>, ImmutableArray<String>, ImmutableArray<String>, Int32, String) Declaration public DocumentBuildContext(string buildOutputFolder, IEnumerable<FileAndType> allSourceFiles, ImmutableArray<string> externalReferencePackages, ImmutableArray<string> xrefMaps, int maxParallelism, string baseFolder) Parameters Type Name Description String buildOutputFolder IEnumerable < FileAndType > allSourceFiles ImmutableArray < String > externalReferencePackages ImmutableArray < String > xrefMaps Int32 maxParallelism String baseFolder | Improve this Doc View Source DocumentBuildContext(String, IEnumerable<FileAndType>, ImmutableArray<String>, ImmutableArray<String>, Int32, String, String, ApplyTemplateSettings, String) Declaration public DocumentBuildContext(string buildOutputFolder, IEnumerable<FileAndType> allSourceFiles, ImmutableArray<string> externalReferencePackages, ImmutableArray<string> xrefMaps, int maxParallelism, string baseFolder, string versionName, ApplyTemplateSettings applyTemplateSetting, string rootTocPath) Parameters Type Name Description String buildOutputFolder IEnumerable < FileAndType > allSourceFiles ImmutableArray < String > externalReferencePackages ImmutableArray < String > xrefMaps Int32 maxParallelism String baseFolder String versionName ApplyTemplateSettings applyTemplateSetting String rootTocPath | Improve this Doc View Source DocumentBuildContext(String, IEnumerable<FileAndType>, ImmutableArray<String>, ImmutableArray<String>, Int32, String, String, ApplyTemplateSettings, String, String, ImmutableArray<String>) Declaration public DocumentBuildContext(string buildOutputFolder, IEnumerable<FileAndType> allSourceFiles, ImmutableArray<string> externalReferencePackages, ImmutableArray<string> xrefMaps, int maxParallelism, string baseFolder, string versionName, ApplyTemplateSettings applyTemplateSetting, string rootTocPath, string versionFolder, ImmutableArray<string> xrefServiceUrls) Parameters Type Name Description String buildOutputFolder IEnumerable < FileAndType > allSourceFiles ImmutableArray < String > externalReferencePackages ImmutableArray < String > xrefMaps Int32 maxParallelism String baseFolder String versionName ApplyTemplateSettings applyTemplateSetting String rootTocPath String versionFolder ImmutableArray < String > xrefServiceUrls | Improve this Doc View Source DocumentBuildContext(String, IEnumerable<FileAndType>, ImmutableArray<String>, ImmutableArray<String>, Int32, String, String, ApplyTemplateSettings, String, String, ImmutableArray<String>, GroupInfo, List<String>) Declaration public DocumentBuildContext(string buildOutputFolder, IEnumerable<FileAndType> allSourceFiles, ImmutableArray<string> externalReferencePackages, ImmutableArray<string> xrefMaps, int maxParallelism, string baseFolder, string versionName, ApplyTemplateSettings applyTemplateSetting, string rootTocPath, string versionFolder, ImmutableArray<string> xrefServiceUrls, GroupInfo groupInfo, List<string> xrefTags) Parameters Type Name Description String buildOutputFolder IEnumerable < FileAndType > allSourceFiles ImmutableArray < String > externalReferencePackages ImmutableArray < String > xrefMaps Int32 maxParallelism String baseFolder String versionName ApplyTemplateSettings applyTemplateSetting String rootTocPath String versionFolder ImmutableArray < String > xrefServiceUrls GroupInfo groupInfo List < String > xrefTags Properties | Improve this Doc View Source AllSourceFiles Declaration public ImmutableDictionary<string, FileAndType> AllSourceFiles { get; } Property Value Type Description ImmutableDictionary < String , FileAndType > | Improve this Doc View Source ApplyTemplateSettings Declaration public ApplyTemplateSettings ApplyTemplateSettings { get; set; } Property Value Type Description ApplyTemplateSettings | Improve this Doc View Source BuildOutputFolder Declaration public string BuildOutputFolder { get; } Property Value Type Description String | Improve this Doc View Source ExternalReferencePackages Declaration public ImmutableArray<string> ExternalReferencePackages { get; } Property Value Type Description ImmutableArray < String > | Improve this Doc View Source FileMap Declaration public ConcurrentDictionary<string, string> FileMap { get; } Property Value Type Description ConcurrentDictionary < String , String > | Improve this Doc View Source GroupInfo Declaration public GroupInfo GroupInfo { get; } Property Value Type Description GroupInfo | Improve this Doc View Source HrefGenerator Declaration public ICustomHrefGenerator HrefGenerator { get; } Property Value Type Description ICustomHrefGenerator | Improve this Doc View Source MarkdownService Declaration public IMarkdownService MarkdownService { get; set; } Property Value Type Description IMarkdownService | Improve this Doc View Source MaxHttpParallelism Declaration public int MaxHttpParallelism { get; } Property Value Type Description Int32 | Improve this Doc View Source MaxParallelism Declaration public int MaxParallelism { get; } Property Value Type Description Int32 | Improve this Doc View Source RootTocPath Declaration public string RootTocPath { get; } Property Value Type Description String | Improve this Doc View Source TocMap Declaration public ConcurrentDictionary<string, HashSet<string>> TocMap { get; } Property Value Type Description ConcurrentDictionary < String , HashSet < String >> | Improve this Doc View Source VersionFolder Declaration [Obsolete(\"use GroupInfo\")] public string VersionFolder { get; } Property Value Type Description String | Improve this Doc View Source VersionName Declaration [Obsolete(\"use GroupInfo\")] public string VersionName { get; } Property Value Type Description String | Improve this Doc View Source XRef Declaration public HashSet<string> XRef { get; } Property Value Type Description HashSet < String > | Improve this Doc View Source XRefSpecMap Declaration public ConcurrentDictionary<string, XRefSpec> XRefSpecMap { get; } Property Value Type Description ConcurrentDictionary < String , XRefSpec > | Improve this Doc View Source XRefTags Declaration public List<string> XRefTags { get; } Property Value Type Description List < String > Methods | Improve this Doc View Source GetFilePath(String) Declaration public string GetFilePath(string key) Parameters Type Name Description String key Returns Type Description String | Improve this Doc View Source GetTocFileKeySet(String) Declaration public IImmutableList<string> GetTocFileKeySet(string key) Parameters Type Name Description String key Returns Type Description IImmutableList < String > | Improve this Doc View Source GetTocInfo() Declaration public IImmutableList<TocInfo> GetTocInfo() Returns Type Description IImmutableList < TocInfo > | Improve this Doc View Source GetXrefSpec(String) Declaration public XRefSpec GetXrefSpec(string uid) Parameters Type Name Description String uid Returns Type Description XRefSpec | Improve this Doc View Source RegisterInternalXrefSpec(XRefSpec) Declaration public void RegisterInternalXrefSpec(XRefSpec xrefSpec) Parameters Type Name Description XRefSpec xrefSpec | Improve this Doc View Source RegisterInternalXrefSpecBookmark(String, String) Declaration public void RegisterInternalXrefSpecBookmark(string uid, string bookmark) Parameters Type Name Description String uid String bookmark | Improve this Doc View Source RegisterToc(String, String) Declaration public void RegisterToc(string tocFileKey, string fileKey) Parameters Type Name Description String tocFileKey String fileKey | Improve this Doc View Source RegisterTocInfo(TocInfo) Declaration public void RegisterTocInfo(TocInfo toc) Parameters Type Name Description TocInfo toc | Improve this Doc View Source ReportExternalXRefSpec(XRefSpec) Declaration public void ReportExternalXRefSpec(XRefSpec spec) Parameters Type Name Description XRefSpec spec | Improve this Doc View Source ResolveExternalXRefSpec() Declaration public void ResolveExternalXRefSpec() | Improve this Doc View Source ResolveExternalXRefSpecForNoneSpecsAsync() Declaration public Task ResolveExternalXRefSpecForNoneSpecsAsync() Returns Type Description Task | Improve this Doc View Source SetFilePath(String, String) Declaration public void SetFilePath(string key, string filePath) Parameters Type Name Description String key String filePath | Improve this Doc View Source UpdateHref(String) Declaration public string UpdateHref(string href) Parameters Type Name Description String href Returns Type Description String | Improve this Doc View Source UpdateHref(String, RelativePath) Declaration public string UpdateHref(string href, RelativePath fromFile) Parameters Type Name Description String href RelativePath fromFile Returns Type Description String (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.DfmServiceProvider.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.DfmServiceProvider.html",
    "title": "Class DfmServiceProvider | DocFX website",
    "keywords": "Class DfmServiceProvider Inheritance Object DfmServiceProvider DfmLegacyServiceProvider Namespace : Microsoft.DocAsCode.Build.Engine Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax [Export(\"dfm-latest\", typeof(IMarkdownServiceProvider))] [Export(\"dfm-2.15\", typeof(IMarkdownServiceProvider))] public class DfmServiceProvider : IMarkdownServiceProvider Properties | Improve this Doc View Source Container Declaration [Import] public ICompositionContainer Container { get; set; } Property Value Type Description ICompositionContainer | Improve this Doc View Source DfmEngineCustomizers Declaration [ImportMany] public IEnumerable<IDfmEngineCustomizer> DfmEngineCustomizers { get; set; } Property Value Type Description IEnumerable < IDfmEngineCustomizer > | Improve this Doc View Source DfmRendererPartProviders Declaration [ImportMany] public IEnumerable<IDfmCustomizedRendererPartProvider> DfmRendererPartProviders { get; set; } Property Value Type Description IEnumerable < IDfmCustomizedRendererPartProvider > | Improve this Doc View Source LegacyMode Declaration protected virtual bool LegacyMode { get; } Property Value Type Description Boolean | Improve this Doc View Source ShouldFixId Declaration protected virtual bool ShouldFixId { get; set; } Property Value Type Description Boolean | Improve this Doc View Source TokenTreeValidator Declaration [ImportMany] public IEnumerable<IMarkdownTokenTreeValidator> TokenTreeValidator { get; set; } Property Value Type Description IEnumerable < IMarkdownTokenTreeValidator > Methods | Improve this Doc View Source CreateMarkdownService(MarkdownServiceParameters) Declaration public IMarkdownService CreateMarkdownService(MarkdownServiceParameters parameters) Parameters Type Name Description MarkdownServiceParameters parameters Returns Type Description IMarkdownService (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.DfmServiceProvider.DfmService.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.DfmServiceProvider.DfmService.html",
    "title": "Class DfmServiceProvider.DfmService | DocFX website",
    "keywords": "Class DfmServiceProvider.DfmService Inheritance Object DfmServiceProvider.DfmService Implements IHasIncrementalContext IDisposable Namespace : Microsoft.DocAsCode.Build.Engine Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public sealed class DfmService : IMarkdownService, IHasIncrementalContext, IDisposable Constructors | Improve this Doc View Source DfmService(DfmServiceProvider, String, String, ICompositionContainer, ImmutableDictionary<String, String>, IReadOnlyList<String>, IReadOnlyDictionary<String, Object>) Declaration public DfmService(DfmServiceProvider provider, string baseDir, string templateDir, ICompositionContainer container, ImmutableDictionary<string, string> tokens, IReadOnlyList<string> fallbackFolders, IReadOnlyDictionary<string, object> parameters) Parameters Type Name Description DfmServiceProvider provider String baseDir String templateDir ICompositionContainer container ImmutableDictionary < String , String > tokens IReadOnlyList < String > fallbackFolders IReadOnlyDictionary < String , Object > parameters Properties | Improve this Doc View Source Builder Declaration public DfmEngineBuilder Builder { get; } Property Value Type Description DfmEngineBuilder | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description String | Improve this Doc View Source Renderer Declaration public object Renderer { get; } Property Value Type Description Object Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source GetIncrementalContextHash() Declaration public string GetIncrementalContextHash() Returns Type Description String | Improve this Doc View Source Markup(String, String) Declaration public MarkupResult Markup(string src, string path) Parameters Type Name Description String src String path Returns Type Description MarkupResult | Improve this Doc View Source Markup(String, String, Boolean) Declaration public MarkupResult Markup(string src, string path, bool enableValidation) Parameters Type Name Description String src String path Boolean enableValidation Returns Type Description MarkupResult Implements IHasIncrementalContext System.IDisposable (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.DfmLegacyServiceProvider.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.DfmLegacyServiceProvider.html",
    "title": "Class DfmLegacyServiceProvider | DocFX website",
    "keywords": "Class DfmLegacyServiceProvider Inheritance Object DfmServiceProvider DfmLegacyServiceProvider Inherited Members DfmServiceProvider.CreateMarkdownService(MarkdownServiceParameters) DfmServiceProvider.ShouldFixId DfmServiceProvider.TokenTreeValidator DfmServiceProvider.DfmRendererPartProviders DfmServiceProvider.DfmEngineCustomizers DfmServiceProvider.Container Namespace : Microsoft.DocAsCode.Build.Engine Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax [Export(\"dfm\", typeof(IMarkdownServiceProvider))] [Export(\"dfm-2.13\", typeof(IMarkdownServiceProvider))] public class DfmLegacyServiceProvider : DfmServiceProvider Properties | Improve this Doc View Source LegacyMode Declaration protected override bool LegacyMode { get; } Property Value Type Description Boolean Overrides DfmServiceProvider.LegacyMode (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.ApplyTemplateOptions.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.ApplyTemplateOptions.html",
    "title": "Enum ApplyTemplateOptions | DocFX website",
    "keywords": "Enum ApplyTemplateOptions Namespace : Microsoft.DocAsCode.Build.Engine Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax [Flags] public enum ApplyTemplateOptions Fields Name Description All ExportRawModel ExportViewModel None TransformDocument (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.ConceptualDocuments.html": {
    "href": "api/Microsoft.DocAsCode.Build.ConceptualDocuments.html",
    "title": "Namespace Microsoft.DocAsCode.Build.ConceptualDocuments | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.Build.ConceptualDocuments Classes BuildConceptualDocument ConceptualDocumentProcessor CountWord HtmlDocumentUtility SeparatedHtmlInfo ValidateConceptualDocumentMetadata (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.ConceptualDocuments.ConceptualDocumentProcessor.html": {
    "href": "api/Microsoft.DocAsCode.Build.ConceptualDocuments.ConceptualDocumentProcessor.html",
    "title": "Class ConceptualDocumentProcessor | DocFX website",
    "keywords": "Class ConceptualDocumentProcessor Inheritance Object DisposableDocumentProcessor ConceptualDocumentProcessor Implements IDisposable ISupportIncrementalDocumentProcessor Inherited Members DisposableDocumentProcessor.Dispose() DisposableDocumentProcessor.UpdateHref(FileModel, IDocumentBuildContext) Namespace : Microsoft.DocAsCode.Build.ConceptualDocuments Assembly : Microsoft.DocAsCode.Build.ConceptualDocuments.dll Syntax [Export(typeof(IDocumentProcessor))] public class ConceptualDocumentProcessor : DisposableDocumentProcessor, IDisposable, ISupportIncrementalDocumentProcessor Constructors | Improve this Doc View Source ConceptualDocumentProcessor() Declaration public ConceptualDocumentProcessor() Properties | Improve this Doc View Source BuildSteps Declaration [ImportMany(\"ConceptualDocumentProcessor\")] public override IEnumerable<IDocumentBuildStep> BuildSteps { get; set; } Property Value Type Description IEnumerable < IDocumentBuildStep > Overrides DisposableDocumentProcessor.BuildSteps | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description String Overrides DisposableDocumentProcessor.Name Methods | Improve this Doc View Source DeserializeModel(Stream) Declaration protected virtual object DeserializeModel(Stream stream) Parameters Type Name Description Stream stream Returns Type Description Object | Improve this Doc View Source DeserializeProperties(Stream) Declaration protected virtual IDictionary<string, object> DeserializeProperties(Stream stream) Parameters Type Name Description Stream stream Returns Type Description IDictionary < String , Object > | Improve this Doc View Source GetIncrementalContextHash() Declaration public virtual string GetIncrementalContextHash() Returns Type Description String | Improve this Doc View Source GetProcessingPriority(FileAndType) Declaration public override ProcessingPriority GetProcessingPriority(FileAndType file) Parameters Type Name Description FileAndType file Returns Type Description ProcessingPriority | Improve this Doc View Source GetSerializer() Declaration protected virtual JsonSerializer GetSerializer() Returns Type Description Newtonsoft.Json.JsonSerializer | Improve this Doc View Source Load(FileAndType, ImmutableDictionary<String, Object>) Declaration public override FileModel Load(FileAndType file, ImmutableDictionary<string, object> metadata) Parameters Type Name Description FileAndType file ImmutableDictionary < String , Object > metadata Returns Type Description FileModel | Improve this Doc View Source LoadIntermediateModel(Stream) Declaration public virtual FileModel LoadIntermediateModel(Stream stream) Parameters Type Name Description Stream stream Returns Type Description FileModel | Improve this Doc View Source Save(FileModel) Declaration public override SaveResult Save(FileModel model) Parameters Type Name Description FileModel model Returns Type Description SaveResult | Improve this Doc View Source SaveIntermediateModel(FileModel, Stream) Declaration public virtual void SaveIntermediateModel(FileModel model, Stream stream) Parameters Type Name Description FileModel model Stream stream | Improve this Doc View Source SerializeModel(Object, Stream) Declaration protected virtual void SerializeModel(object model, Stream stream) Parameters Type Name Description Object model Stream stream | Improve this Doc View Source SerializeProperties(IDictionary<String, Object>, Stream) Declaration protected virtual void SerializeProperties(IDictionary<string, object> properties, Stream stream) Parameters Type Name Description IDictionary < String , Object > properties Stream stream Implements System.IDisposable ISupportIncrementalDocumentProcessor (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.ConceptualDocuments.BuildConceptualDocument.html": {
    "href": "api/Microsoft.DocAsCode.Build.ConceptualDocuments.BuildConceptualDocument.html",
    "title": "Class BuildConceptualDocument | DocFX website",
    "keywords": "Class BuildConceptualDocument Inheritance Object BaseDocumentBuildStep BuildConceptualDocument Implements ISupportIncrementalBuildStep Inherited Members BaseDocumentBuildStep.Prebuild(ImmutableList<FileModel>, IHostService) BaseDocumentBuildStep.Postbuild(ImmutableList<FileModel>, IHostService) Namespace : Microsoft.DocAsCode.Build.ConceptualDocuments Assembly : Microsoft.DocAsCode.Build.ConceptualDocuments.dll Syntax [Export(\"ConceptualDocumentProcessor\", typeof(IDocumentBuildStep))] public class BuildConceptualDocument : BaseDocumentBuildStep, ISupportIncrementalBuildStep Properties | Improve this Doc View Source BuildOrder Declaration public override int BuildOrder { get; } Property Value Type Description Int32 Overrides BaseDocumentBuildStep.BuildOrder | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description String Overrides BaseDocumentBuildStep.Name Methods | Improve this Doc View Source Build(FileModel, IHostService) Declaration public override void Build(FileModel model, IHostService host) Parameters Type Name Description FileModel model IHostService host | Improve this Doc View Source CanIncrementalBuild(FileAndType) Declaration public bool CanIncrementalBuild(FileAndType fileAndType) Parameters Type Name Description FileAndType fileAndType Returns Type Description Boolean | Improve this Doc View Source GetDependencyTypesToRegister() Declaration public IEnumerable<DependencyType> GetDependencyTypesToRegister() Returns Type Description IEnumerable < DependencyType > | Improve this Doc View Source GetIncrementalContextHash() Declaration public string GetIncrementalContextHash() Returns Type Description String Implements ISupportIncrementalBuildStep (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Common.html": {
    "href": "api/Microsoft.DocAsCode.Build.Common.html",
    "title": "Namespace Microsoft.DocAsCode.Build.Common | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.Build.Common Classes ApplyOverwriteDocument BaseDocumentBuildStep BaseModelAttributeHandler<T> BaseModelAttributeHandler<T>.PropInfo BuildReferenceDocumentBase Base document build step for reference. CompositeModelAttributeHandler DisposableDocumentProcessor FileModelPropertySerialization HandleGenericItemsHelper HandleGenericItemsHelper.EnumerateIDictionaryItems<TKey, TValue> HandleGenericItemsHelper.EnumerateIEnumerableItems<TValue> HandleGenericItemsHelper.EnumerateIReadonlyDictionaryItems<TKey, TValue> HandleGenericItemsHelper.HandleIDictionaryItems<TKey, TValue> HandleGenericItemsHelper.HandleIListItems<T> HandleModelAttributesContext MarkdownContentHandler MarkdownReader OverwriteDocumentModel OverwriteDocumentReader ReferenceDocumentProcessorBase Base document processor for reference. ReflectionHelper UniqueIdentityReferenceHandler UrlContentHandler YamlHtmlPart Interfaces IModelAttributeHandler (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.ConceptualDocuments.SeparatedHtmlInfo.html": {
    "href": "api/Microsoft.DocAsCode.Build.ConceptualDocuments.SeparatedHtmlInfo.html",
    "title": "Class SeparatedHtmlInfo | DocFX website",
    "keywords": "Class SeparatedHtmlInfo Inheritance Object SeparatedHtmlInfo Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.ConceptualDocuments Assembly : Microsoft.DocAsCode.Build.ConceptualDocuments.dll Syntax public class SeparatedHtmlInfo Properties | Improve this Doc View Source Content Declaration public string Content { get; set; } Property Value Type Description String | Improve this Doc View Source RawTitle Declaration public string RawTitle { get; set; } Property Value Type Description String | Improve this Doc View Source Title Declaration public string Title { get; set; } Property Value Type Description String (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.ConceptualDocuments.HtmlDocumentUtility.html": {
    "href": "api/Microsoft.DocAsCode.Build.ConceptualDocuments.HtmlDocumentUtility.html",
    "title": "Class HtmlDocumentUtility | DocFX website",
    "keywords": "Class HtmlDocumentUtility Inheritance Object HtmlDocumentUtility Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.ConceptualDocuments Assembly : Microsoft.DocAsCode.Build.ConceptualDocuments.dll Syntax public static class HtmlDocumentUtility Methods | Improve this Doc View Source SeparateHtml(String) Declaration public static SeparatedHtmlInfo SeparateHtml(string contentHtml) Parameters Type Name Description String contentHtml Returns Type Description SeparatedHtmlInfo (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.ConceptualDocuments.CountWord.html": {
    "href": "api/Microsoft.DocAsCode.Build.ConceptualDocuments.CountWord.html",
    "title": "Class CountWord | DocFX website",
    "keywords": "Class CountWord Inheritance Object BaseDocumentBuildStep CountWord Implements ISupportIncrementalBuildStep Inherited Members BaseDocumentBuildStep.Prebuild(ImmutableList<FileModel>, IHostService) BaseDocumentBuildStep.Build(FileModel, IHostService) Namespace : Microsoft.DocAsCode.Build.ConceptualDocuments Assembly : Microsoft.DocAsCode.Build.ConceptualDocuments.dll Syntax [Export(\"ConceptualDocumentProcessor\", typeof(IDocumentBuildStep))] public class CountWord : BaseDocumentBuildStep, ISupportIncrementalBuildStep Properties | Improve this Doc View Source BuildOrder Declaration public override int BuildOrder { get; } Property Value Type Description Int32 Overrides BaseDocumentBuildStep.BuildOrder | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description String Overrides BaseDocumentBuildStep.Name Methods | Improve this Doc View Source CanIncrementalBuild(FileAndType) Declaration public bool CanIncrementalBuild(FileAndType fileAndType) Parameters Type Name Description FileAndType fileAndType Returns Type Description Boolean | Improve this Doc View Source GetDependencyTypesToRegister() Declaration public IEnumerable<DependencyType> GetDependencyTypesToRegister() Returns Type Description IEnumerable < DependencyType > | Improve this Doc View Source GetIncrementalContextHash() Declaration public string GetIncrementalContextHash() Returns Type Description String | Improve this Doc View Source Postbuild(ImmutableList<FileModel>, IHostService) Declaration public override void Postbuild(ImmutableList<FileModel> models, IHostService host) Parameters Type Name Description ImmutableList < FileModel > models IHostService host Implements ISupportIncrementalBuildStep (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Common.OverwriteDocumentReader.html": {
    "href": "api/Microsoft.DocAsCode.Build.Common.OverwriteDocumentReader.html",
    "title": "Class OverwriteDocumentReader | DocFX website",
    "keywords": "Class OverwriteDocumentReader Inheritance Object OverwriteDocumentReader Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Common Assembly : Microsoft.DocAsCode.Build.Common.dll Syntax public class OverwriteDocumentReader Methods | Improve this Doc View Source Read(FileAndType) Declaration public static FileModel Read(FileAndType file) Parameters Type Name Description FileAndType file Returns Type Description FileModel | Improve this Doc View Source Transform<T>(FileModel, String, Func<T, T>) TODO: use Attributes to automatically markup and handle uid inside the model instead of pass in the itemBuilder action Declaration public static IEnumerable<T> Transform<T>(FileModel model, string uid, Func<T, T> itemBuilder) where T : class, IOverwriteDocumentViewModel Parameters Type Name Description FileModel model String uid Func <T, T> itemBuilder Returns Type Description IEnumerable <T> Type Parameters Name Description T (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Common.OverwriteDocumentModel.html": {
    "href": "api/Microsoft.DocAsCode.Build.Common.OverwriteDocumentModel.html",
    "title": "Class OverwriteDocumentModel | DocFX website",
    "keywords": "Class OverwriteDocumentModel Inheritance Object OverwriteDocumentModel Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Common Assembly : Microsoft.DocAsCode.Build.Common.dll Syntax [Serializable] public class OverwriteDocumentModel Properties | Improve this Doc View Source Conceptual The markdown content from the overwrite document Declaration [YamlMember(Alias = \"conceptual\")] [JsonProperty(\"conceptual\")] public string Conceptual { get; set; } Property Value Type Description String | Improve this Doc View Source Dependency Dependencies extracted from the markdown content Declaration [YamlIgnore] [JsonIgnore] public ImmutableArray<string> Dependency { get; set; } Property Value Type Description ImmutableArray < String > | Improve this Doc View Source Documentation The details for current overwrite document, containing the start/end line numbers, file path, and git info. Declaration [YamlMember(Alias = \"documentation\")] [JsonProperty(\"documentation\")] public SourceDetail Documentation { get; set; } Property Value Type Description SourceDetail | Improve this Doc View Source FileLinkSources Link sources information for file Declaration [YamlIgnore] [JsonIgnore] public Dictionary<string, List<LinkSourceInfo>> FileLinkSources { get; set; } Property Value Type Description Dictionary < String , List < LinkSourceInfo >> | Improve this Doc View Source LinkToFiles Links to other files Declaration [YamlIgnore] [JsonIgnore] public HashSet<string> LinkToFiles { get; set; } Property Value Type Description HashSet < String > | Improve this Doc View Source LinkToUids Links to other Uids Declaration [YamlIgnore] [JsonIgnore] public HashSet<string> LinkToUids { get; set; } Property Value Type Description HashSet < String > | Improve this Doc View Source Metadata Declaration [JsonExtensionData] public Dictionary<string, object> Metadata { get; set; } Property Value Type Description Dictionary < String , Object > | Improve this Doc View Source Uid The uid for this overwrite document, as defined in YAML header Declaration [YamlMember(Alias = \"uid\")] [JsonProperty(\"uid\")] public string Uid { get; set; } Property Value Type Description String | Improve this Doc View Source UidLinkSources Link sources information for Uid Declaration [YamlIgnore] [JsonIgnore] public Dictionary<string, List<LinkSourceInfo>> UidLinkSources { get; set; } Property Value Type Description Dictionary < String , List < LinkSourceInfo >> Methods | Improve this Doc View Source ConvertTo<T>() Declaration public T ConvertTo<T>() where T : class Returns Type Description T Type Parameters Name Description T (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Common.MarkdownReader.html": {
    "href": "api/Microsoft.DocAsCode.Build.Common.MarkdownReader.html",
    "title": "Class MarkdownReader | DocFX website",
    "keywords": "Class MarkdownReader Inheritance Object MarkdownReader Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Common Assembly : Microsoft.DocAsCode.Build.Common.dll Syntax public class MarkdownReader Methods | Improve this Doc View Source ReadMarkdownAsConceptual(String) Declaration public static Dictionary<string, object> ReadMarkdownAsConceptual(string file) Parameters Type Name Description String file Returns Type Description Dictionary < String , Object > | Improve this Doc View Source ReadMarkdownAsOverwrite(IHostService, FileAndType) Declaration public static IEnumerable<OverwriteDocumentModel> ReadMarkdownAsOverwrite(IHostService host, FileAndType ft) Parameters Type Name Description IHostService host FileAndType ft Returns Type Description IEnumerable < OverwriteDocumentModel > (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Common.MarkdownContentHandler.html": {
    "href": "api/Microsoft.DocAsCode.Build.Common.MarkdownContentHandler.html",
    "title": "Class MarkdownContentHandler | DocFX website",
    "keywords": "Class MarkdownContentHandler Inheritance Object MarkdownContentHandler Implements IModelAttributeHandler Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Common Assembly : Microsoft.DocAsCode.Build.Common.dll Syntax public class MarkdownContentHandler : IModelAttributeHandler Methods | Improve this Doc View Source Handle(Object, HandleModelAttributesContext) Declaration public object Handle(object obj, HandleModelAttributesContext context) Parameters Type Name Description Object obj HandleModelAttributesContext context Returns Type Description Object Implements IModelAttributeHandler (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Common.IModelAttributeHandler.html": {
    "href": "api/Microsoft.DocAsCode.Build.Common.IModelAttributeHandler.html",
    "title": "Interface IModelAttributeHandler | DocFX website",
    "keywords": "Interface IModelAttributeHandler Namespace : Microsoft.DocAsCode.Build.Common Assembly : Microsoft.DocAsCode.Build.Common.dll Syntax public interface IModelAttributeHandler Methods | Improve this Doc View Source Handle(Object, HandleModelAttributesContext) Declaration object Handle(object obj, HandleModelAttributesContext context) Parameters Type Name Description Object obj HandleModelAttributesContext context Returns Type Description Object (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Common.HandleModelAttributesContext.html": {
    "href": "api/Microsoft.DocAsCode.Build.Common.HandleModelAttributesContext.html",
    "title": "Class HandleModelAttributesContext | DocFX website",
    "keywords": "Class HandleModelAttributesContext Inheritance Object HandleModelAttributesContext Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Common Assembly : Microsoft.DocAsCode.Build.Common.dll Syntax public class HandleModelAttributesContext Properties | Improve this Doc View Source ContainsPlaceholder Declaration public bool ContainsPlaceholder { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Dependency Declaration public HashSet<string> Dependency { get; set; } Property Value Type Description HashSet < String > | Improve this Doc View Source EnableContentPlaceholder Declaration public bool EnableContentPlaceholder { get; set; } Property Value Type Description Boolean | Improve this Doc View Source FileAndType Declaration public FileAndType FileAndType { get; set; } Property Value Type Description FileAndType | Improve this Doc View Source FileLinkSources Declaration public Dictionary<string, List<LinkSourceInfo>> FileLinkSources { get; set; } Property Value Type Description Dictionary < String , List < LinkSourceInfo >> | Improve this Doc View Source Host Declaration public IHostService Host { get; set; } Property Value Type Description IHostService | Improve this Doc View Source LinkToFiles Declaration public HashSet<string> LinkToFiles { get; set; } Property Value Type Description HashSet < String > | Improve this Doc View Source LinkToUids Declaration public HashSet<string> LinkToUids { get; set; } Property Value Type Description HashSet < String > | Improve this Doc View Source PlaceholderContent Declaration public string PlaceholderContent { get; set; } Property Value Type Description String | Improve this Doc View Source SkipMarkup Declaration public bool SkipMarkup { get; set; } Property Value Type Description Boolean | Improve this Doc View Source UidLinkSources Declaration public Dictionary<string, List<LinkSourceInfo>> UidLinkSources { get; set; } Property Value Type Description Dictionary < String , List < LinkSourceInfo >> | Improve this Doc View Source Uids Declaration public List<UidDefinition> Uids { get; set; } Property Value Type Description List < UidDefinition > (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Common.HandleGenericItemsHelper.html": {
    "href": "api/Microsoft.DocAsCode.Build.Common.HandleGenericItemsHelper.html",
    "title": "Class HandleGenericItemsHelper | DocFX website",
    "keywords": "Class HandleGenericItemsHelper Inheritance Object HandleGenericItemsHelper Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Common Assembly : Microsoft.DocAsCode.Build.Common.dll Syntax public class HandleGenericItemsHelper Methods | Improve this Doc View Source EnumerateIDictionary(Object, Func<Object, Object>) Declaration public static bool EnumerateIDictionary(object currentObj, Func<object, object> handler) Parameters Type Name Description Object currentObj Func < Object , Object > handler Returns Type Description Boolean | Improve this Doc View Source EnumerateIEnumerable(Object, Func<Object, Object>) Declaration public static bool EnumerateIEnumerable(object currentObj, Func<object, object> handler) Parameters Type Name Description Object currentObj Func < Object , Object > handler Returns Type Description Boolean | Improve this Doc View Source EnumerateIReadonlyDictionary(Object, Func<Object, Object>) Declaration public static bool EnumerateIReadonlyDictionary(object currentObj, Func<object, object> handler) Parameters Type Name Description Object currentObj Func < Object , Object > handler Returns Type Description Boolean | Improve this Doc View Source HandleIDictionary(Object, Func<Object, Object>) Declaration public static bool HandleIDictionary(object currentObj, Func<object, object> handler) Parameters Type Name Description Object currentObj Func < Object , Object > handler Returns Type Description Boolean | Improve this Doc View Source HandleIList(Object, Func<Object, Object>) Declaration public static bool HandleIList(object currentObj, Func<object, object> handler) Parameters Type Name Description Object currentObj Func < Object , Object > handler Returns Type Description Boolean (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Common.HandleGenericItemsHelper.HandleIListItems-1.html": {
    "href": "api/Microsoft.DocAsCode.Build.Common.HandleGenericItemsHelper.HandleIListItems-1.html",
    "title": "Class HandleGenericItemsHelper.HandleIListItems<T> | DocFX website",
    "keywords": "Class HandleGenericItemsHelper.HandleIListItems<T> Inheritance Object HandleGenericItemsHelper.HandleIListItems<T> Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Common Assembly : Microsoft.DocAsCode.Build.Common.dll Syntax public sealed class HandleIListItems<T> : HandleGenericItemsHelper.IHandleItems Type Parameters Name Description T Constructors | Improve this Doc View Source HandleIListItems(IList<T>) Declaration public HandleIListItems(IList<T> list) Parameters Type Name Description IList <T> list Methods | Improve this Doc View Source Handle(Func<Object, Object>) Declaration public void Handle(Func<object, object> handler) Parameters Type Name Description Func < Object , Object > handler (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Common.BaseDocumentBuildStep.html": {
    "href": "api/Microsoft.DocAsCode.Build.Common.BaseDocumentBuildStep.html",
    "title": "Class BaseDocumentBuildStep | DocFX website",
    "keywords": "Class BaseDocumentBuildStep Inheritance Object BaseDocumentBuildStep ApplyOverwriteDocument BuildReferenceDocumentBase BuildConceptualDocument CountWord ValidateConceptualDocumentMetadata ApplyPlatformVersion FillReferenceInformation MergeManagedReferenceDocument ValidateManagedReferenceDocumentMetadata ValidateResourceMetadata ValidateRestApiDocumentMetadata ApplyOverwriteDocument ApplyOverwriteFragments ApplyTags BuildTocDocumentStepBase FillReferenceInformation Namespace : Microsoft.DocAsCode.Build.Common Assembly : Microsoft.DocAsCode.Build.Common.dll Syntax public abstract class BaseDocumentBuildStep : IDocumentBuildStep Properties | Improve this Doc View Source BuildOrder Declaration public abstract int BuildOrder { get; } Property Value Type Description Int32 | Improve this Doc View Source Name Declaration public abstract string Name { get; } Property Value Type Description String Methods | Improve this Doc View Source Build(FileModel, IHostService) Declaration public virtual void Build(FileModel model, IHostService host) Parameters Type Name Description FileModel model IHostService host | Improve this Doc View Source Postbuild(ImmutableList<FileModel>, IHostService) Declaration public virtual void Postbuild(ImmutableList<FileModel> models, IHostService host) Parameters Type Name Description ImmutableList < FileModel > models IHostService host | Improve this Doc View Source Prebuild(ImmutableList<FileModel>, IHostService) Declaration public virtual IEnumerable<FileModel> Prebuild(ImmutableList<FileModel> models, IHostService host) Parameters Type Name Description ImmutableList < FileModel > models IHostService host Returns Type Description IEnumerable < FileModel > (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Common.ApplyOverwriteDocument.html": {
    "href": "api/Microsoft.DocAsCode.Build.Common.ApplyOverwriteDocument.html",
    "title": "Class ApplyOverwriteDocument | DocFX website",
    "keywords": "Class ApplyOverwriteDocument Inheritance Object BaseDocumentBuildStep ApplyOverwriteDocument ApplyOverwriteDocumentForMref ApplyOverwriteDocumentForRestApi ApplyOverwriteDocumentForUref Inherited Members BaseDocumentBuildStep.Name BaseDocumentBuildStep.BuildOrder BaseDocumentBuildStep.Prebuild(ImmutableList<FileModel>, IHostService) BaseDocumentBuildStep.Build(FileModel, IHostService) Namespace : Microsoft.DocAsCode.Build.Common Assembly : Microsoft.DocAsCode.Build.Common.dll Syntax public abstract class ApplyOverwriteDocument : BaseDocumentBuildStep Constructors | Improve this Doc View Source ApplyOverwriteDocument() Declaration protected ApplyOverwriteDocument() Methods | Improve this Doc View Source ApplyOverwrite(IHostService, List<FileModel>, String, List<FileModel>) Declaration protected abstract void ApplyOverwrite(IHostService host, List<FileModel> overwrites, string uid, List<FileModel> articles) Parameters Type Name Description IHostService host List < FileModel > overwrites String uid List < FileModel > articles | Improve this Doc View Source ApplyOverwrite<T>(IHostService, List<FileModel>, String, List<FileModel>, Func<FileModel, String, IHostService, IEnumerable<T>>, Func<FileModel, String, IHostService, IEnumerable<T>>) Declaration protected void ApplyOverwrite<T>(IHostService host, List<FileModel> overwrites, string uid, List<FileModel> articles, Func<FileModel, string, IHostService, IEnumerable<T>> getItemsFromOverwriteDocument, Func<FileModel, string, IHostService, IEnumerable<T>> getItemsToOverwrite) where T : class, IOverwriteDocumentViewModel Parameters Type Name Description IHostService host List < FileModel > overwrites String uid List < FileModel > articles Func < FileModel , String , IHostService , IEnumerable <T>> getItemsFromOverwriteDocument Func < FileModel , String , IHostService , IEnumerable <T>> getItemsToOverwrite Type Parameters Name Description T | Improve this Doc View Source ApplyOverwrites(ImmutableList<FileModel>, IHostService) Declaration protected virtual void ApplyOverwrites(ImmutableList<FileModel> models, IHostService host) Parameters Type Name Description ImmutableList < FileModel > models IHostService host | Improve this Doc View Source GetMerger() Declaration protected virtual IMerger GetMerger() Returns Type Description IMerger | Improve this Doc View Source Postbuild(ImmutableList<FileModel>, IHostService) Declaration public override void Postbuild(ImmutableList<FileModel> models, IHostService host) Parameters Type Name Description ImmutableList < FileModel > models IHostService host Overrides BaseDocumentBuildStep.Postbuild(ImmutableList<FileModel>, IHostService) | Improve this Doc View Source Transform<T>(FileModel, String, IHostService) Declaration protected IEnumerable<T> Transform<T>(FileModel model, string uid, IHostService host) where T : class, IOverwriteDocumentViewModel Parameters Type Name Description FileModel model String uid IHostService host Returns Type Description IEnumerable <T> Type Parameters Name Description T (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureMigrationVideoBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureMigrationVideoBlockRule.html",
    "title": "Class AzureMigrationVideoBlockRule | DocFX website",
    "keywords": "Class AzureMigrationVideoBlockRule Inheritance Object AzureMigrationVideoBlockRule Namespace : Microsoft.DocAsCode.AzureMarkdownRewriters Assembly : Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureMigrationVideoBlockRule : IMarkdownRule Properties | Improve this Doc View Source AzureMigrationVideoRegex Declaration public virtual Regex AzureMigrationVideoRegex { get; } Property Value Type Description Regex | Improve this Doc View Source Name Declaration public virtual string Name { get; } Property Value Type Description String Methods | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public IMarkdownToken TryMatch(IMarkdownParser engine, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser engine IMarkdownParsingContext context Returns Type Description IMarkdownToken (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureMigrationMarked.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureMigrationMarked.html",
    "title": "Class AzureMigrationMarked | DocFX website",
    "keywords": "Class AzureMigrationMarked Inheritance Object AzureMigrationMarked Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.AzureMarkdownRewriters Assembly : Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureMigrationMarked Methods | Improve this Doc View Source Markup(String, String, IReadOnlyDictionary<String, AzureFileInfo>, IReadOnlyDictionary<String, AzureFileInfo>, IReadOnlyDictionary<String, AzureFileInfo>, IReadOnlyDictionary<String, AzureFileInfo>, IReadOnlyDictionary<String, AzureVideoInfo>) Declaration public static string Markup(string src, string path = null, IReadOnlyDictionary<string, AzureFileInfo> azureMarkdownFileInfoMapping = null, IReadOnlyDictionary<string, AzureFileInfo> azureResourceFileInfoMapping = null, IReadOnlyDictionary<string, AzureFileInfo> azureIncludeMarkdownFileInfoMapping = null, IReadOnlyDictionary<string, AzureFileInfo> azureIncludeResourceFileInfoMapping = null, IReadOnlyDictionary<string, AzureVideoInfo> azureVideoInfoMapping = null) Parameters Type Name Description String src String path IReadOnlyDictionary < String , AzureFileInfo > azureMarkdownFileInfoMapping IReadOnlyDictionary < String , AzureFileInfo > azureResourceFileInfoMapping IReadOnlyDictionary < String , AzureFileInfo > azureIncludeMarkdownFileInfoMapping IReadOnlyDictionary < String , AzureFileInfo > azureIncludeResourceFileInfoMapping IReadOnlyDictionary < String , AzureVideoInfo > azureVideoInfoMapping Returns Type Description String (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureMarked.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureMarked.html",
    "title": "Class AzureMarked | DocFX website",
    "keywords": "Class AzureMarked Inheritance Object AzureMarked Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.AzureMarkdownRewriters Assembly : Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureMarked Methods | Improve this Doc View Source Markup(String, String, IReadOnlyDictionary<String, AzureFileInfo>, IReadOnlyDictionary<String, AzureVideoInfo>, IReadOnlyDictionary<String, AzureFileInfo>) Declaration public static string Markup(string src, string path = null, IReadOnlyDictionary<string, AzureFileInfo> azureMarkdownFileInfoMapping = null, IReadOnlyDictionary<string, AzureVideoInfo> azureVideoInfoMapping = null, IReadOnlyDictionary<string, AzureFileInfo> azureResourceFileInfoMapping = null) Parameters Type Name Description String src String path IReadOnlyDictionary < String , AzureFileInfo > azureMarkdownFileInfoMapping IReadOnlyDictionary < String , AzureVideoInfo > azureVideoInfoMapping IReadOnlyDictionary < String , AzureFileInfo > azureResourceFileInfoMapping Returns Type Description String (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureIncludeInlineToken.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureIncludeInlineToken.html",
    "title": "Class AzureIncludeInlineToken | DocFX website",
    "keywords": "Class AzureIncludeInlineToken Inheritance Object AzureIncludeBasicToken AzureIncludeInlineToken Implements IMarkdownRewritable < AzureIncludeInlineToken > Inherited Members AzureIncludeBasicToken.Rule AzureIncludeBasicToken.Context AzureIncludeBasicToken.Src AzureIncludeBasicToken.Name AzureIncludeBasicToken.Title AzureIncludeBasicToken.Raw AzureIncludeBasicToken.SourceInfo AzureIncludeBasicToken.Tokens Namespace : Microsoft.DocAsCode.AzureMarkdownRewriters Assembly : Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureIncludeInlineToken : AzureIncludeBasicToken, IMarkdownRewritable<AzureIncludeInlineToken> Constructors | Improve this Doc View Source AzureIncludeInlineToken(IMarkdownRule, IMarkdownContext, String, String, String, ImmutableArray<IMarkdownToken>, String, SourceInfo) Declaration public AzureIncludeInlineToken(IMarkdownRule rule, IMarkdownContext context, string src, string name, string title, ImmutableArray<IMarkdownToken> tokens, string raw, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context String src String name String title ImmutableArray < IMarkdownToken > tokens String raw SourceInfo sourceInfo Methods | Improve this Doc View Source Rewrite(IMarkdownRewriteEngine) Declaration public AzureIncludeInlineToken Rewrite(IMarkdownRewriteEngine rewriteEngine) Parameters Type Name Description IMarkdownRewriteEngine rewriteEngine Returns Type Description AzureIncludeInlineToken Implements IMarkdownRewritable<> (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureIncludeBasicToken.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureIncludeBasicToken.html",
    "title": "Class AzureIncludeBasicToken | DocFX website",
    "keywords": "Class AzureIncludeBasicToken Inheritance Object AzureIncludeBasicToken AzureIncludeBlockToken AzureIncludeInlineToken Namespace : Microsoft.DocAsCode.AzureMarkdownRewriters Assembly : Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public abstract class AzureIncludeBasicToken : IMarkdownToken Constructors | Improve this Doc View Source AzureIncludeBasicToken(IMarkdownRule, IMarkdownContext, String, String, String, ImmutableArray<IMarkdownToken>, String, SourceInfo) Declaration protected AzureIncludeBasicToken(IMarkdownRule rule, IMarkdownContext context, string src, string name, string title, ImmutableArray<IMarkdownToken> tokens, string raw, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context String src String name String title ImmutableArray < IMarkdownToken > tokens String raw SourceInfo sourceInfo Properties | Improve this Doc View Source Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description String | Improve this Doc View Source Raw Declaration public string Raw { get; } Property Value Type Description String | Improve this Doc View Source Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule | Improve this Doc View Source SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo | Improve this Doc View Source Src Declaration public string Src { get; } Property Value Type Description String | Improve this Doc View Source Title Declaration public string Title { get; } Property Value Type Description String | Improve this Doc View Source Tokens Declaration public ImmutableArray<IMarkdownToken> Tokens { get; } Property Value Type Description ImmutableArray < IMarkdownToken > (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureHtmlMetadataBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureHtmlMetadataBlockRule.html",
    "title": "Class AzureHtmlMetadataBlockRule | DocFX website",
    "keywords": "Class AzureHtmlMetadataBlockRule Inheritance Object AzureHtmlMetadataBlockRule Namespace : Microsoft.DocAsCode.AzureMarkdownRewriters Assembly : Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureHtmlMetadataBlockRule : IMarkdownRule Properties | Improve this Doc View Source AzureHtmlMetadataRegex Declaration public virtual Regex AzureHtmlMetadataRegex { get; } Property Value Type Description Regex | Improve this Doc View Source Name Declaration public virtual string Name { get; } Property Value Type Description String Methods | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public virtual IMarkdownToken TryMatch(IMarkdownParser engine, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser engine IMarkdownParsingContext context Returns Type Description IMarkdownToken (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureBlockquoteBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureBlockquoteBlockRule.html",
    "title": "Class AzureBlockquoteBlockRule | DocFX website",
    "keywords": "Class AzureBlockquoteBlockRule Inheritance Object AzureBlockquoteBlockRule Namespace : Microsoft.DocAsCode.AzureMarkdownRewriters Assembly : Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureBlockquoteBlockRule : MarkdownBlockquoteBlockRule Fields | Improve this Doc View Source _azureLeadingBlankRegex Declaration public static readonly Regex _azureLeadingBlankRegex Field Value Type Description Regex Properties | Improve this Doc View Source LeadingBlockquote Declaration public override Regex LeadingBlockquote { get; } Property Value Type Description Regex | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description String Methods | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public override IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.IFilterVisitor.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.IFilterVisitor.html",
    "title": "Interface IFilterVisitor | DocFX website",
    "keywords": "Interface IFilterVisitor Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.Roslyn.dll Syntax public interface IFilterVisitor Methods | Improve this Doc View Source CanVisitApi(ISymbol, Boolean, IFilterVisitor) Declaration bool CanVisitApi(ISymbol symbol, bool wantProtectedMember = true, IFilterVisitor outer = null) Parameters Type Name Description ISymbol symbol Boolean wantProtectedMember IFilterVisitor outer Returns Type Description Boolean | Improve this Doc View Source CanVisitAttribute(ISymbol, Boolean, IFilterVisitor) Declaration bool CanVisitAttribute(ISymbol symbol, bool wantProtectedMember = true, IFilterVisitor outer = null) Parameters Type Name Description ISymbol symbol Boolean wantProtectedMember IFilterVisitor outer Returns Type Description Boolean Extension Methods FilterVisitorExtensions.WithConfig(IFilterVisitor, String) FilterVisitorExtensions.WithConfig(IFilterVisitor, ConfigFilterRule) FilterVisitorExtensions.WithCache(IFilterVisitor) (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.IExtractor.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.IExtractor.html",
    "title": "Interface IExtractor | DocFX website",
    "keywords": "Interface IExtractor Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.Common.dll Syntax public interface IExtractor Methods | Improve this Doc View Source Extract(IInputParameters) Declaration MetadataItem Extract(IInputParameters key) Parameters Type Name Description IInputParameters key Returns Type Description MetadataItem (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.IBuildController.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.IBuildController.html",
    "title": "Interface IBuildController | DocFX website",
    "keywords": "Interface IBuildController Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.Common.dll Syntax public interface IBuildController Methods | Improve this Doc View Source ExtractMetadata(IInputParameters) Declaration MetadataItem ExtractMetadata(IInputParameters parameters) Parameters Type Name Description IInputParameters parameters Returns Type Description MetadataItem (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.FilterVisitorExtensions.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.FilterVisitorExtensions.html",
    "title": "Class FilterVisitorExtensions | DocFX website",
    "keywords": "Class FilterVisitorExtensions Inheritance Object FilterVisitorExtensions Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.Roslyn.dll Syntax public static class FilterVisitorExtensions Methods | Improve this Doc View Source WithCache(IFilterVisitor) Declaration public static IFilterVisitor WithCache(this IFilterVisitor fv) Parameters Type Name Description IFilterVisitor fv Returns Type Description IFilterVisitor | Improve this Doc View Source WithConfig(IFilterVisitor, ConfigFilterRule) Declaration public static IFilterVisitor WithConfig(this IFilterVisitor fv, ConfigFilterRule rule) Parameters Type Name Description IFilterVisitor fv ConfigFilterRule rule Returns Type Description IFilterVisitor | Improve this Doc View Source WithConfig(IFilterVisitor, String) Declaration public static IFilterVisitor WithConfig(this IFilterVisitor fv, string configFile) Parameters Type Name Description IFilterVisitor fv String configFile Returns Type Description IFilterVisitor (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.ExtractMetadataWorker.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.ExtractMetadataWorker.html",
    "title": "Class ExtractMetadataWorker | DocFX website",
    "keywords": "Class ExtractMetadataWorker Inheritance Object ExtractMetadataWorker Implements IDisposable Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public sealed class ExtractMetadataWorker : IDisposable Constructors | Improve this Doc View Source ExtractMetadataWorker(ExtractMetadataInputModel) Declaration public ExtractMetadataWorker(ExtractMetadataInputModel input) Parameters Type Name Description ExtractMetadataInputModel input Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source ExtractMetadataAsync() Declaration public Task ExtractMetadataAsync() Returns Type Description Task Implements System.IDisposable (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.ExtractMetadataOptions.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.ExtractMetadataOptions.html",
    "title": "Class ExtractMetadataOptions | DocFX website",
    "keywords": "Class ExtractMetadataOptions Inheritance Object ExtractMetadataOptions Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.Common.dll Syntax public class ExtractMetadataOptions Properties | Improve this Doc View Source CodeSourceBasePath Declaration public string CodeSourceBasePath { get; set; } Property Value Type Description String | Improve this Doc View Source DisableDefaultFilter Declaration public bool DisableDefaultFilter { get; set; } Property Value Type Description Boolean | Improve this Doc View Source FilterConfigFile Declaration public string FilterConfigFile { get; set; } Property Value Type Description String | Improve this Doc View Source MSBuildProperties Declaration public Dictionary<string, string> MSBuildProperties { get; set; } Property Value Type Description Dictionary < String , String > | Improve this Doc View Source PreserveRawInlineComments Declaration public bool PreserveRawInlineComments { get; set; } Property Value Type Description Boolean | Improve this Doc View Source RoslynExtensionMethods Declaration [JsonIgnore] public IReadOnlyDictionary<Compilation, IEnumerable<IMethodSymbol>> RoslynExtensionMethods { get; set; } Property Value Type Description IReadOnlyDictionary < Compilation , IEnumerable < IMethodSymbol >> | Improve this Doc View Source ShouldSkipMarkup Declaration public bool ShouldSkipMarkup { get; set; } Property Value Type Description Boolean Methods | Improve this Doc View Source HasChanged(IncrementalCheck, Boolean) Declaration public bool HasChanged(IncrementalCheck check, bool careMSBuildProperties) Parameters Type Name Description IncrementalCheck check Boolean careMSBuildProperties Returns Type Description Boolean (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.ExtractMetadataInputModel.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.ExtractMetadataInputModel.html",
    "title": "Class ExtractMetadataInputModel | DocFX website",
    "keywords": "Class ExtractMetadataInputModel Inheritance Object ExtractMetadataInputModel Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public class ExtractMetadataInputModel Properties | Improve this Doc View Source CodeSourceBasePath Declaration public string CodeSourceBasePath { get; set; } Property Value Type Description String | Improve this Doc View Source DisableDefaultFilter Declaration public bool DisableDefaultFilter { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Files Declaration public List<string> Files { get; set; } Property Value Type Description List < String > | Improve this Doc View Source FilterConfigFile Declaration public string FilterConfigFile { get; set; } Property Value Type Description String | Improve this Doc View Source ForceRebuild Declaration public bool ForceRebuild { get; set; } Property Value Type Description Boolean | Improve this Doc View Source GlobalNamespaceId Declaration public string GlobalNamespaceId { get; set; } Property Value Type Description String | Improve this Doc View Source MSBuildProperties Declaration public Dictionary<string, string> MSBuildProperties { get; set; } Property Value Type Description Dictionary < String , String > | Improve this Doc View Source OutputFolder Declaration public string OutputFolder { get; set; } Property Value Type Description String | Improve this Doc View Source PreserveRawInlineComments Declaration public bool PreserveRawInlineComments { get; set; } Property Value Type Description Boolean | Improve this Doc View Source References Declaration public List<string> References { get; set; } Property Value Type Description List < String > | Improve this Doc View Source ShouldSkipMarkup Declaration public bool ShouldSkipMarkup { get; set; } Property Value Type Description Boolean | Improve this Doc View Source UseCompatibilityFileName Declaration public bool UseCompatibilityFileName { get; set; } Property Value Type Description Boolean Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.ExtendedSymbolKindHelper.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.ExtendedSymbolKindHelper.html",
    "title": "Class ExtendedSymbolKindHelper | DocFX website",
    "keywords": "Class ExtendedSymbolKindHelper Inheritance Object ExtendedSymbolKindHelper Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.Common.dll Syntax public static class ExtendedSymbolKindHelper Methods | Improve this Doc View Source Contains(ExtendedSymbolKind, SymbolFilterData) Declaration public static bool Contains(this ExtendedSymbolKind kind, SymbolFilterData symbol) Parameters Type Name Description ExtendedSymbolKind kind SymbolFilterData symbol Returns Type Description Boolean (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.ExtendedSymbolKind.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.ExtendedSymbolKind.html",
    "title": "Enum ExtendedSymbolKind | DocFX website",
    "keywords": "Enum ExtendedSymbolKind Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.Common.dll Syntax public enum ExtendedSymbolKind Fields Name Description Assembly Class Delegate Enum Event Field Interface Member Method Namespace Property Struct Type Extension Methods ExtendedSymbolKindHelper.Contains(SymbolFilterData) (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.EnvironmentScope.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.EnvironmentScope.html",
    "title": "Class EnvironmentScope | DocFX website",
    "keywords": "Class EnvironmentScope Inheritance Object EnvironmentScope Implements IDisposable Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public class EnvironmentScope : IDisposable Constructors | Improve this Doc View Source EnvironmentScope(Dictionary<String, String>) Declaration public EnvironmentScope(Dictionary<string, string> envValues) Parameters Type Name Description Dictionary < String , String > envValues Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() Implements System.IDisposable (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.MarkdigMarkdownRewriters.MarkdigMarkdownRenderer.html": {
    "href": "api/Microsoft.DocAsCode.MarkdigMarkdownRewriters.MarkdigMarkdownRenderer.html",
    "title": "Class MarkdigMarkdownRenderer | DocFX website",
    "keywords": "Class MarkdigMarkdownRenderer Inheritance Object DfmMarkdownRenderer MarkdigMarkdownRenderer Inherited Members DfmMarkdownRenderer.Render(IMarkdownRenderer, DfmIncludeInlineToken, MarkdownInlineContext) DfmMarkdownRenderer.Render(IMarkdownRenderer, DfmIncludeBlockToken, MarkdownBlockContext) DfmMarkdownRenderer.Render(IMarkdownRenderer, DfmNoteBlockToken, MarkdownBlockContext) DfmMarkdownRenderer.Render(IMarkdownRenderer, DfmYamlHeaderBlockToken, MarkdownBlockContext) DfmMarkdownRenderer.Render(IMarkdownRenderer, DfmSectionBlockToken, MarkdownBlockContext) DfmMarkdownRenderer.Render(IMarkdownRenderer, DfmVideoBlockToken, MarkdownBlockContext) DfmMarkdownRenderer.Render(IMarkdownRenderer, DfmTabGroupBlockToken, MarkdownBlockContext) Namespace : Microsoft.DocAsCode.MarkdigMarkdownRewriters Assembly : Microsoft.DocAsCode.MarkdigMarkdownRewriters.dll Syntax public class MarkdigMarkdownRenderer : DfmMarkdownRenderer Methods | Improve this Doc View Source Render(IMarkdownRenderer, MarkdownBlockquoteBlockToken, MarkdownBlockContext) Declaration public override StringBuffer Render(IMarkdownRenderer render, MarkdownBlockquoteBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer render MarkdownBlockquoteBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, MarkdownEmInlineToken, MarkdownInlineContext) Declaration public override StringBuffer Render(IMarkdownRenderer render, MarkdownEmInlineToken token, MarkdownInlineContext context) Parameters Type Name Description IMarkdownRenderer render MarkdownEmInlineToken token MarkdownInlineContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, MarkdownHeadingBlockToken, MarkdownBlockContext) Declaration public override StringBuffer Render(IMarkdownRenderer render, MarkdownHeadingBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer render MarkdownHeadingBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, MarkdownHtmlBlockToken, MarkdownBlockContext) Declaration public override StringBuffer Render(IMarkdownRenderer render, MarkdownHtmlBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer render MarkdownHtmlBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, MarkdownLinkInlineToken, MarkdownInlineContext) Declaration public override StringBuffer Render(IMarkdownRenderer render, MarkdownLinkInlineToken token, MarkdownInlineContext context) Parameters Type Name Description IMarkdownRenderer render MarkdownLinkInlineToken token MarkdownInlineContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, MarkdownStrongInlineToken, MarkdownInlineContext) Declaration public override StringBuffer Render(IMarkdownRenderer render, MarkdownStrongInlineToken token, MarkdownInlineContext context) Parameters Type Name Description IMarkdownRenderer render MarkdownStrongInlineToken token MarkdownInlineContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, MarkdownTableBlockToken, MarkdownBlockContext) Declaration public override StringBuffer Render(IMarkdownRenderer render, MarkdownTableBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer render MarkdownTableBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, DfmXrefInlineToken, MarkdownInlineContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer render, DfmXrefInlineToken token, MarkdownInlineContext context) Parameters Type Name Description IMarkdownRenderer render DfmXrefInlineToken token MarkdownInlineContext context Returns Type Description StringBuffer (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.ListWithStringFallbackConverter.html": {
    "href": "api/Microsoft.DocAsCode.ListWithStringFallbackConverter.html",
    "title": "Class ListWithStringFallbackConverter | DocFX website",
    "keywords": "Class ListWithStringFallbackConverter Inheritance Object Newtonsoft.Json.JsonConverter ListWithStringFallbackConverter Inherited Members Newtonsoft.Json.JsonConverter.GetSchema() Newtonsoft.Json.JsonConverter.CanRead Newtonsoft.Json.JsonConverter.CanWrite Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode Assembly : docfx.dll Syntax public class ListWithStringFallbackConverter : JsonConverter Methods | Improve this Doc View Source CanConvert(Type) Declaration public override bool CanConvert(Type objectType) Parameters Type Name Description Type objectType Returns Type Description Boolean Overrides Newtonsoft.Json.JsonConverter.CanConvert(System.Type) | Improve this Doc View Source ReadJson(JsonReader, Type, Object, JsonSerializer) Declaration public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer) Parameters Type Name Description Newtonsoft.Json.JsonReader reader Type objectType Object existingValue Newtonsoft.Json.JsonSerializer serializer Returns Type Description Object Overrides Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, System.Object, Newtonsoft.Json.JsonSerializer) | Improve this Doc View Source WriteJson(JsonWriter, Object, JsonSerializer) Declaration public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer) Parameters Type Name Description Newtonsoft.Json.JsonWriter writer Object value Newtonsoft.Json.JsonSerializer serializer Overrides Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, System.Object, Newtonsoft.Json.JsonSerializer) (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.ListWithStringFallback.html": {
    "href": "api/Microsoft.DocAsCode.ListWithStringFallback.html",
    "title": "Class ListWithStringFallback | DocFX website",
    "keywords": "Class ListWithStringFallback Inheritance Object List < String > ListWithStringFallback Implements IList < String > ICollection < String > IList ICollection IReadOnlyList < String > IReadOnlyCollection < String > IEnumerable < String > IEnumerable Inherited Members System.Collections.Generic.List<System.String>.System.Collections.IList.get_Item(System.Int32) System.Collections.Generic.List<System.String>.System.Collections.IList.set_Item(System.Int32, System.Object) List<String>.Add(String) List<String>.IList.Add(Object) List<String>.AddRange(IEnumerable<String>) List<String>.AsReadOnly() List<String>.BinarySearch(Int32, Int32, String, IComparer<String>) List<String>.BinarySearch(String) List<String>.BinarySearch(String, IComparer<String>) List<String>.Clear() List<String>.Contains(String) List<String>.IList.Contains(Object) List<String>.ConvertAll<TOutput>(Converter<String, TOutput>) List<String>.CopyTo(String[]) List<String>.ICollection.CopyTo(Array, Int32) List<String>.CopyTo(Int32, String[], Int32, Int32) List<String>.CopyTo(String[], Int32) List<String>.Exists(Predicate<String>) List<String>.Find(Predicate<String>) List<String>.FindAll(Predicate<String>) List<String>.FindIndex(Predicate<String>) List<String>.FindIndex(Int32, Predicate<String>) List<String>.FindIndex(Int32, Int32, Predicate<String>) List<String>.FindLast(Predicate<String>) List<String>.FindLastIndex(Predicate<String>) List<String>.FindLastIndex(Int32, Predicate<String>) List<String>.FindLastIndex(Int32, Int32, Predicate<String>) List<String>.ForEach(Action<String>) List<String>.GetEnumerator() List<String>.IEnumerable<String>.GetEnumerator() List<String>.IEnumerable.GetEnumerator() List<String>.GetRange(Int32, Int32) List<String>.IndexOf(String) List<String>.IList.IndexOf(Object) List<String>.IndexOf(String, Int32) List<String>.IndexOf(String, Int32, Int32) List<String>.Insert(Int32, String) List<String>.IList.Insert(Int32, Object) List<String>.InsertRange(Int32, IEnumerable<String>) List<String>.LastIndexOf(String) List<String>.LastIndexOf(String, Int32) List<String>.LastIndexOf(String, Int32, Int32) List<String>.Remove(String) List<String>.IList.Remove(Object) List<String>.RemoveAll(Predicate<String>) List<String>.RemoveAt(Int32) List<String>.RemoveRange(Int32, Int32) List<String>.Reverse() List<String>.Reverse(Int32, Int32) List<String>.Sort() List<String>.Sort(IComparer<String>) List<String>.Sort(Int32, Int32, IComparer<String>) List<String>.Sort(Comparison<String>) List<String>.ToArray() List<String>.TrimExcess() List<String>.TrueForAll(Predicate<String>) List<String>.Capacity List<String>.Count List<String>.IList.IsFixedSize List<String>.ICollection<String>.IsReadOnly List<String>.IList.IsReadOnly List<String>.ICollection.IsSynchronized List<String>.ICollection.SyncRoot List<String>.Item[Int32] List<String>.IList.Item[Int32] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode Assembly : docfx.dll Syntax [JsonConverter(typeof(ListWithStringFallbackConverter))] [Serializable] public class ListWithStringFallback : List<string>, IList<string>, ICollection<string>, IList, ICollection, IReadOnlyList<string>, IReadOnlyCollection<string>, IEnumerable<string>, IEnumerable Constructors | Improve this Doc View Source ListWithStringFallback() Declaration public ListWithStringFallback() | Improve this Doc View Source ListWithStringFallback(IEnumerable<String>) Declaration public ListWithStringFallback(IEnumerable<string> list) Parameters Type Name Description IEnumerable < String > list Implements System.Collections.Generic.IList<T> System.Collections.Generic.ICollection<T> System.Collections.IList System.Collections.ICollection System.Collections.Generic.IReadOnlyList<T> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.HtmlToPdf.html": {
    "href": "api/Microsoft.DocAsCode.HtmlToPdf.html",
    "title": "Namespace Microsoft.DocAsCode.HtmlToPdf | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.HtmlToPdf Classes ConvertWrapper FileOutput FileOutputs FolderUtility Guard Represents a simple class for validating parameters and throwing exceptions. HtmlModel HtmlToPdfConverter HtmlToPdfOptions ManifestUtility PdfHelper PdfInformation PdfOptions SelfCleaningFolder TocModel UrlCache Enums ManifestItemType OutlineOption OutputType (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.HtmlToPdf.UrlCache.html": {
    "href": "api/Microsoft.DocAsCode.HtmlToPdf.UrlCache.html",
    "title": "Class UrlCache | DocFX website",
    "keywords": "Class UrlCache Inheritance Object UrlCache Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.HtmlToPdf Assembly : Microsoft.DocAsCode.HtmlToPdf.dll Syntax public class UrlCache Constructors | Improve this Doc View Source UrlCache(String, ManifestItem[]) Declaration public UrlCache(string basePath, ManifestItem[] manifestItemWithAssetIds) Parameters Type Name Description String basePath ManifestItem [] manifestItemWithAssetIds | Improve this Doc View Source UrlCache(String, IEnumerable<String>) Declaration public UrlCache(string basePath, IEnumerable<string> items) Parameters Type Name Description String basePath IEnumerable < String > items Methods | Improve this Doc View Source Contains(String) Declaration public bool Contains(string url) Parameters Type Name Description String url Returns Type Description Boolean | Improve this Doc View Source Query(String) Declaration public ManifestItem Query(string url) Parameters Type Name Description String url Returns Type Description ManifestItem (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.HtmlToPdf.Transformer.html": {
    "href": "api/Microsoft.DocAsCode.HtmlToPdf.Transformer.html",
    "title": "Namespace Microsoft.DocAsCode.HtmlToPdf.Transformer | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.HtmlToPdf.Transformer Classes AbsolutePathInTocPageFileTransformer FrameTransformer HtmlNotInTocTransformer RemoveQueryStringTransformer Interfaces ITransformer (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.HtmlToPdf.Transformer.RemoveQueryStringTransformer.html": {
    "href": "api/Microsoft.DocAsCode.HtmlToPdf.Transformer.RemoveQueryStringTransformer.html",
    "title": "Class RemoveQueryStringTransformer | DocFX website",
    "keywords": "Class RemoveQueryStringTransformer Inheritance Object RemoveQueryStringTransformer Implements ITransformer Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.HtmlToPdf.Transformer Assembly : Microsoft.DocAsCode.HtmlToPdf.dll Syntax public class RemoveQueryStringTransformer : ITransformer Methods | Improve this Doc View Source Transform(IEnumerable<String>) Declaration public void Transform(IEnumerable<string> htmlFilePaths) Parameters Type Name Description IEnumerable < String > htmlFilePaths Implements ITransformer (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.HtmlToPdf.Transformer.ITransformer.html": {
    "href": "api/Microsoft.DocAsCode.HtmlToPdf.Transformer.ITransformer.html",
    "title": "Interface ITransformer | DocFX website",
    "keywords": "Interface ITransformer Namespace : Microsoft.DocAsCode.HtmlToPdf.Transformer Assembly : Microsoft.DocAsCode.HtmlToPdf.dll Syntax public interface ITransformer Methods | Improve this Doc View Source Transform(IEnumerable<String>) Declaration void Transform(IEnumerable<string> htmlFilePaths) Parameters Type Name Description IEnumerable < String > htmlFilePaths (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.HtmlToPdf.Transformer.HtmlNotInTocTransformer.html": {
    "href": "api/Microsoft.DocAsCode.HtmlToPdf.Transformer.HtmlNotInTocTransformer.html",
    "title": "Class HtmlNotInTocTransformer | DocFX website",
    "keywords": "Class HtmlNotInTocTransformer Inheritance Object HtmlNotInTocTransformer Implements ITransformer Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.HtmlToPdf.Transformer Assembly : Microsoft.DocAsCode.HtmlToPdf.dll Syntax public class HtmlNotInTocTransformer : ITransformer Constructors | Improve this Doc View Source HtmlNotInTocTransformer(String, UrlCache, PdfOptions) Declaration public HtmlNotInTocTransformer(string basePath, UrlCache manifestUrlCache, PdfOptions pdfOptions) Parameters Type Name Description String basePath UrlCache manifestUrlCache PdfOptions pdfOptions Methods | Improve this Doc View Source Transform(IEnumerable<String>) Retrive from each html. Foreach link, try to fix it. 2.1 If the link is full path, just keep it. 2.2 If the link is root path(/a/b), just add host in prefix. 2.3 If the link is relative path(a/b.html) 2.3.1 If the link in TOC, just keep it. 2.3.2 If the link NOT in TOC and in Manifest, try to get the canonical url. 2.3.3 If the link NOT in TOC and NOT in Manifest, log warning to the invalid link. 2.4 Others, keep it as the origin. Declaration public void Transform(IEnumerable<string> htmlFilePaths) Parameters Type Name Description IEnumerable < String > htmlFilePaths The htmls' relative path in TOC. Implements ITransformer (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.HtmlToPdf.Transformer.FrameTransformer.html": {
    "href": "api/Microsoft.DocAsCode.HtmlToPdf.Transformer.FrameTransformer.html",
    "title": "Class FrameTransformer | DocFX website",
    "keywords": "Class FrameTransformer Inheritance Object FrameTransformer Implements ITransformer Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.HtmlToPdf.Transformer Assembly : Microsoft.DocAsCode.HtmlToPdf.dll Syntax public class FrameTransformer : ITransformer Constructors | Improve this Doc View Source FrameTransformer(String[]) Declaration public FrameTransformer(params string[] replaceHosts) Parameters Type Name Description String [] replaceHosts Methods | Improve this Doc View Source Transform(IEnumerable<String>) Declaration public void Transform(IEnumerable<string> htmlFilePaths) Parameters Type Name Description IEnumerable < String > htmlFilePaths Implements ITransformer (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.HtmlToPdf.Transformer.AbsolutePathInTocPageFileTransformer.html": {
    "href": "api/Microsoft.DocAsCode.HtmlToPdf.Transformer.AbsolutePathInTocPageFileTransformer.html",
    "title": "Class AbsolutePathInTocPageFileTransformer | DocFX website",
    "keywords": "Class AbsolutePathInTocPageFileTransformer Inheritance Object AbsolutePathInTocPageFileTransformer Implements ITransformer Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.HtmlToPdf.Transformer Assembly : Microsoft.DocAsCode.HtmlToPdf.dll Syntax public class AbsolutePathInTocPageFileTransformer : ITransformer Constructors | Improve this Doc View Source AbsolutePathInTocPageFileTransformer(PdfOptions) Declaration public AbsolutePathInTocPageFileTransformer(PdfOptions pdfOptions) Parameters Type Name Description PdfOptions pdfOptions Methods | Improve this Doc View Source Transform(IEnumerable<String>) Declaration public void Transform(IEnumerable<string> htmlFilePaths) Parameters Type Name Description IEnumerable < String > htmlFilePaths Implements ITransformer (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.HtmlToPdf.TocModel.html": {
    "href": "api/Microsoft.DocAsCode.HtmlToPdf.TocModel.html",
    "title": "Class TocModel | DocFX website",
    "keywords": "Class TocModel Inheritance Object TocModel Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.HtmlToPdf Assembly : Microsoft.DocAsCode.HtmlToPdf.dll Syntax public class TocModel Properties | Improve this Doc View Source Children Declaration [JsonProperty(\"children\")] public IList<TocModel> Children { get; set; } Property Value Type Description IList < TocModel > | Improve this Doc View Source ExternalLink Declaration [JsonProperty(\"external_link\")] public string ExternalLink { get; set; } Property Value Type Description String | Improve this Doc View Source HtmlFilePath Declaration [JsonProperty(\"relative_path_in_depot\")] public string HtmlFilePath { get; set; } Property Value Type Description String | Improve this Doc View Source Title Declaration [JsonProperty(\"toc_title\")] public string Title { get; set; } Property Value Type Description String (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.HtmlToPdf.SelfCleaningFolder.html": {
    "href": "api/Microsoft.DocAsCode.HtmlToPdf.SelfCleaningFolder.html",
    "title": "Class SelfCleaningFolder | DocFX website",
    "keywords": "Class SelfCleaningFolder Inheritance Object SelfCleaningFolder Implements IDisposable Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.HtmlToPdf Assembly : Microsoft.DocAsCode.HtmlToPdf.dll Syntax public class SelfCleaningFolder : IDisposable Constructors | Improve this Doc View Source SelfCleaningFolder(String) Declaration public SelfCleaningFolder(string path) Parameters Type Name Description String path Properties | Improve this Doc View Source FullPath Declaration public string FullPath { get; } Property Value Type Description String Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() Implements System.IDisposable (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.HtmlToPdf.PdfOptions.html": {
    "href": "api/Microsoft.DocAsCode.HtmlToPdf.PdfOptions.html",
    "title": "Class PdfOptions | DocFX website",
    "keywords": "Class PdfOptions Inheritance Object PdfOptions Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.HtmlToPdf Assembly : Microsoft.DocAsCode.HtmlToPdf.dll Syntax public class PdfOptions Properties | Improve this Doc View Source AdditionalPdfCommandArgs Specify additional command line arguments that should be passed to the pdf command. Declaration public string AdditionalPdfCommandArgs { get; set; } Property Value Type Description String | Improve this Doc View Source BasePath Declaration public string BasePath { get; set; } Property Value Type Description String | Improve this Doc View Source CssFilePath Declaration public string CssFilePath { get; set; } Property Value Type Description String | Improve this Doc View Source DestDirectory Declaration public string DestDirectory { get; set; } Property Value Type Description String | Improve this Doc View Source ExcludeTocs Declaration public string[] ExcludeTocs { get; set; } Property Value Type Description String [] | Improve this Doc View Source ExternalLinkFormat Declaration public string ExternalLinkFormat { get; } Property Value Type Description String | Improve this Doc View Source GenerateAppendices Declaration public bool GenerateAppendices { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Host Declaration public string Host { get; set; } Property Value Type Description String | Improve this Doc View Source KeepRawFiles Declaration public bool KeepRawFiles { get; set; } Property Value Type Description Boolean | Improve this Doc View Source LoadErrorHandling Declaration public string LoadErrorHandling { get; set; } Property Value Type Description String | Improve this Doc View Source Locale Declaration public string Locale { get; set; } Property Value Type Description String | Improve this Doc View Source NeedGeneratePdfExternalLink Declaration public bool NeedGeneratePdfExternalLink { get; set; } Property Value Type Description Boolean | Improve this Doc View Source PdfConvertParallelism Declaration public int PdfConvertParallelism { get; set; } Property Value Type Description Int32 | Improve this Doc View Source PdfDocsetName Declaration public string PdfDocsetName { get; set; } Property Value Type Description String | Improve this Doc View Source SourceDirectory Declaration public string SourceDirectory { get; set; } Property Value Type Description String (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.HtmlToPdf.PdfInformation.html": {
    "href": "api/Microsoft.DocAsCode.HtmlToPdf.PdfInformation.html",
    "title": "Class PdfInformation | DocFX website",
    "keywords": "Class PdfInformation Inheritance Object PdfInformation Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.HtmlToPdf Assembly : Microsoft.DocAsCode.HtmlToPdf.dll Syntax public class PdfInformation Properties | Improve this Doc View Source AssetId Declaration [JsonProperty(\"asset_id\")] public string AssetId { get; set; } Property Value Type Description String | Improve this Doc View Source DocsetName Declaration [JsonProperty(\"docset_name\")] public string DocsetName { get; set; } Property Value Type Description String | Improve this Doc View Source TocFiles Declaration [JsonProperty(\"toc_files\")] public ICollection<string> TocFiles { get; set; } Property Value Type Description ICollection < String > | Improve this Doc View Source Version Declaration [JsonProperty(\"version\")] public string Version { get; set; } Property Value Type Description String (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.HtmlToPdf.PdfHelper.html": {
    "href": "api/Microsoft.DocAsCode.HtmlToPdf.PdfHelper.html",
    "title": "Class PdfHelper | DocFX website",
    "keywords": "Class PdfHelper Inheritance Object PdfHelper Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.HtmlToPdf Assembly : Microsoft.DocAsCode.HtmlToPdf.dll Syntax public static class PdfHelper Methods | Improve this Doc View Source NormalizeFileLocalPath(String, String, Boolean) Declaration public static string NormalizeFileLocalPath(string basePath, string relativePath, bool toLower = true) Parameters Type Name Description String basePath String relativePath Boolean toLower Returns Type Description String | Improve this Doc View Source RemoveUrlBookmark(String) Declaration public static string RemoveUrlBookmark(this string url) Parameters Type Name Description String url Returns Type Description String | Improve this Doc View Source RemoveUrlQueryString(String) Declaration public static string RemoveUrlQueryString(this string url) Parameters Type Name Description String url Returns Type Description String | Improve this Doc View Source TrimStartPath(String) Declaration public static string TrimStartPath(this string path) Parameters Type Name Description String path Returns Type Description String (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Glob.FileGlob.html": {
    "href": "api/Microsoft.DocAsCode.Glob.FileGlob.html",
    "title": "Class FileGlob | DocFX website",
    "keywords": "Class FileGlob Inheritance Object FileGlob Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Glob Assembly : Microsoft.DocAsCode.Glob.dll Syntax public class FileGlob Methods | Improve this Doc View Source GetFiles(String, IEnumerable<String>, IEnumerable<String>, GlobMatcherOptions) Declaration public static IEnumerable<string> GetFiles(string cwd, IEnumerable<string> patterns, IEnumerable<string> excludePatterns, GlobMatcherOptions options = GlobMatcherOptions.IgnoreCase | GlobMatcherOptions.AllowNegate | GlobMatcherOptions.AllowExpand | GlobMatcherOptions.AllowEscape | GlobMatcherOptions.AllowGlobStar) Parameters Type Name Description String cwd IEnumerable < String > patterns IEnumerable < String > excludePatterns GlobMatcherOptions options Returns Type Description IEnumerable < String > (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.FileMetadataPairsItem.html": {
    "href": "api/Microsoft.DocAsCode.FileMetadataPairsItem.html",
    "title": "Class FileMetadataPairsItem | DocFX website",
    "keywords": "Class FileMetadataPairsItem Inheritance Object FileMetadataPairsItem Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode Assembly : docfx.dll Syntax [Serializable] public class FileMetadataPairsItem Constructors | Improve this Doc View Source FileMetadataPairsItem(String, Object) Declaration public FileMetadataPairsItem(string pattern, object value) Parameters Type Name Description String pattern Object value Properties | Improve this Doc View Source Glob Declaration public GlobMatcher Glob { get; } Property Value Type Description GlobMatcher | Improve this Doc View Source Value JObject, no need to transform it to object as the metadata value will not be used but only to be serialized Declaration public object Value { get; } Property Value Type Description Object (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.FileMetadataPairsConverter.html": {
    "href": "api/Microsoft.DocAsCode.FileMetadataPairsConverter.html",
    "title": "Class FileMetadataPairsConverter | DocFX website",
    "keywords": "Class FileMetadataPairsConverter Inheritance Object Newtonsoft.Json.JsonConverter FileMetadataPairsConverter Inherited Members Newtonsoft.Json.JsonConverter.GetSchema() Newtonsoft.Json.JsonConverter.CanRead Newtonsoft.Json.JsonConverter.CanWrite Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode Assembly : docfx.dll Syntax public class FileMetadataPairsConverter : JsonConverter Methods | Improve this Doc View Source CanConvert(Type) Declaration public override bool CanConvert(Type objectType) Parameters Type Name Description Type objectType Returns Type Description Boolean Overrides Newtonsoft.Json.JsonConverter.CanConvert(System.Type) | Improve this Doc View Source ReadJson(JsonReader, Type, Object, JsonSerializer) Declaration public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer) Parameters Type Name Description Newtonsoft.Json.JsonReader reader Type objectType Object existingValue Newtonsoft.Json.JsonSerializer serializer Returns Type Description Object Overrides Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, System.Object, Newtonsoft.Json.JsonSerializer) | Improve this Doc View Source WriteJson(JsonWriter, Object, JsonSerializer) Declaration public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer) Parameters Type Name Description Newtonsoft.Json.JsonWriter writer Object value Newtonsoft.Json.JsonSerializer serializer Overrides Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, System.Object, Newtonsoft.Json.JsonSerializer) (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.FileMetadataPairs.html": {
    "href": "api/Microsoft.DocAsCode.FileMetadataPairs.html",
    "title": "Class FileMetadataPairs | DocFX website",
    "keywords": "Class FileMetadataPairs Inheritance Object FileMetadataPairs Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode Assembly : docfx.dll Syntax [Serializable] [JsonConverter(typeof(FileMetadataPairsConverter))] public class FileMetadataPairs Constructors | Improve this Doc View Source FileMetadataPairs(FileMetadataPairsItem) Declaration public FileMetadataPairs(FileMetadataPairsItem item) Parameters Type Name Description FileMetadataPairsItem item | Improve this Doc View Source FileMetadataPairs(List<FileMetadataPairsItem>) Declaration public FileMetadataPairs(List<FileMetadataPairsItem> items) Parameters Type Name Description List < FileMetadataPairsItem > items Properties | Improve this Doc View Source Count Declaration public int Count { get; } Property Value Type Description Int32 | Improve this Doc View Source Item[Int32] Declaration public FileMetadataPairsItem this[int index] { get; } Parameters Type Name Description Int32 index Property Value Type Description FileMetadataPairsItem | Improve this Doc View Source Items Declaration public IReadOnlyList<FileMetadataPairsItem> Items { get; } Property Value Type Description IReadOnlyList < FileMetadataPairsItem > (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.FileMappingItem.html": {
    "href": "api/Microsoft.DocAsCode.FileMappingItem.html",
    "title": "Class FileMappingItem | DocFX website",
    "keywords": "Class FileMappingItem Data model for a file-mapping item Inheritance Object FileMappingItem Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode Assembly : docfx.dll Syntax [Serializable] public class FileMappingItem Constructors | Improve this Doc View Source FileMappingItem() Declaration public FileMappingItem() | Improve this Doc View Source FileMappingItem(String[]) Declaration public FileMappingItem(params string[] files) Parameters Type Name Description String [] files Properties | Improve this Doc View Source AllowDotMatch Allow files start with . to be matched even if . is not explicitly specified in the pattern. By default files start with . will not be matched by * unless the pattern starts with . . Declaration [JsonProperty(\"dot\")] public bool? AllowDotMatch { get; set; } Property Value Type Description Nullable < Boolean > | Improve this Doc View Source CaseSensitive Pattern match will be case sensitive. By default the pattern is case insensitive Declaration [JsonProperty(\"case\")] public bool? CaseSensitive { get; set; } Property Value Type Description Nullable < Boolean > | Improve this Doc View Source CurrentWorkingDirectory cwd defines the root folder for the source files, it has the same meaning as src As discussed, cwd may lead to confusing and misunderstanding, so in version 1.3, src is introduced and cwd is kept for backward compatibility Declaration [JsonProperty(\"cwd\")] [Obsolete] public string CurrentWorkingDirectory { get; set; } Property Value Type Description String | Improve this Doc View Source DestinationFolder The destination folder for the files if copy/transform is used Declaration [JsonProperty(\"dest\")] public string DestinationFolder { get; set; } Property Value Type Description String | Improve this Doc View Source DisableEscape Disable the usage of \\ to escape values. By default the usage is enabled. Declaration [JsonProperty(\"noEscape\")] public bool? DisableEscape { get; set; } Property Value Type Description Nullable < Boolean > | Improve this Doc View Source DisableExpand Disable {a,b}c => [&quot;ac&quot;, &quot;bc&quot;] . By default the usage is enabled. Declaration [JsonProperty(\"noExpand\")] public bool? DisableExpand { get; set; } Property Value Type Description Nullable < Boolean > | Improve this Doc View Source DisableGlobStar Disable the usage of ** to match everything including / when it is the beginning of the pattern or is after / . By default the usage is enable. Declaration [JsonProperty(\"noGlobStar\")] public bool? DisableGlobStar { get; set; } Property Value Type Description Nullable < Boolean > | Improve this Doc View Source DisableNegate Disable pattern begin with ! to mean negate By default the usage is enabled. Declaration [JsonProperty(\"noNegate\")] public bool? DisableNegate { get; set; } Property Value Type Description Nullable < Boolean > | Improve this Doc View Source Exclude The file glob pattern collection for files that should be excluded, with path relative to property src / cwd is value is set Declaration [JsonProperty(\"exclude\")] public FileItems Exclude { get; set; } Property Value Type Description FileItems | Improve this Doc View Source Files The file glob pattern collection, with path relative to property src / cwd is value is set Declaration [JsonProperty(\"files\")] public FileItems Files { get; set; } Property Value Type Description FileItems | Improve this Doc View Source GroupName Group name for the current file-mapping item. If not set, treat the current file-mapping item as in default group. Mappings with the same group name will be built together. Cross reference doesn't support cross different groups. Declaration [JsonProperty(\"group\")] public string GroupName { get; set; } Property Value Type Description String | Improve this Doc View Source Name The name of current item, the value is not used for now Declaration [JsonProperty(\"name\")] public string Name { get; set; } Property Value Type Description String | Improve this Doc View Source RootTocPath The Root TOC Path used for navbar in current group, relative to output root. If not set, will use the toc in output root in current group if exists. Declaration [JsonProperty(\"rootTocPath\")] public string RootTocPath { get; set; } Property Value Type Description String | Improve this Doc View Source SourceFolder src defines the root folder for the source files, it has the same meaning as cwd Declaration [JsonProperty(\"src\")] public string SourceFolder { get; set; } Property Value Type Description String | Improve this Doc View Source VersionName Declaration [JsonProperty(\"version\")] [Obsolete(\"use GroupName\")] public string VersionName { get; set; } Property Value Type Description String (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.FileMappingConverter.html": {
    "href": "api/Microsoft.DocAsCode.FileMappingConverter.html",
    "title": "Class FileMappingConverter | DocFX website",
    "keywords": "Class FileMappingConverter Inheritance Object Newtonsoft.Json.JsonConverter FileMappingConverter Inherited Members Newtonsoft.Json.JsonConverter.GetSchema() Newtonsoft.Json.JsonConverter.CanRead Newtonsoft.Json.JsonConverter.CanWrite Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode Assembly : docfx.dll Syntax public class FileMappingConverter : JsonConverter Methods | Improve this Doc View Source CanConvert(Type) Declaration public override bool CanConvert(Type objectType) Parameters Type Name Description Type objectType Returns Type Description Boolean Overrides Newtonsoft.Json.JsonConverter.CanConvert(System.Type) | Improve this Doc View Source ReadJson(JsonReader, Type, Object, JsonSerializer) Declaration public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer) Parameters Type Name Description Newtonsoft.Json.JsonReader reader Type objectType Object existingValue Newtonsoft.Json.JsonSerializer serializer Returns Type Description Object Overrides Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, System.Object, Newtonsoft.Json.JsonSerializer) | Improve this Doc View Source WriteJson(JsonWriter, Object, JsonSerializer) Declaration public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer) Parameters Type Name Description Newtonsoft.Json.JsonWriter writer Object value Newtonsoft.Json.JsonSerializer serializer Overrides Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, System.Object, Newtonsoft.Json.JsonSerializer) (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.FileMapping.html": {
    "href": "api/Microsoft.DocAsCode.FileMapping.html",
    "title": "Class FileMapping | DocFX website",
    "keywords": "Class FileMapping FileMapping supports 3 forms: Array form This form supports multiple file mappings, and also allows additional properties per mapping. e.g. \"key\": [ {\"files\": [\"file1\", \"file2\"], \"dest\": \"dest1\"}, {\"files\": \"file3\", \"dest\": \"dest2\"}, {\"files\": [\"file4\", \"file5\"], \"exclude\": [\"file5\"], \"src\": \"folder1\"}, {\"files\": \"Example.yml\", \"src\": \"v1.0\", \"dest\":\"v1.0/api\", \"group\": \"v1.0\"}, {\"files\": \"Example.yml\", \"src\": \"v2.0\", \"dest\":\"v2.0/api\", \"group\": \"v2.0\"} ] Compact form This form supports multiple file patterns in an array e.g. projects: [\"file1\", \"file2\"] Object form If the Array form contains only one item, it can be shortened to an object e.g. projects: [\"file1\", \"file2\"] Inheritance Object FileMapping Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode Assembly : docfx.dll Syntax [JsonConverter(typeof(FileMappingConverter))] [Serializable] public class FileMapping Constructors | Improve this Doc View Source FileMapping() Declaration public FileMapping() | Improve this Doc View Source FileMapping(FileMappingItem) Declaration public FileMapping(FileMappingItem item) Parameters Type Name Description FileMappingItem item | Improve this Doc View Source FileMapping(IEnumerable<FileMappingItem>) Declaration public FileMapping(IEnumerable<FileMappingItem> items) Parameters Type Name Description IEnumerable < FileMappingItem > items Properties | Improve this Doc View Source Expanded Declaration public bool Expanded { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Items Declaration public IReadOnlyList<FileMappingItem> Items { get; } Property Value Type Description IReadOnlyList < FileMappingItem > | Improve this Doc View Source RootTocPath The RootTocPath of the current version, specified in FileMappingItems. If different FileMappingItems in same version have different RootTocPath, the behavior is undetermined. Declaration public string RootTocPath { get; } Property Value Type Description String Methods | Improve this Doc View Source Add(FileMappingItem) Should not merge FileMappingItems even if they are using the same name, because other propertes also matters, e.g. src, exclude. Declaration public void Add(FileMappingItem item) Parameters Type Name Description FileMappingItem item (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.FileItems.html": {
    "href": "api/Microsoft.DocAsCode.FileItems.html",
    "title": "Class FileItems | DocFX website",
    "keywords": "Class FileItems Inheritance Object List < String > FileItems Implements IList < String > ICollection < String > IList ICollection IReadOnlyList < String > IReadOnlyCollection < String > IEnumerable < String > IEnumerable Inherited Members System.Collections.Generic.List<System.String>.System.Collections.IList.get_Item(System.Int32) System.Collections.Generic.List<System.String>.System.Collections.IList.set_Item(System.Int32, System.Object) List<String>.Add(String) List<String>.IList.Add(Object) List<String>.AddRange(IEnumerable<String>) List<String>.AsReadOnly() List<String>.BinarySearch(Int32, Int32, String, IComparer<String>) List<String>.BinarySearch(String) List<String>.BinarySearch(String, IComparer<String>) List<String>.Clear() List<String>.Contains(String) List<String>.IList.Contains(Object) List<String>.ConvertAll<TOutput>(Converter<String, TOutput>) List<String>.CopyTo(String[]) List<String>.ICollection.CopyTo(Array, Int32) List<String>.CopyTo(Int32, String[], Int32, Int32) List<String>.CopyTo(String[], Int32) List<String>.Exists(Predicate<String>) List<String>.Find(Predicate<String>) List<String>.FindAll(Predicate<String>) List<String>.FindIndex(Predicate<String>) List<String>.FindIndex(Int32, Predicate<String>) List<String>.FindIndex(Int32, Int32, Predicate<String>) List<String>.FindLast(Predicate<String>) List<String>.FindLastIndex(Predicate<String>) List<String>.FindLastIndex(Int32, Predicate<String>) List<String>.FindLastIndex(Int32, Int32, Predicate<String>) List<String>.ForEach(Action<String>) List<String>.GetEnumerator() List<String>.IEnumerable<String>.GetEnumerator() List<String>.IEnumerable.GetEnumerator() List<String>.GetRange(Int32, Int32) List<String>.IndexOf(String) List<String>.IList.IndexOf(Object) List<String>.IndexOf(String, Int32) List<String>.IndexOf(String, Int32, Int32) List<String>.Insert(Int32, String) List<String>.IList.Insert(Int32, Object) List<String>.InsertRange(Int32, IEnumerable<String>) List<String>.LastIndexOf(String) List<String>.LastIndexOf(String, Int32) List<String>.LastIndexOf(String, Int32, Int32) List<String>.Remove(String) List<String>.IList.Remove(Object) List<String>.RemoveAll(Predicate<String>) List<String>.RemoveAt(Int32) List<String>.RemoveRange(Int32, Int32) List<String>.Reverse() List<String>.Reverse(Int32, Int32) List<String>.Sort() List<String>.Sort(IComparer<String>) List<String>.Sort(Int32, Int32, IComparer<String>) List<String>.Sort(Comparison<String>) List<String>.ToArray() List<String>.TrimExcess() List<String>.TrueForAll(Predicate<String>) List<String>.Capacity List<String>.Count List<String>.IList.IsFixedSize List<String>.ICollection<String>.IsReadOnly List<String>.IList.IsReadOnly List<String>.ICollection.IsSynchronized List<String>.ICollection.SyncRoot List<String>.Item[Int32] List<String>.IList.Item[Int32] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode Assembly : docfx.dll Syntax [Serializable] public class FileItems : List<string>, IList<string>, ICollection<string>, IList, ICollection, IReadOnlyList<string>, IReadOnlyCollection<string>, IEnumerable<string>, IEnumerable Constructors | Improve this Doc View Source FileItems(IEnumerable<String>) Declaration public FileItems(IEnumerable<string> files) Parameters Type Name Description IEnumerable < String > files | Improve this Doc View Source FileItems(String) Declaration public FileItems(string file) Parameters Type Name Description String file Operators | Improve this Doc View Source Explicit(String to FileItems) Declaration public static explicit operator FileItems(string input) Parameters Type Name Description String input Returns Type Description FileItems Implements System.Collections.Generic.IList<T> System.Collections.Generic.ICollection<T> System.Collections.IList System.Collections.ICollection System.Collections.Generic.IReadOnlyList<T> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Exceptions.html": {
    "href": "api/Microsoft.DocAsCode.Exceptions.html",
    "title": "Namespace Microsoft.DocAsCode.Exceptions | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.Exceptions Classes DocfxInitException DocfxMetadataException ExtractMetadataException InvalidJsonPointerException InvalidOptionException InvalidOverwriteDocumentException InvalidSchemaException PluginDirectoryAlreadyExistsException PluginException SchemaFeatureNotSupportedException SchemaKeywordNotSupportedException (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Exceptions.SchemaKeywordNotSupportedException.html": {
    "href": "api/Microsoft.DocAsCode.Exceptions.SchemaKeywordNotSupportedException.html",
    "title": "Class SchemaKeywordNotSupportedException | DocFX website",
    "keywords": "Class SchemaKeywordNotSupportedException Inheritance Object SchemaKeywordNotSupportedException Namespace : Microsoft.DocAsCode.Exceptions Assembly : Microsoft.DocAsCode.Build.SchemaDriven.dll Syntax [Serializable] public class SchemaKeywordNotSupportedException : DocfxException Constructors | Improve this Doc View Source SchemaKeywordNotSupportedException(SerializationInfo, StreamingContext) Declaration protected SchemaKeywordNotSupportedException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context | Improve this Doc View Source SchemaKeywordNotSupportedException(String) Declaration public SchemaKeywordNotSupportedException(string keyword) Parameters Type Name Description String keyword | Improve this Doc View Source SchemaKeywordNotSupportedException(String, Exception) Declaration public SchemaKeywordNotSupportedException(string message, Exception innerException) Parameters Type Name Description String message Exception innerException (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Exceptions.SchemaFeatureNotSupportedException.html": {
    "href": "api/Microsoft.DocAsCode.Exceptions.SchemaFeatureNotSupportedException.html",
    "title": "Class SchemaFeatureNotSupportedException | DocFX website",
    "keywords": "Class SchemaFeatureNotSupportedException Inheritance Object SchemaFeatureNotSupportedException Namespace : Microsoft.DocAsCode.Exceptions Assembly : Microsoft.DocAsCode.Build.SchemaDriven.dll Syntax [Serializable] public class SchemaFeatureNotSupportedException : DocfxException Constructors | Improve this Doc View Source SchemaFeatureNotSupportedException() Declaration public SchemaFeatureNotSupportedException() | Improve this Doc View Source SchemaFeatureNotSupportedException(SerializationInfo, StreamingContext) Declaration protected SchemaFeatureNotSupportedException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context | Improve this Doc View Source SchemaFeatureNotSupportedException(String) Declaration public SchemaFeatureNotSupportedException(string message) Parameters Type Name Description String message | Improve this Doc View Source SchemaFeatureNotSupportedException(String, Exception) Declaration public SchemaFeatureNotSupportedException(string message, Exception innerException) Parameters Type Name Description String message Exception innerException (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Exceptions.PluginException.html": {
    "href": "api/Microsoft.DocAsCode.Exceptions.PluginException.html",
    "title": "Class PluginException | DocFX website",
    "keywords": "Class PluginException Inheritance Object PluginException PluginDirectoryAlreadyExistsException Namespace : Microsoft.DocAsCode.Exceptions Assembly : docfx.dll Syntax [Serializable] public class PluginException : DocfxException Constructors | Improve this Doc View Source PluginException() Declaration public PluginException() | Improve this Doc View Source PluginException(SerializationInfo, StreamingContext) Declaration protected PluginException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context | Improve this Doc View Source PluginException(String) Declaration public PluginException(string message) Parameters Type Name Description String message (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Exceptions.PluginDirectoryAlreadyExistsException.html": {
    "href": "api/Microsoft.DocAsCode.Exceptions.PluginDirectoryAlreadyExistsException.html",
    "title": "Class PluginDirectoryAlreadyExistsException | DocFX website",
    "keywords": "Class PluginDirectoryAlreadyExistsException Inheritance Object PluginException PluginDirectoryAlreadyExistsException Namespace : Microsoft.DocAsCode.Exceptions Assembly : docfx.dll Syntax [Serializable] public class PluginDirectoryAlreadyExistsException : PluginException Constructors | Improve this Doc View Source PluginDirectoryAlreadyExistsException(SerializationInfo, StreamingContext) Declaration protected PluginDirectoryAlreadyExistsException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context | Improve this Doc View Source PluginDirectoryAlreadyExistsException(String) Declaration public PluginDirectoryAlreadyExistsException(string directoryName) Parameters Type Name Description String directoryName (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Exceptions.InvalidSchemaException.html": {
    "href": "api/Microsoft.DocAsCode.Exceptions.InvalidSchemaException.html",
    "title": "Class InvalidSchemaException | DocFX website",
    "keywords": "Class InvalidSchemaException Inheritance Object InvalidSchemaException Namespace : Microsoft.DocAsCode.Exceptions Assembly : Microsoft.DocAsCode.Build.SchemaDriven.dll Syntax [Serializable] public class InvalidSchemaException : DocumentException Constructors | Improve this Doc View Source InvalidSchemaException() Declaration public InvalidSchemaException() | Improve this Doc View Source InvalidSchemaException(SerializationInfo, StreamingContext) Declaration protected InvalidSchemaException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context | Improve this Doc View Source InvalidSchemaException(String) Declaration public InvalidSchemaException(string message) Parameters Type Name Description String message | Improve this Doc View Source InvalidSchemaException(String, Exception) Declaration public InvalidSchemaException(string message, Exception innerException) Parameters Type Name Description String message Exception innerException (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Exceptions.InvalidOverwriteDocumentException.html": {
    "href": "api/Microsoft.DocAsCode.Exceptions.InvalidOverwriteDocumentException.html",
    "title": "Class InvalidOverwriteDocumentException | DocFX website",
    "keywords": "Class InvalidOverwriteDocumentException Inheritance Object InvalidOverwriteDocumentException Namespace : Microsoft.DocAsCode.Exceptions Assembly : Microsoft.DocAsCode.Build.SchemaDriven.dll Syntax [Serializable] public class InvalidOverwriteDocumentException : DocfxException Constructors | Improve this Doc View Source InvalidOverwriteDocumentException() Declaration public InvalidOverwriteDocumentException() | Improve this Doc View Source InvalidOverwriteDocumentException(SerializationInfo, StreamingContext) Declaration protected InvalidOverwriteDocumentException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context | Improve this Doc View Source InvalidOverwriteDocumentException(String) Declaration public InvalidOverwriteDocumentException(string message) Parameters Type Name Description String message | Improve this Doc View Source InvalidOverwriteDocumentException(String, Exception) Declaration public InvalidOverwriteDocumentException(string message, Exception innerException) Parameters Type Name Description String message Exception innerException (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Exceptions.InvalidOptionException.html": {
    "href": "api/Microsoft.DocAsCode.Exceptions.InvalidOptionException.html",
    "title": "Class InvalidOptionException | DocFX website",
    "keywords": "Class InvalidOptionException Inheritance Object Exception SystemException ArgumentException InvalidOptionException Implements _Exception ISerializable Inherited Members ArgumentException.GetObjectData(SerializationInfo, StreamingContext) ArgumentException.Message ArgumentException.ParamName Exception.GetBaseException() Exception.ToString() Exception.GetType() Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Exceptions Assembly : docfx.dll Syntax public class InvalidOptionException : ArgumentException, _Exception, ISerializable Constructors | Improve this Doc View Source InvalidOptionException() Declaration public InvalidOptionException() | Improve this Doc View Source InvalidOptionException(SerializationInfo, StreamingContext) Declaration protected InvalidOptionException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context | Improve this Doc View Source InvalidOptionException(String) Declaration public InvalidOptionException(string message) Parameters Type Name Description String message | Improve this Doc View Source InvalidOptionException(String, Exception) Declaration public InvalidOptionException(string message, Exception innerException) Parameters Type Name Description String message Exception innerException | Improve this Doc View Source InvalidOptionException(String, String) Declaration public InvalidOptionException(string message, string paramName) Parameters Type Name Description String message String paramName | Improve this Doc View Source InvalidOptionException(String, String, Exception) Declaration public InvalidOptionException(string message, string paramName, Exception innerException) Parameters Type Name Description String message String paramName Exception innerException Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.IDfmFencesBlockPathQueryOptionCreator.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.IDfmFencesBlockPathQueryOptionCreator.html",
    "title": "Interface IDfmFencesBlockPathQueryOptionCreator | DocFX website",
    "keywords": "Interface IDfmFencesBlockPathQueryOptionCreator Namespace : Microsoft.DocAsCode.Dfm Assembly : Microsoft.DocAsCode.Dfm.dll Syntax public interface IDfmFencesBlockPathQueryOptionCreator Methods | Improve this Doc View Source ParseQueryOrFragment(DfmFencesBlockPathQueryOptionParameters, Boolean) Declaration IDfmFencesBlockPathQueryOption ParseQueryOrFragment(DfmFencesBlockPathQueryOptionParameters parameters, bool noCache) Parameters Type Name Description DfmFencesBlockPathQueryOptionParameters parameters Boolean noCache Returns Type Description IDfmFencesBlockPathQueryOption (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "templates-and-plugins/templates-dashboard.html": {
    "href": "templates-and-plugins/templates-dashboard.html",
    "title": "Available templates and themes |",
    "keywords": ""
  },
  "templates-and-plugins/plugins-dashboard.html": {
    "href": "templates-and-plugins/plugins-dashboard.html",
    "title": "Available plugins and templates |",
    "keywords": ""
  },
  "tutorial/walkthrough/walkthrough_overview.html": {
    "href": "tutorial/walkthrough/walkthrough_overview.html",
    "title": "Walkthrough Overview | DocFX website",
    "keywords": "Walkthrough Overview By completing these walkthroughs, you'll create a static website, containing both Conceptual Documentation which comes from .md files and API Documentation which comes from .NET source code. You'll also be able to customize your website with your own styles and templates! List of Articles Walkthrough Part I: Generate a Simple Documentation Website Walkthrough Part II: Adding API Documentation to the Website Walkthrough Advanced: Customize Your Website (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "tutorial/walkthrough/walkthrough_generate_pdf.html": {
    "href": "tutorial/walkthrough/walkthrough_generate_pdf.html",
    "title": "Walkthrough Part III: Generate PDF Documentation | DocFX website",
    "keywords": "Walkthrough Part III: Generate PDF Documentation After completing Walkthrough Part II: Add API Documentation to the Website , we successfully create a website containing both Conceptual and API documentation. In this section, we will generate PDF files for these articles. After completing walkthrough part II, our D:\\docfx_walkthrough\\docfx_project folder is in the following structure(Download the artifacts HERE ): |- articles |- images |- src |- src2 |- index.md |- toc.yml |- docfx.json Step0. Install prerequisite We leverage wkhtmltopdf to generate PDF. Download wkhtmltopdf to some folder, e.g. E:\\Program Files\\wkhtmltopdf\\ , and save the executable folder path to %PATH% by: set PATH=%PATH%;E:\\Program Files\\wkhtmltopdf\\bin . Note Alternativeley you can install wkhtmltopdf via chocolatey with choco install wkhtmltopdf . This will also add the executable folder to %PATH% during installation. Step1. Add a toc.yml specific for PDF Current design is that each TOC file generates a corresponding PDF file, TOC is also used as the cover page of the PDF, so we create a toc.yml file specific for PDF under a new folder pdf , using TOC Include to include content from other TOC files. - name: Articles href: ../articles/toc.yml - name: Api Documentation href: ../api/toc.yml - name: Another Api Documentation href: ../api-vb/toc.yml Step2. Add pdf section into docfx.json Parameters are similar to build section, definitely it is using a different template (the builtin template is pdf.default ), with another output destination. We also exclude TOC files as each TOC file generates a PDF file: ... \"pdf\": { \"content\": [ { \"files\": [ \"api/**.yml\", \"api-vb/**.yml\" ], \"exclude\": [ \"**/toc.yml\", \"**/toc.md\" ] }, { \"files\": [ \"articles/**.md\", \"articles/**/toc.yml\", \"toc.yml\", \"*.md\", \"pdf/*\" ], \"exclude\": [ \"**/bin/**\", \"**/obj/**\", \"_site_pdf/**\", \"**/toc.yml\", \"**/toc.md\" ] }, { \"files\": \"pdf/toc.yml\" } ], \"resource\": [ { \"files\": [ \"images/**\" ], \"exclude\": [ \"**/bin/**\", \"**/obj/**\", \"_site_pdf/**\" ] } ], \"overwrite\": [ { \"files\": [ \"apidoc/**.md\" ], \"exclude\": [ \"**/bin/**\", \"**/obj/**\", \"_site_pdf/**\" ] } ], \"dest\": \"_site_pdf\" } Now, let's run docfx , and you can find pdf file walkthrough3_pdf.pdf generated under _site_pdf folder: Optional Step3. Enable plugins If you wish to use plugins with pdf as well, you need to add a template node to the pdf section. It needs to start with the pdf.template followed by the path to the plugins you want to use: \"template\": [ \"pdf.default\", \"pluginPackages/rest.tagpage.2.31.0/content\" ], Conclusion In this walkthrough, we build a PDF file according to the TOC file under pdf folder. Note that TOC plays an important role in PDF generation, it not only determines the files included in the PDF, but also the cover page for this PDF file. One TOC file generates one PDF file, so don't forget to exclude TOC files you don't want from docfx.json. Read more Walkthrough Part I: Generate a Simple Documentation Website Walkthrough Part II: Adding API Documentation to the Website Walkthrough Advanced: Customize Your Website (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "tutorial/walkthrough/walkthrough_create_a_docfx_project_2.html": {
    "href": "tutorial/walkthrough/walkthrough_create_a_docfx_project_2.html",
    "title": "Walkthrough Part II: Adding API Documentation to the Website | DocFX website",
    "keywords": "Walkthrough Part II: Adding API Documentation to the Website After completing Walkthrough Part I: Generate a Simple Documentation Website , we build a website from a set of .md files. We call it Conceptual Documentation . In this walkthrough, we will learn to build website from .NET source code, which is called API Documentation . We will also integrate Conceptual Documentation and API Documentation into one website, so that we can navigate from Conceptual to API , or API to Conceptual seamlessly. Download the files used in this walkthrough here . After completing walkthrough part I, our D:\\docfx_walkthrough\\docfx_project folder is in the following structure: |- index.md |- toc.yml |- articles | |- intro.md | |- details1.md | |- details2.md | |- details3.md | |- toc.yml |- images |- details1_image.png |- api |- index.md |- toc.yml Step1. Add a C# project Create a subfolder src under D:\\docfx_walkthrough\\docfx_project . Open Visual Studio Community 2015 (or an above version) and create a C# Class Library HelloDocfx under folder src . In the Class1.cs , add some comments and methods to this class, similar to: namespace HelloDocfx { /// <summary> /// Hello this is **Class1** from *HelloDocfx* /// </summary> public class Class1 { private InnerClass _class; public int Value { get; } /// <summary> /// This is a ctor /// </summary> /// <param name=\"value\">The value of the class</param> public Class1(int value) { Value = value; } public double ConvertToDouble() { return Value; } /// <summary> /// A method referencing a inner class /// </summary> /// <param name=\"name\">The name</param> /// <param name=\"inner\">A inner class with type <seealso cref=\"InnerClass\"/></param> public void SetInnerClass(string name, InnerClass inner) { inner.Name = name; _class = inner; } public class InnerClass { public string Name { get; set; } } } } Step2. Generate metadata for the C# project Calling docfx metadata under D:\\docfx_walkthrough\\docfx_project . docfx metadata is a sub-command registered in docfx , and it reads configuration in the metadata section from docfx.json . [ \"src/**.csproj\" ] in metadata/src/files tells docfx to search all the csproj from src subfolder to generate metadata. \"metadata\": [ { \"src\": [ { \"files\": [ \"src/**.csproj\" ], \"exclude\": [ \"**/bin/**\", \"**/obj/**\", \"_site/**\" ] } ], \"dest\": \"api\" } ] This generates several YAML files in the api folder. The YAML file contains the data model extracted from C# source code file. YAML is the metadata format used in docfx . General Metadata Spec defines the general schema, and .NET Metadata Spec defines the metadata schema for .NET languages that docfx can consume. |- HelloDocfx.Class1.InnerClass.yml |- HelloDocfx.Class1.yml |- HelloDocfx.yml |- toc.yml Also, note that if your csprojs are located outside of your docfx directory, and you need to use ../ you will need to use the src property: \"metadata\": [ { \"src\": [ { \"src\": \"../../\", \"files\": [ \"somewhere/src/**.csproj\" ], \"exclude\": [ \"**/bin/**\", \"**/obj/**\", \"_site/**\" ] } ], \"dest\": \"api\" } ] Step3. Build and preview our website Running the command docfx . docfx reads docfx.json and execute subcommands defined in the config file one by one. Our docfx.json defines metadata and build , so by running docfx , we are actually executing docfx metadata and docfx build , and thus generating the website. Run docfx serve _site , and the website is now: . Step4. Add another API documentation Create another subfolder src2 under D:\\docfx_walkthrough\\docfx_project . Besides generating API documentation from project files, docfx can generate documentation directly from source code. Let's create a Class2.cs as similar to: namespace HelloDocfx { /// <summary> /// Hello this is **Class2** from *HelloDocfx* /// </summary> public class Class2 { private InnerClass _class; public int Value { get; } /// <summary> /// This is a ctor /// </summary> /// <param name=\"value\">The value of the class</param> public Class2(int value) { Value = value; } public double ConvertToDouble() { return Value; } /// <summary> /// A method referencing a inner class /// </summary> /// <param name=\"name\">The name</param> /// <param name=\"inner\">A inner class with type <seealso cref=\"InnerClass\"/></param> public void SetInnerClass(string name, InnerClass inner) { inner.Name = name; _class = inner; } public class InnerClass { public string Name { get; set; } } } } Add it to the metadata section of our docfx.json as follows. \"metadata\": [ { \"src\": [ { \"files\": [ \"src/**.csproj\" ], \"exclude\": [ \"**/bin/**\", \"**/obj/**\", \"_site/**\" ] } ], \"dest\": \"api\" }, { \"src\": \"src2/**.cs\", \"dest\": \"api-vb\" } ] What it means is that the YAML metadata files for \"src2/**.cs\" are generated into \"api-vb\" folder. Let's also include the generated YAML files in build section: \"build\": { \"content\": [ { \"files\": [ \"api-vb/**.yml\" ] } ... For it to be organized and shown to website, we also need to modify our D:\\docfx_walkthrough\\docfx_project\\toc.yml file. Don't forget to append slash / for the value of href . - name: Articles href: articles/ - name: Api Documentation href: api/ homepage: api/index.md - name: Another Api Documentation href: api-vb/ Now, let's run docfx --serve again, and the website is now: . Step5. Combine conceptual and reference information in the left-side nav bar. The left-side nav bar can contain links to both conceptual information (overview, getting started, etc.) and reference information. In this example, assume that this is the toc.yml file at root. (It determines what's in the main horizontal menu bar.) - name: Home href: index.md - name: Articles href: articles/ - name: API Documentation href: obj/api/ - name: REST API href: restapi/ Add a new folder at root (e.g., fusion ). Inside fusion , add toc.yml : - name: Conceptual href: ../articles/toc.md - name: Reference href: ../obj/api/toc.yml In toc.yml at root, replace the link to ../obj/api/toc.yml with the path to fusion : - name: Home href: index.md - name: Articles href: articles/ homepage: articles/docfx_getting_started.md - name: API Documentation href: fusion/ - name: REST API href: restapi/ Add the fusion folder in docfx.json so the project includes it: \"content\": [ { \"files\": \"fusion/**\" } ] The output: . The docfx-seed sample project repo is another example of this kind of setup. More details: http://dotnet.github.io/docfx/tutorial/intro_toc.html#link-to-another-toc-file Conclusion In this walkthrough, we build a website containing both Conceptual Documentation and API Documentation . In the upcoming series of advanced walkthroughs, we will learn advanced concepts in docfx , such as cross reference between articles, external reference to other documentations, etc. We will also learn to customize our websites, from theme to layout to metadata extraction. Read more Walkthrough Part I: Generate a Simple Documentation Website Walkthrough Advanced: Customize Your Website (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "tutorial/walkthrough/walkthrough_create_a_docfx_project.html": {
    "href": "tutorial/walkthrough/walkthrough_create_a_docfx_project.html",
    "title": "Walkthrough Part I: Generate a Simple Documentation Website | DocFX website",
    "keywords": "Walkthrough Part I: Generate a Simple Documentation Website By completing this walkthrough, you'll become familiar with the workflow of docfx and the general principle of organizing documents inside docfx . You will finish this walkthrough with a static website that can be published to any host service. Download the files used in this walkthrough here . Step1. Setup DocFX Download docfx from http://dotnet.github.io/docfx/ . Getting Started with docfx describes three ways to install docfx . This walkthrough uses the first one: Use docfx.exe directly. Download docfx.zip and unzip it to D:\\docfx\\ Add D:\\docfx\\ to PATH so that command docfx and be directly called from everywhere for convenience. (for example, for Windows, set PATH=%PATH%;D:\\docfx\\ Step2. Init a DocFX project Create a new folder D:\\docfx_walkthrough Start Command Line under D:\\docfx_walkthrough Call docfx init -q . This command generates a docfx_project folder with the default docfx.json file under it. docfx.json is the configuration file docfx uses to generate documentation. -q option means generating the project quietly using default value, you can also try docfx init and follow the instructions to provide your own settings. Step3. Build our website Run command docfx docfx_project/docfx.json . Note that a new subfolder _site is generated under that folder. This is where the static website is generated. Step4. Preview our website The generated static website can be published to GitHub pages, Azure websites, or your own hosting services without any further changes. You can also run command docfx serve docfx_project/_site to preview the website locally. If port 8080 is not in use, docfx will host _site under http://localhost:8080 . If 8080 is in use, you can use docfx serve _site -p <port> to change the port to be used by docfx . Congrats! You can now see a simple website similar to: Step5. Add a set of articles to the website Place more .md files to articles , e.g. details1.md , details2.md , details3.md . If the file references any resources, put those resources into the images folder. In order to organize these articles, we add these files into toc.yml under articles subfolder. The content of toc.yml is as below: - name: Introduction href: intro.md - name: Details 1 href: details1.md - name: Details 2 href: details2.md - name: Details 3 href: details3.md So now our folder layout is: |- index.md |- toc.yml |- articles | |- intro.md | |- details1.md | |- details2.md | |- details3.md | |- toc.yml |- images |- details1_image.png Run Step3 and Step4 again, and the website is now: . Notice that more items are added to the sidebar for Articles nav page. The title inside the sidebar is exactly what we set in the toc.yml inside articles subfolder. Conclusion In this walkthrough, we build a website from a set of .md files. We call these .md files Conceptual Documentation . In walkthrough part 2, we will learn to add API Documentation to our website. The API Documentation is extracted directly from .NET source code. In a series of advanced walkthroughs, we will learn advanced concepts in docfx , such as cross reference between articles, external reference to other documentations, etc. We will also learn to customize our websites, from theme to layout to metadata extraction. Read more Walkthrough Part II: Adding API Documentation to the Website Walkthrough Advanced: Customize Your Website (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "tutorial/walkthrough/advanced_walkthrough.html": {
    "href": "tutorial/walkthrough/advanced_walkthrough.html",
    "title": "🔧 Walkthrough Advanced: Customize Your Website | DocFX website",
    "keywords": "🔧 Walkthrough Advanced: Customize Your Website Apply your own styles to the website or PDF Export the default template To export the default HTML template, open the command line at the root of the directory and run docfx template export default . A folder called _exported_templates is added at root with a directory inside called default . This is the DocFX default HTML template. To export the default PDF template, run docfx template export pdf.default . Create a new template Create a new directory at root to hold your custom templates - name it something like templates . Inside that folder, create a new folder and name it wantever you want to name your custom template. In this folder you'll replicate files from _exported_templates/default or _exported_templates/pdf.default (and only those files) you want to overwrite. Apply the template To apply your custom HTML template permanently, add the following to docfx.json at the root of the project inside \"build\": { : \"template\": [ \"default\", \"templates/<name of your your HTML template folder>\" ], To apply your custom PDF template permanently, add the following at the same level as \"content\" under \"pdf\" : \"template\": [ \"pdf.default\", \"templates/pdf\" ], To apply a template manually, append a -t with the template filepath to the build command: docfx build docfx.json -t C:\\<filepath>\\templates\\<your custom template folder> --serve Customize your template Inside the _exported_templates/default or exported_templates/pdf.default folder, copy any file you want to overwrite with your custom template. Paste it in your custom template folder, replicating the directory structure. For example, to change the copyright in the footer of the HTML template: Copy _exported_templates/default/partials/footer.tmpl.partial . Paste it in templates/<your custom template folder>/partials . Edit templates/<your custom template folder>/partials . To change the CSS of the HTML or PDF template: Copy _exported_templates/default/styles/main.css or _exported_templates/pdf.default/styles/main.css . Paste it in templates/<your custom template folder>/styles . Edit templates/<your custom template folder>/partials . Example of changing heading styles in main.css for an HTML template: article h1 { font-size: 40px; font-weight: 300; margin-top: 40px; margin-bottom: 20px; color: #000000; } Example of preventing words from breaking across lines for an HTML template: article h1, h2, h3, h4, h5, h6 { word-break: keep-all; } Example of changing heading styles for a PDF template: h1 { font-weight: 200; color: #007bb8; } To change the look of the table of contents in the PDF template, use this file: _exported_templates/default/toc.html.tmpl See a list of all your templates docfx template list See template commands docfx help template (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "tutorial/universalreference/intro_multiple_langs_support.html": {
    "href": "tutorial/universalreference/intro_multiple_langs_support.html",
    "title": "Introduction to Multiple Languages Support | DocFX website",
    "keywords": "Introduction to Multiple Languages Support 1. Introduction DocFX supports generate API documentation for C# and VB natively. However, it doesn't limit to these. DocFX is designed to support any languages. When generating document for a language, 2 steps is required: generating metadata and build documents from metadata. 2. Workflow 2.1 Generate Metadata As different programming language has different tool written with different language to generate API documentation, this step is not included in DocFX core. We call the tool used as Metadata Tool . As UniversalReferenceDocumentProcessor is used to process these metadata files, metadata tool should generate files according the processor's input schema. It needs: in YAML format and ends with .yml or .yaml has YamlMime ### YamlMime:UniversalReference at the first line confirms to the data model defined for UniversalReference Usually, a TOC should generate along with YAML files for easy navigation among files. 2.2 Build Document The YAML files generated is used as input of DocFX. DocFX will build these YAML files to HTML pages. 3. Supported Languages JavaScript TypeScript (comming soon ...) Python (coming soon ...) (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "tutorial/universalreference/gen_doc_for_ts.html": {
    "href": "tutorial/universalreference/gen_doc_for_ts.html",
    "title": "Generate API Documentation for TypeScript | DocFX website",
    "keywords": "Generate API Documentation for TypeScript 1. Prerequisite DocFX Node.js (includes npm) Git 2. Steps 2.1 Prepare Source Code Prepare the TypeScript source code for generating document. In this tutorial, we take azure-iot-device as an example. git clone https://github.com/Azure/azure-iot-sdk-node.git 2.2 Generate Metadata for a package We use typedoc tool and type2docfx to generate YAML files. First, let's install the tools globally. npm install -g typedoc type2docfx 2.2.1 TypeDoc to parse source code into a JSON format output Go to the folder where package.json file locate. Run typedoc --json api.json azure-iot-sdk-node/device/core/src --module commonjs --includeDeclarations --ignoreCompilerErrors --excludeExternals The parameter may differ for your needs. You can use typedoc -h to explore more options. 2.2.2 Type2docfx to extract the JSON format output into YAML files Find the output api.json file and run: type2docfx api.json yml The yml stands for the output folder, you can specify the folder as the content publishing folder in Section 2.3. And you can explore more option by type2docfx -h . With --sourceUrl, --sourceBranch, and --basePath parameters, you can generate yaml files referencing to the source code in Github, which will help developer to find the corresponding source code easily. Note All sources under node_modules path will be automatically ignored. 2.3 Build Document Create the configuration docfx.json for DocFX: { \"build\": { \"content\": [ { \"files\": [\"**/*.yml\"], \"src\": \"yml\", \"dest\": \"api\" } ], \"dest\": \"_site\" } } More information about docfx.json can be found in user manual . Run: docfx docfx.json --serve Now you can see your generated pages: http://localhost:8080/api/azure-iot-device/Client.html#azure_iot_device_Client 3. Know issues Some types can't link to the property correctly now. They displays in plain text and prefixed with @ . (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "tutorial/universalreference/gen_doc_for_js.html": {
    "href": "tutorial/universalreference/gen_doc_for_js.html",
    "title": "Generate API Documentation for JavaScript | DocFX website",
    "keywords": "Generate API Documentation for JavaScript 1. Prerequisite DocFX Node.js (includes npm) 2. Steps 2.1 Prepare Source Code Prepare the JavaScript source code for generating document. In this tutorial, we take azure-batch as an example npm install azure-batch 2.2 Generate Metadata We use Node2DocFX tool to generate YAML files. npm install node2docfx Create the node2docfx.json for the tool configuration: { \"source\": { \"include\": [\"node_modules/azure-batch/lib\"] }, \"destination\": \"yml\" } With this config, the tool will read source code under node_modules/azure-batch/lib , and extract metadata to YAML files under yml folder: node node_modules/node2docfx/node2docfx.js node2docfx.json 2.3 Build Document Create the configuration docfx.json for DocFX: { \"build\": { \"content\": [ { \"files\": [\"**/*.yml\"], \"src\": \"yml\", \"dest\": \"api\" } ], \"dest\": \"_site\" } } More information about docfx.json can be found in user manual . Run: docfx docfx.json --serve Now you can see your generated pages: http://localhost:8080/api/Account.html (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "tutorial/incrementalbuild/intro_incremental_post_processing.html": {
    "href": "tutorial/incrementalbuild/intro_incremental_post_processing.html",
    "title": "Introduction to DocFX Incremental Post Processing | DocFX website",
    "keywords": "Introduction to DocFX Incremental Post Processing Workflow Overall, the output of all post processors would be cached in following: Manifest items: to restore incremental manifest items. Log message info: to replay the log message. Output files: to restore the post processing outputs. Based on incremental build result, IsIncremental flag of the manifest item could hint whether the item is incremental or not. If the post processing meets Incremental Condition : For the incremental manifest items, restore from cache. For the non-incremental manifest items, they will be handled by post processors, and save the information into cache at the same time. If the post processing doesn't meet Incremental Condition , set IsIncremental flag to false to all manifest items, then they will be handled by post processors. Incremental Condition The post processing could be incremental only if it meets all of the following conditions: Both last cache file build.info and its PostProcessInfo exist, which is essential to restore the last incremental post processing info. Not set option forcePostProcess and force of build command or docfx.json config, to enable incremental post processing. Post processor requirement: Each of the post processor implements @Microsoft.DocAsCode.Plugins.ISupportIncrementalPostProcessor. Currently, @Microsoft.DocAsCode.Build.Engine.HtmlPostProcessor implements the interface while ExtractSearchIndex does not. Refer to Customize a post processor to be incremental for more details. Post processor number isn't changed. Each post processor's IncrementalContextHash isn't changed (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "tutorial/incrementalbuild/intro_incremental_build.html": {
    "href": "tutorial/incrementalbuild/intro_incremental_build.html",
    "title": "Introduction to DocFX Incremental Build | DocFX website",
    "keywords": "Introduction to DocFX Incremental Build Workflow for DocFX build with incremental. DocFX's build workflow is divided into three phases, namely Compile , Link and PostProcess . By default, changed files would be collected by comparing file's LastWriteTimeUtc and MD5 . We also provide the command option --changesFile to overwrite the default behavior. About the style of the changesFile, please refer to ChangesFile section. Before Compile phase, only changed files and their dependencies would be loaded. During Compile phase, rebuilt articles could report new dependencies. After Compile phase, newly introduced dependencies would lead to some unchanged files being reloaded. DocFX Incremental Build Framework provides a flexible way to define plugins/processors to support incremental build. Plugins that support incremental are free to report dependencies at Compile phase. Note Only Compile phase could report/collect dependencies. Framework also allows plugins to save/load context related info in Plugin Cache. For more details please refer to Plugin cache . By default, incremental cache files will be put at path obj/.cache/build/ relative to your docfx.json . You're also free to specify the path with option --intermediateFolder . About the structure of the cache folder please refer to Cache file structure . Incremental Condition Build could run incrementally only if all of the following conditions meet. The version supports incremental. Each version of file mappings would be built independently. For one version: Cache files are not corrupted. DocFX version isn't changed. Plugins' hash isn't changed. Templates' hash isn't changed. The docfx.json config hash isn't changed. This isn't a force build. Namely, no --force option. This isn't a debug run. Namely, no --exportRawModel or --exportViewModel option. If provided with changesFile , this build's CommitFromSHA should be same with last build's CommitToSHA . Note Not all configs in docfx.json are counted in when calculating the config hash. The below table lists configs that are ignored. Property Description Files the file collection that is included in docfx.json, namely files OutputBaseDir the base directory of output, namely dest ChangesFile the changes file MaxParallelism max parallelism VersionName version name ForceRebuild whether to force rebuild ForcePostProcess whether to force post processor LruSize lru size The processor supports incremental. The processor implements the interface @Microsoft.DocAsCode.Plugins.ISupportIncrementalDocumentProcessor. Right now, ConceptualDocumentProcessor and ManagedReferenceDocumentProcessor supports the interface. The processor's IncrementalContextHash isn't changed. All plugins in the processor implement the interface @Microsoft.DocAsCode.Plugins.ISupportIncrementalBuildStep. If you'd like to customize your processor to support incremental, you can view more from Walkthrough: Customize a processor to support incremental . Changes File You can specify the changes with the build option --changesFile . This would overwrite DocFX 's default behavior to calculate changes. Below is a sample changesFile changes.tsv . <from> f2166a5a0db6db595d263fb6c7288d64e535c4b2 <to> 158f883df18be9404df03f4844dd705251b280a2 F:/docfx-seed-master/docfx-seed-master/articles/csharp_coding_standards.md Updated F:/docfx-seed-master/docfx-seed-master/articles/images/seed.jpg Created F:/docfx-seed-master/docfx-seed-master/articles/test.md Deleted or you can use relative path to docfx.json . <from> f2166a5a0db6db595d263fb6c7288d64e535c4b2 <to> 158f883df18be9404df03f4844dd705251b280a2 articles/csharp_coding_standards.md Updated articles/images/seed.jpg Created articles/test.md Deleted The first two lines denote that the changelist is compared between the commit <from> and the commit <to> . The two lines could be omitted if you don't want to check the commit match. Otherwise, DocFX would check whether the changesFile's <from> is same with last build's <to> . You can specify the changesFile from option: --changesFile \"<path of changes.tsv relative to docfx.json>\" , or you can update docfx.json to add \"changesFile\": \"<path of changes.tsv relative to docfx.json>\" . Check the incremental information The information of incremental build and post processing is saved in incremental_info of manifest.json , which describes the incremental status and processors information. For example: \"incremental_info\": [{ \"status\": { \"can_incremental\": false, \"details\": \"Cannot build incrementally because config changed.\", \"incrementalPhase\": \"build\" }, \"processors\": { \"TocDocumentProcessor\": { \"can_incremental\": false, \"details\": \"Processor TocDocumentProcessor cannot support incremental build because the processor doesn't implement ISupportIncrementalDocumentProcessor interface.\", \"incrementalPhase\": \"build\" }, \"ManagedReferenceDocumentProcessor\": { \"can_incremental\": false, \"incrementalPhase\": \"build\" } } }, { \"status\": { \"can_incremental\": false, \"details\": \"Cannot support incremental post processing, the reason is: last post processor info is null.\", \"incrementalPhase\": \"postProcessing\" }, \"processors\": {} }] (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "tutorial/incrementalbuild/customize_a_processor_to_support_incremental.html": {
    "href": "tutorial/incrementalbuild/customize_a_processor_to_support_incremental.html",
    "title": "Walkthrough: Customize a processor to support incremental build | DocFX website",
    "keywords": "Walkthrough: Customize a processor to support incremental build During this tutorial, we'll walk through the steps to enable a processor to be incremental. Step1. Implement @Microsoft.DocAsCode.Plugins.ISupportIncrementalDocumentProcessor interface for the processor public class RtfDocumentProcessor : ISupportIncrementalDocumentProcessor { // to-do: implements IDocumentProcessor public virtual string GetIncrementalContextHash() { // to-do: context related hash. if it changes, incremental build isn't triggered. } public virtual void SaveIntermediateModel(FileModel model, Stream stream) { // to-do: the logic to store filemodel } public virtual FileModel LoadIntermediateModel(Stream stream) { // to-do: the logic to load filemodel } } Step2. Implement @Microsoft.DocAsCode.Plugins.ISupportIncrementalBuildStep interface for all the plugins plugged in the processor Plugins are flexible to register customized dependency types by implementing the interface's method @Microsoft.DocAsCode.Plugins.ISupportIncrementalBuildStep.GetDependencyTypesToRegister. Plugins are also flexible to report dependencies by invoking the methods provided by @Microsoft.DocAsCode.Plugins.IHostService. public class RtfBuildStep : ISupportIncrementalBuildStep { // to-do: implements IDocumentBuildStep public bool CanIncrementalBuild(FileAndType fileAndType) => true; public string GetIncrementalContextHash() => null; public IEnumerable<DependencyType> GetDependencyTypesToRegister() => new[] { new DependencyType() { Name = \"ref\", Phase = BuildPhase.Link, Transitivity = DependencyTransitivity.None, } }; public override void Build(FileModel model, IHostService host) { //..... host.ReportDependencyTo(model, \"uid\", DependencyItemSourceType.Uid, \"ref\"); } } The above sample registered a dependency type named ref , this type of dependency applies during Link phase and it isn't transitive. DocFX has some reserved dependency types, you can refer to Reserved Dependency Types for more details. In Build step, this plugin reports dependencies of type ref by invoking @Microsoft.DocAsCode.Plugins.IHostService 's ReportDependencyTo method. @Microsoft.DocAsCode.Plugins.IHostService also provides ReportDependencyFrom method you can report reverse dependency. For more details about how to register your own dependency types and report , you can refer to Advanced: register and report dependency . Step3. [Optional]Implement @Microsoft.DocAsCode.Plugins.ICanTraceContextInfoBuildStep interface for plugins that need to access context info When building articles, some plugins might need the info of unloaded articles. Incremental Build Framework provides the interface @Microsoft.DocAsCode.Plugins.ICanTraceContextInfoBuildStep, which is the superset of @Microsoft.DocAsCode.Plugins.ISupportIncrementalBuildStep and also contains methods to save/load context info. public class RtfBuildStep : ICanTraceContextInfoBuildStep { // to-do: implements ISupportIncrementalBuildStep public void LoadContext(Stream stream) { // to-do: the logic to load last context info } public void SaveContext(Stream stream) { // to-do: the logic to save current context info } } Now you're done! Your processor can run incrementally! (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "tutorial/incrementalbuild/customize_a_post_processor_to_be_incremental.html": {
    "href": "tutorial/incrementalbuild/customize_a_post_processor_to_be_incremental.html",
    "title": "Walkthrough: Customize a post processor to be incremental | DocFX website",
    "keywords": "Walkthrough: Customize a post processor to be incremental In this tutorial, we'll walk through how to enable a post processor to be incremental. Implement @Microsoft.DocAsCode.Plugins.ISupportIncrementalPostProcessor for the post processor public class AppendIntegerPostProcessor : ISupportIncrementalPostProcessor { // to-do: implements IPostProcessor public IPostProcessorHost PostProcessorHost { get; set; } public string GetIncrementalContextHash() { // to-do: incremental context hash. If it changes, incremental post processing isn't triggered. } } Optional: Load and save customized context information from cache @Microsoft.DocAsCode.Plugins.IPostProcessorHost is the host to provide incremental post processing information as following. Property Type Description SourceFileInfos List of @Microsoft.DocAsCode.Plugins.SourceFileInfo Information of source files ShouldTraceIncrementalInfo bool Whether the post processor should trace incremental information IsIncremental bool Whether the post processor can be incremental @Microsoft.DocAsCode.Plugins.IPostProcessorHost can also load and save customized context information per post processor in incremental cache. Method Return Type Description LoadContextInfo() Stream Load context information from last post processing SaveContextInfo() Stream Save context information to current post processing Here's the sample: public class AppendIntegerPostProcessor : ISupportIncrementalPostProcessor { public IPostProcessorHost PostProcessorHost { get; set; } public string GetIncrementalContextHash() { return string.Empty; } public Manifest Process(Manifest manifest, string outputFolder) { string contextInfo = string.Empty; var stream = PostProcessorHost.LoadContextInfo(); if (stream != null) { using (var sr = new StreamReader(stream)) { contextInfo = sr.ReadToEnd(); } } using (var saveStream = PostProcessorHost.SaveContextInfo()) using (var sw = new StreamWriter(saveStream)) { sw.Write(contextInfo + \"-updated\"); } return manifest; } } (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "tutorial/incrementalbuild/advanced_report_dependency.html": {
    "href": "tutorial/incrementalbuild/advanced_report_dependency.html",
    "title": "🔧 Advanced: Report Dependency | DocFX website",
    "keywords": "🔧 Advanced: Report Dependency DocFX Incremental Build Framework provides the flexiblity to register customized dependency type and report dependency. In this topic, we will go through how to do that. Register Dependency Type Dependency type Property Type Description Name string name of the dependency type(it should be unique) Phase enum( Compile or Link ) the build phase that this type of dependency could have an effect on. Transitivity enum( None or SameType or All ) whether the dependency is transitive, transitive upon the dependencies with same type, or transitive upon any dependency. Reserved dependency types Below table lists all reserved dependency types. When creating a customized dependency type, name shouldn't conflict with the reserved ones. Name Phase Transitivity Description include Compile All file inclusion and code snippet uid Link None cross reference file Link None file link overwrite Link All overwrite files bookmark Link None file link with bookmark metadata Link None metadata related dependency reference Link None managed reference document's references Register a customized dependency type Plugins are flexible to register customized dependency types by implementing @Microsoft.DocAsCode.Plugins.ISupportIncrementalBuildStep interface's method @Microsoft.DocAsCode.Plugins.ISupportIncrementalBuildStep.GetDependencyTypesToRegister. The method would be called by the framework at the very start of the whole build. Sample code: public IEnumerable<DependencyType> GetDependencyTypesToRegister() => new[] { new DependencyType() { Name = \"ref\", Phase = BuildPhase.Link, Transitivity = DependencyTransitivity.None, } }; Report Dependency item DependencyItem model Property Type Description From DependencyItemSourceInfo the depending one To DependencyItemSourceInfo the dependent one Type string the dependency type name DependencyItemSourceInfo model Property Type Description sourceType string the type of the value. file and uid are reserved types value string value How to report @Microsoft.DocAsCode.Plugins.IHostService interface provides the methods to report directed/reversed dependency items. If you want to report the dependency between an file and another file, you can use below method: directed dependency: @Microsoft.DocAsCode.Plugins.IHostService.ReportDependencyTo(Microsoft.DocAsCode.Plugins.FileModel,System.String,System.String) reversed dependency: @Microsoft.DocAsCode.Plugins.IHostService.ReportDependencyFrom(Microsoft.DocAsCode.Plugins.FileModel,System.String,System.String) For example, i'd like to report a dependency: file ~/test.md (filemodel is a ) depends on file ~/../include/token/md , dependency type is include , i could call the method ReportDependencyTo(a, \"~/../include/token.md\", \"include\") . Plugins are only allowed to report a dependency during Compile phase. However, some plugins might don't have enough info to resolve some dependency to file until the whole phase completes. Incremental build framework provides the flexiblity that plugins could report dependency between items that are not files and resolve them later. directed dependency: @Microsoft.DocAsCode.Plugins.IHostService.ReportDependencyTo(Microsoft.DocAsCode.Plugins.FileModel,System.String,System.String,System.String) reversed dependency: @Microsoft.DocAsCode.Plugins.IHostService.ReportDependencyFrom(Microsoft.DocAsCode.Plugins.FileModel,System.String,System.String,System.String) report reference: @Microsoft.DocAsCode.Plugins.IHostService.ReportReference(Microsoft.DocAsCode.Plugins.FileModel,System.String,System.String) A common usage is to report dependency between file and uid. For example, i'd like to report a dependency: file ~/test.md (filemodel is a ) depends on sentenceId @Testid(filemodel is b ), dependency type is link , i could call the method ReportDependencyTo(a, \"Testid\", \"sentenceId\", \"link\") to report the dependency and ReportReference(b, \"Testid\", \"sentenceId\") to report the mapping between sentenceId and file. This way, the framework would do the resolution work and resolve it to file-file dependency. (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "tutorial/incrementalbuild/advanced_cache_file_structure.html": {
    "href": "tutorial/incrementalbuild/advanced_cache_file_structure.html",
    "title": "🔧 Advanced: Cache File Structure | DocFX website",
    "keywords": "🔧 Advanced: Cache File Structure DocFX incremental build cache files are centralized and put in a folder specified with option --intermediateFolder or obj/.cache/build/ relative to your docfx.json by default. In the root folder of the cache files, there is a build.info , it is kind of index page, which is the entry point of the cache files. Below table lists the major information inside. BuildInfo model Property Type Description DirectoryName string Base directory of the cache files of last successful build DocfxVersion string DocFX version PluginHash string The hash of plugins plugged in DocFX TemplateHash string The hash of specified Templates Versions List< BuildVersionInfo > entry point of the cache files per version PostProcessInfo PostProcessInfo The entry point of the cache files for postprocessor BuildVersionInfo model Property Type Description VersionName string Version name ConfigHash string The hash of configs for the version DependencyFile string The file link for dependency AttributesFile string The file link for file attributes OutputFile string The file link for build outputs ManifestFile string The file link for the manifest file XRefSpecMapFile string The file link for the XRefMap file ExternalXRefSpecFile string The file link for the ExternalXRefSpec file FileMapFile string The file link for the FileMap file BuildMessageFile string The file link for build message file TocRestructionsFile string The file link for TocRestructions file Processors List< ProcessorInfo > The entry point of the cache files per processor ProcessorInfo model Property Type Description Name string The name of the processor IncrementalContextHash string The context hash of the processor IntermediateModelManifestFile string The file link for the BuildModel manifest file Steps List< ProcessorStepInfo > The entry point of cache files per step for the processor ProcessorStepInfo model Property Type Description Name string The name of the step IncrementalContextHash string The context hash of the step ContextInfoFile string The file link for the context info for the step PostProcessInfo model Property Type Description MessageInfoFile string The file link for the log message file, to restore the warning message ManifestItemsFile string The file link for the manifest items file, to restore the manifest items PostProcessOutputsFile string The file link for post processing outputs PostProcessorInfos List< PostProcessorInfo > The information of post processors PostProcessorInfo model Property Type Description Name string The name of the step IncrementalContextHash string The context hash of the step ContextInfoFile string The file link for the context info (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "tutorial/validate_your_markdown_files.html": {
    "href": "tutorial/validate_your_markdown_files.html",
    "title": "Validate Your Markdown Files | DocFX website",
    "keywords": "Validate Your Markdown Files In Markdown, we can write any document with valid syntax. For example, Markdown supports to directly write HTML tag, we can write HTML tag <h1>title</h1> instead of Markdown syntax #title . But for some purpose, some behaviors are unwanted, for example, you may not want to allow <script> tag in Markdown that can insert any javascript. In this document, you'll learn how to define markdown validation rules, which will help you to validate markdown documents in an efficient way. Note Markdown validation is part of DFM, if you switch Markdown engine to other engine, validation might not work. There're three kinds of validation rules provided by DocFX: HTML tag rule, which is used to validate HTML tags in Markdown. There is a common need to restrict usage of HTML tags in Markdown to only allow \"safe\" HTML tags, so we created this built-in rule for you. Markdown token rule. This can be used to validate different kinds of Markdown syntax elements, like headings, links, images, etc. Metadata rule. This can be used to validate metadata of documents. Metadata can be defined in YAML header, docfx.json , or a single JSON file. Metadata rule gives you a central place to validate metadata against certain principle. HTML tag validation rules For most cases, you may want to prohibit using certain html tags in markdown, so we built a built-in html tag rule for you. To define a HTML tag rule, simply create a md.style with following content: { \"tagRules\": [ { \"tagNames\": [ \"H1\", \"H2\" ], \"relation\": \"In\", \"behavior\": \"Warning\", \"messageFormatter\": \"Please do not use <H1> and <H2>, use '#' and '##' instead.\", \"customValidatorContractName\": null, \"openingTagOnly\": false } ] } Then when anyone write <H1> or <H2> in Markdown file, it will give a warning. You can use the following proprties to configure the HTML tag rule: tagNames is the list of HTML tag names to validate, required , case-insensitive . relation is optional for tagNames : In means when html tag is in tagNames , this is default value. NotIn means when html tag is not in tagNames . behavior defines the behavior when the HTML tag is met, required . Its value can be following: None: Do nothing. Warning: Log a warning. Error: Log an error, it will break current build. messageFormatter is the log message when the HTML tag is hit, required . It can contain following variables: {0} the name of tag. {1} the whole tag. For example, the messageFormatter is {0} is the tag name of {1}. , and the tag is <H1 class=\"heading\"> match the rule, then it will output following message: H1 is the tag name of <H1 class=\"heading\">. customValidatorContractName is an extension tag rule contract name for complex validation rule, optional . see Create a custom HTML tag rule . openingTagOnly is a boolean, option , default is false if true , it will only apply to opening tag, e.g. <H1> , otherwise, it will also apply to closing tag, e.g. </H1> . Test your rule To enable your rule, put md.style in the same folder of docfx.json , then run docfx , warning will be shown if it encounters <H1> or <H2> during build. Create a custom HTML tag rule By default HTML tag rule only validates whether an HTML tag exists in Markdown. Sometimes you may want to have additional validation against the content of the tag. For example, you may not want a tag to contain onclick attribute as it can inject javascript to the page. You can create a custom HTML tag rule to achieve this. Create a project in your code editor (e.g. Visual Studio). Add nuget package Microsoft.DocAsCode.Plugins and Microsoft.Composition . Create a class and implement @Microsoft.DocAsCode.Plugins.ICustomMarkdownTagValidator. Add ExportAttribute with contract name. For example, we require HTML link ( <a> ) should not contain onclick attribute: [Export(\"should_not_contain_onclick\", typeof(ICustomMarkdownTagValidator))] public class MyMarkdownTagValidator : ICustomMarkdownTagValidator { public bool Validate(string tag) { // use Contains for demo purpose, a complete implementation should parse the HTML tag. return tag.Contains(\"onclick\"); } } And update your md.style with following content: { \"tagRules\": [ { \"tagNames\": [ \"a\" ], \"behavior\": \"Warning\", \"messageFormatter\": \"Please do not use 'onclick' in HTML link.\", \"customValidatorContractName\": \"should_not_contain_onclick\", \"openingTagOnly\": true } ] } How to enable custom HTML tag rules Same as default HTML tag rule, config the rule in md.style . Create a folder ( rules for example) in your DocFX project folder, put all your custom rule assemblies to a plugins folder under rules folder. Now your DocFX project should look like this: / |- docfx.json |- md.style \\- rules \\- plugins \\- <your_rule>.dll Update your docfx.json with following content: { ... \"dest\": \"_site\", \"template\": [ \"default\", \"rules\" ] } Run docfx you'll see your rule being executed. Note The folder rules is actually a template folder. In DocFX, template is a place for you to customize build, render, validation behavior. For more information about template, please refer to our template and plugin documentation. Markdown token validation rules Besides HTML tags, you may also want to validate Markdown syntax like heading or links. For example, in Markdown, you may want to limit code snippet to only support a set of languages. To create such rule, follow the following steps: Create a project in your code editor (e.g. Visual Studio). Add nuget package Microsoft.DocAsCode.MarkdownLite and Microsoft.Composition . Create a class and implements @Microsoft.DocAsCode.MarkdownLite.IMarkdownTokenValidatorProvider @Microsoft.DocAsCode.MarkdownLite.MarkdownTokenValidatorFactory contains some helper methods to create a validator. Add ExportAttribute with rule name. For example, the following rule require all code block to be csharp : [Export(\"code_snippet_should_be_csharp\", typeof(IMarkdownTokenValidatorProvider))] public class MyMarkdownTokenValidatorProvider : IMarkdownTokenValidatorProvider { public ImmutableArray<IMarkdownTokenValidator> GetValidators() { return ImmutableArray.Create( MarkdownTokenValidatorFactory.FromLambda<MarkdownCodeBlockToken>(t => { if (t.Lang != \"csharp\") { throw new DocumentException($\"Code lang {t.Lang} is not valid, in file: {t.SourceInfo.File}, at line: {t.SourceInfo.LineNumber}\"); } })); } } To enable this rule, update your md.style to the following: { \"rules\": [ \"code_snippet_should_be_csharp\" ] } Then follow the same steps in How to enable custom HTML tag rules , run docfx you'll see your rule executed. Logging in your rules As you can see in the above example, you can throw @Microsoft.DocAsCode.Plugins.DocumentException to raise an error, this will stop the build immediately. You can also use @Microsoft.DocAsCode.Common.Logger.LogWarning(System.String,System.String,System.String,System.String) and @Microsoft.DocAsCode.Common.Logger.LogError(System.String,System.String,System.String,System.String) to report a warning and an error respectively. Note To use these methods, you need to install nuget package Microsoft.DocAsCode.Common first. The different between ReportError and throw DocumentException is throwing exception will stop the build immediately but ReportError won't stop build but will eventually fail the build after rules are run. Advanced: validating tokens with file context For some cases, we need to validate some tokens with file context. For example, we want each topic has one title (i.e. h1 written by markdown syntax, e.g. # <title> ). But you cannot count them in @Microsoft.DocAsCode.MarkdownLite.IMarkdownTokenValidator, it is shared by all files, and it will never be hit when there is no heading. For this purpose, we need to create validator like following: MarkdownTokenValidatorFactory.FromLambda<MarkdownHeadingBlockToken>( t => { if (t.Depth == 1) { var re = MarkdownTokenValidatorContext.CurrentRewriteEngine; var h1Count = (int)re.GetVariable(\"h1Count\"); re.SetVariable(\"h1Count\", h1Count + 1); } }, re => { re.SetVariable(\"h1Count\", 0); re.SetPostProcess(\"checkH1Count\", re1 => { var h1Count = (int)re.GetVariable(\"h1Count\"); if (h1Count != 1) { Logger.LogError($\"Unexpected title count: {h1Count}.\"); } }) }); The FromLambda method takes two callbacks: The first will be invoked on @Microsoft.DocAsCode.MarkdownLite.MarkdownHeadingBlockToken matched in all files. And the static property @Microsoft.DocAsCode.MarkdownLite.MarkdownTokenValidatorContext.CurrentRewriteEngine will provide current context object. The second will be invoked on starting a new file. And you can initialize some variables for each file, and register some callbacks when the file completed. Advanced usage of md.style Default rules If a rule has the contract name of default , it will be enabled by default. You don't need to enable it in md.style . Enable/disable rules in md.style You can add use disable to specify whether disable a rule: { \"rules\": [ { \"contractName\": \"<contract_name>\", \"disable\": true } ] } This gives you an opportunity to disable the rules enabled by default. Validate metadata in markdown files In markdown file, we can write some metadata in conceptual or overwrite document . And we allow to add some plug-ins to validate metadata written in markdown files. Scope of metadata validation Metadata is coming from multiple sources, the following metadata will be validated during build: YAML header in markdown. Global metadata and file metadata in docfx.json . Global metadata and file metadata defined in separate .json files. Tip For more information about global metadata and global metadata, see docfx.json format . Create validation plug-ins Create a project in your code editor (e.g. Visual Studio). Add nuget package Microsoft.DocAsCode.Plugins and Microsoft.Composition . Create a class and implement @Microsoft.DocAsCode.Plugins.IInputMetadataValidator For example, the following validator prohibits any metadata with name hello : [Export(typeof(IInputMetadataValidator))] public class MyInputMetadataValidator : IInputMetadataValidator { public void Validate(string sourceFile, ImmutableDictionary<string, object> metadata) { if (metadata.ContainsKey(\"hello\")) { throw new DocumentException($\"Metadata 'hello' is not allowed, file: {sourceFile}\"); } } } Enable metadata rule is same as other rules, just copy the assemblies to the plugins of your template folder and run docfx . Create configurable metadata validation plug-ins There are two steps to create a metadata validator: We need to modify export attribute for metadata validator plug-in: [Export(\"hello_is_not_valid\", typeof(IInputMetadataValidator))] Note If the rule doesn't have a contract name, it will be always enabled, i.e., there is no way to disable it unless delete the assembly file. Modify md.style with following content: { \"metadataRules\": [ { \"contractName\": \"hello_is_not_valid\", \"disable\": false } ] } Advanced: Share your rules Some users have a lot of document projects, and want to share validations for all of them, and don't want to write md.style file repeatedly. Create template For this propose, we can create a template with following structure: / (root folder for plug-in) \\- md.styles |- <category-1>.md.style \\- <category-2>.md.style \\- plugins \\- <your_rule>.dll In md.styles folder, there is a set of definition files, with file extension .md.style , each file is a category. In one category, there is a set of rule definition. For example, create a file with name test.md.style , then write following content: { \"tagRules\": { \"heading\": { \"tagNames\": [ \"H1\", \"H2\" ], \"behavior\": \"Warning\", \"messageFormatter\": \"Please do not use <H1> and <H2>, use '#' and '##' instead.\", \"openingTagOnly\": true } }, \"rules\": { \"code\": \"code_snippet_should_be_csharp\" }, \"metadataRules\": { \"hello\": { \"contractName\": \"hello_is_not_valid\", \"disable\": true } } } Then test is the category name (from file name) for three rules, and apply different id for each rule, they are heading , code and hello . When you build document with this template, all rules will be active when disable property is false . Config rules Some rules need to be enabled/disabled in some special document project. For example, hello rule is not required for most project, but for a special project, we want to enable it. We need to modify md.style file in this document project with following content: { \"settings\": [ { \"category\": \"test\", \"id\": \"hello\", \"disable\": false } ] } And for some project we need to disable all rules in test category: { \"settings\": [ { \"category\": \"test\", \"disable\": true } ] } Note disable property is applied by following order: tagRules , rules and metadataRules in md.style . auto enabled rules with contract name default . settings with category and id in md.style . settings with category in md.style . disable property in definition file. (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "tutorial/links_and_cross_references.html": {
    "href": "tutorial/links_and_cross_references.html",
    "title": "Links and Cross References | DocFX website",
    "keywords": "Links and Cross References Markdown provides a syntax to create hyperlinks. For example, the following syntax: [bing](http://www.bing.com) Will render to: <a href=\"http://www.bing.com\">bing</a> Here the url in the link could be either absolute url pointing to another website ( www.bing.com in the above example), or a relative url pointing to a local resource on the same server (for example, about.html ). When working with large documentation project that contains multiple files, it is often needed to link to another Markdown file using the relative path in the source directory. Markdown spec doesn't have a clear definition of how this should be supported. What's more, there is also a common need to link to another file using a \"semantic\" name instead of its file path. This is especially common in API reference docs, for example, you may want to use System.String to link to the topic of String class, without knowing it's actually located in api/system/string.html , which is auto generated. In this document, you'll learn the functionalities DocFX provides for resolving file links and cross reference, which will help you to reference other files in an efficient way. Link to a file using relative path In DocFX, you can link to a file using its relative path in the source directory. For example, You have a file1.md under root and a file2.md under subfolder/ : / |- subfolder/ | \\- file2.md \\- file1.md You can use relative path to reference file2.md in file1.md : [file2](subfolder/file2.md) DocFX converts it to a relative path in output folder structure: <a href=\"subfolder/file2.html\">file2</a> You can see the source file name ( .md ) is replaced with output file name ( .html ). Note DocFX does not simply replace the file extension here ( .md to .html ), it also tracks the mapping between input and output files to make sure source file path will resolve to correct output path. For example, if in the above case, subfolder is renamed to subfolder2 using file mapping in docfx.json , in output html, the link url will also resolve to subfolder2/file2.html . Relative path vs. absolute path It's recommended to always use relative path to reference another file in the same project. Relative path will be resolved during build and produce build warning if the target file does not exist. Tip File must be included in docfx.json to be processed by DocFX, so if you see a build warning about broken link but the file actually exists in your file system, go and check whether this file is included in docfx.json . You can also use absolute path (path starts with / ) to link to another file, but DocFX won't check its correctness for you and will keep it as-is in the output HTML. That means you should use the output file path as absolute path. For example, in the above case, you can also write the link as follows: [file2](/subfolder/file2.html) Sometimes you may find it's complicated to calculate relative path between two files. DocFX also supports path starts with ~ to represent path relative to the root directory of your project (i.e. where docfx.json is located). This kind of path will also be validated and resolved during build. For example, in the above case, you can write the following links in file2.md : [file1](~/file1.md) [file1](../file1.md) Both will resolve to ../file1.html in output html. Warning Automatic link doesn't support relative path. If you write something like <file.md> , it will be treated as an HTML tag rather than a link. Links in file includes If you use file include to include another file, the links in included file is relative to the included file. For example, if file1.md includes file2.md : [!include[file2](subfolder/file2.md)] All links in file2.md are relative to the file2.md itself, even when it's included by file1.md . Note Please note that the file path in include syntax is handled differently than Markdown link. You can only use relative path to specify location of the included file. And DocFX doesn't require included file to be included in docfx.json . Tip Each file in docfx.json will build into an output file. But included files usually don't need to build into individual topics. So it's not recommended to include them in docfx.json . Links in inline HTML Markdown supports inline HTML . DocFX also supports to use relative path in inline HTML. Path in HTML link ( <a> ), image ( <img> ), script ( <script> ) and css ( <link> ) will also be resolved if they're relative path. Using cross reference Besides using file path to link to another file, DocFX also allows you to give a file a unique identifier so that you can reference this file using that identifier instead of its file path. This is useful in the following cases: Path to file is long and difficult to memorize or changes frequently. API reference documentation is usually auto generated so it's difficult to find its file path. You want to reference to files in another project without need to know its file structure. The basic syntax for cross referencing a file is: <xref:id_of_another_file> This is similar to automatic link syntax in Markdown but with a xref scheme. This link will build into: <a href=\"path_of_another_file\">title_of_another_file</a> As you can see, one benefit of using cross reference is that you don't need to specify the link text and DocFX will automatically resolve it for you. Note Title is extracted from the first heading of the Markdown file. Or you can also specify title using title metadata. Define UID The unique identifier of a file is called UID (stands for unique identifier) in DocFX. For Markdown file, you can specify its UID by adding a UID metadata in YAML header . For example, the following Markdown defined a UID \"fileA\". --- uid: fileA --- # This is fileA ... Note UID is supposed to be unique inside a project. If you define duplicate UID for two files, the resolve result is undetermined. For API reference files, UID is auto generated by mangling API's signature. For example, System.String class's UID is System.String . You can open the generated YAML files to lookup the value of UID. Note Conceptual Markdown file doesn't have UID generated by default. So it cannot be cross referenced unless you give it a UID. Different syntax of cross reference Besides the auto link, we also support some other ways to use cross references: Markdown link In Markdown link, you can also use xref in link url: [link_text](xref:uid_of_another_file) This will resolve to: <a href=\"path_of_another_file\">link_text</a> In this case, we won't resolve the link text for you because you already specified it, unless the link_text is empty. Shorthand form You can also use @uid_to_another_file to quickly reference another file. There are some rules for DocFX to determine whether a string following @ are UID: The string after @ must start with [A-Za-z] , and end with: Whitespace or line end Punctuation ( [.,;:!?`~] ) followed by whitespace or line end Two or more punctuations ( [.,;:!?`~] ) A string enclosed by a pair of quotes ( ' or \" ) The render result of @ form is same as auto link form. For example, @System.String is same as <xref:System.String> . Warning Since @ is a common character in a document, DocFX doesn't show a warning if UID isn't found for a shorthand form xref link. Warnings for missing links are shown for auto links and Markdown links. Using hashtag in cross reference Sometimes you need to link to the middle of a file (an anchor) rather than jump to the beginning of a file. DocFX also allows you to do that. In Markdown link or auto link, you can add a hashtag ( # ) followed by the anchor name after UID. For example: <xref:uid_to_file#anchor_name> [link_text](xref:uid_to_file#anchor_name) @uid_to_file#anchor_name Will all resolve to url_to_file#anchor_name in output HTML. The link text still resolves to the title of the whole file. If it's not what you need, you can specify your own link text. Note Hashtag in xref is always treated as separator between file name and anchor name. That means if you have # in UID, it has to be encoded to %23 . Actually xref format follows URI standard so all reserved characters should be encoded. Link to overwrite files Overwrite file itself doesn't build into individual output file. It's merged with the API reference item model to build into a single file. If you want to link to the content inside an overwrite file (for example, an anchor), you cannot use the path to the overwrite file. Instead, you should either cross reference its UID, or link to the YAML file that contains the API. For example, you have String class which is generated from system.string.yml , then you have a string.md that overwrites its conceptual part which contains a compare-strings section. You can use one of the following syntax to link to this section: [compare strings](xref:System.String#compare-strings) [compare strings](system.string.yml#compare-strings) Both will render to: <a href=\"system.string.html#compare-strings\">compare strings</a> Cross reference between projects Another common need is to reference topics from an external project. For example, when you're writing the documentation for your own .NET library, you'll want to add some links that point to types in .NET base class library. DocFX gives you two ways to achieve this functionality: by exporting all UIDs in a project into a map file to be imported in another project, and through cross reference services. Cross reference map file When building a DocFX project, there will be an xrefmap.yml generated under output folder. This file contains information for all topics that have UID defined and their corresponding urls. The format of xrefmap.yml looks like this: references: - uid: uid_of_topic name: title_of_topic href: url_of_topic.html fullName: full_title_of_topic - ... It's a YAML object that contains following properties: references : a list of topic information, each item contains following properties: uid : UID to a conceptual topic or API reference name : title of the topic href : url to the topic, which is an absolute url or relative path to current file ( xrefmap.yml ) fullName : doesn't apply to conceptual, means the fully qualified name of API. For example, for String class, its name is String and fully qualified name is System.String . This property is not used in link title resolve for now but reserved for future use. Tip The topic is not necessarily a file, it can also be a section inside a file. For example, a method in a class. In this case its url could be an anchor in a file. Using cross reference map Once you import a cross reference map file in your DocFX project, all UIDs defined in that file can be cross referenced. To use a cross reference map, add a xref config to the build section of docfx.json : { \"build\": { \"xref\": [ \"<path_to_xrefmap>\" ], ... } } The value of xref could be a string or a list of strings that contain the path/url to cross reference maps. Note DocFX supports reading cross reference map from a local file or a web location. It's recommended to deploy xrefmap.yml to the website together with topic files so that others can directly use its url in docfx.json instead of downloading it to local. Cross reference services Cross reference services are hosted services that can be queried for cross reference information. When DocFX generates the metadata for your project, it will perform cross reference lookups against the service. To use a cross reference service, add a xrefservice config to the build section of docfx.json : { \"build\": { \"xrefService\": [ \"<url_to_xrefservice>\" ], ... } } For example, the URL for the cross reference service for .NET BCL types is https://xref.docs.microsoft.com/query?uid={uid} . Advanced: more options for cross reference You can create a cross link with following options: text : the display text when the cross reference has been resolved correctly. e.g.: @\"System.String?text=string\" will be resolved as string . alt : the display text when the cross reference does not have a href property. e.g.: <xref href=\"System.Collections.Immutable.ImmutableArray`1?alt=ImmutableArray\"/> will be resolved as ImmutableArray<T> . displayProperty : the property of display text when the cross reference is has resolved correctly. e.g.: <a href=\"xref:System.String?displayProperty=fullName\"/> will be resolved as System.String . altProperty : the property of display text when the cross reference does not have a href property. e.g.: <xref href=\"System.Collections.Immutable.ImmutableArray`1\" altProperty=\"name\"/> will be resolved as ImmutableArray<T> . title : the title of link. e.g.: [](xref:System.String?title=String+Class) will be resolved as String . (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "tutorial/intro_toc.html": {
    "href": "tutorial/intro_toc.html",
    "title": "Table-Of-Content (TOC) Files | DocFX website",
    "keywords": "Table-Of-Content (TOC) Files Introduction DocFX supports processing Markdown files or Conceptual File s, as well as structured data model in YAML or JSON format or Metadata File s. Besides that, DocFX introduces a way to organize these files using Table-Of-Content File s or TOC File s, so that users can navigate through Metadata File s and Conceptual File s. Note TOC File s must have file name toc.md or toc.yml , but the file name is case-insensitive. Basic format Markdown format TOC toc.md toc.md leverages Markdown Atx-style headers which use 1-6 hash characters at the start of the line to represent the TOC levels 1-6. We call each line starting with hash characters a TOC Item . A TOC Item with higher level is considered as the child of the nearest upper TOC Item with lower level. A sample toc.md is as below: # [Header1](href) ## [Header1.1](href) # Header2 ## [Header2.1](href) ### [Header2.1.1](href) ## [Header2.2](href) # @UidForAnArticle Note For a TOC Item , it can be either plain text, or a Markdown inline link , or @uid as the shortcut for cross-reference . Three kinds of links are supported: Absolute path, for example, http://example.net . Relative path, for example, ../example.md . This kind of link has several advanced usages and is described in detail below . URI with xref scheme or @ syntax, for example, xref:System.String or @System.String . The value is the uid of the file to cross-reference . YAML format TOC toc.yml Comparing to toc.md , toc.yml represents a structured data model and conforms to the YAML standard . It supports advanced functionalities. Data model for toc.yml The data model for toc.yml is an array of TOC Item Object s. A sample toc.yml is as below: - name: Topic1 href: Topic1.md - name: Topic2 href: Topic2.md items: - name: Topic2_1 href: Topic2_1.md TOC Item Object TOC Item Object represents the data model for each TOC Item . Note All property names are case sensitive . Property Name Required or Optional Type Description name required string Specifies the title of the TOC Item . href optional string Specifies the navigation path of the TOC Item . If href is not specified, the TOC Item serves as a container to parent its children TOC Items . If href is an absolute path, the TOC Item navigates to that specified path. If href is a relative path, see below for details. items optional TOC Item Object Specifies the children TOC Items of current TOC Item . Advanced usages : Following properties are useful when a TOC links to another TOC, or links to a uid. They are all optional. Property Name Type Description topicHref string Specifies the topic href of the TOC Item . It is useful when href is linking to a folder or TOC file or tocHref is used. topicUid string Specifies the uid of the referenced file. If the value is set, it overwrites the value of topicHref . homepage Deprecated string Specifies the homepage of the TOC Item . It is useful when href is linking to a folder. Use topicHref instead. uid Deprecated string Specifies the uid of the referenced file. If the value is set, it overwrites the value of href . Use topicUid instead. homepageUid Deprecated string Specifies the uid of the homepage. If the value is set, it overwrites the value of homepage . Use topicUid instead. href in detail If a TOC Item is linking to a relative path, there are three cases: Linking to another TOC File , for example, href: examples/toc.md . Linking to a folder, which means, the value of the link ends with / explicitly, for example, href: examples/ Linking to some local file. Each case is described in detail below. Link to another TOC File If the TOC Item is linking to some other TOC File in relative path, it is considered as a placeholder of the referenced TOC File . DocFX will extract the array of TOC Item Object from that TOC File and insert into current TOC Item recursively . This technique is especially useful when you want DocFX to combine several TOC File s to build into one single TOC. If homepage topicHref is set for this TOC Item , it will be considered as the href of the expanded TOC Item . For example, one toc.yml file is like below: - name: How-to tutorials href: howto/toc.yml topicHref: howto/overview.md It references to the toc.yml file under folder howto , with the following content: - name: \"How-to1\" href: howto1.md - name: \"How-to2\" href: howto2.md DocFX processes these toc.yml files and expands the upper toc.yml file into: - name: How-to tutorials href: howto/overview.md topicHref: howto/overview.md items: - name: \"How-to1\" href: howto/howto1.md topicHref: howto/howto1.md - name: \"How-to2\" href: howto/howto2.md topicHref: howto/howto2.md Note The referenced toc.yml file under howto folder will not be transformed to the output folder even if it is included in docfx.json . Link to a folder If the Toc Item is linking to a folder, ending with / explicitly, the link value for the Toc Item is determined in the following steps: If homepage topicHref or homepageUid topicUid is set, the link value is resolved to the relative path to homepage topicHref If homepage topicHref or homepageUid topicUid is not set, DocFX searches for Toc File under the folder, and get the first relative link to local file as the link value for current Toc Item . For example, if the Toc Item is href: article/ , and the content of article/toc.yml is as follows: - name: Topic1 href: topic1.md The link value for the Toc Item will be resolved to article/topic1.md . If there is no Toc File under the folder, the link value keeps unchanged. Link to local file If the Toc Item is linking to a local file, we call this local file In-Toc File . Make sure the file is included in docfx.json . Note Not-In-Toc Files When a local file is not referenced by any Toc Item , we call this local file Not-In-Toc File . Its TOC File is the nearest TOC File in output folder from the same folder as the local file to the root output folder. (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "tutorial/intro_template.html": {
    "href": "tutorial/intro_template.html",
    "title": "Introduction to DocFX Template System | DocFX website",
    "keywords": "Introduction to DocFX Template System DocFX Template System provides a flexible way of defining and using templates. As the following DocFX workflow shows, DocFX loads the set of files and transforms them into different data models using different types of Document Processor s. Afterwards, DocFX Template System loads these data models, and transforms them into output files based on the document type of the data model. Each file belongs to a document type . For example, the document type for Markdown files is conceptual , and the document type for toc.md files is Toc . For a specific Template , each document type can have several Renderer s. For a specific file, DocFX Template System picks the corresponding Renderer s to render the input data model into output files. Renderer Renderer s are files written in a specific templating language. It is used to transform the input data model into output files. Currently DocFX supports the following templating languages: Mustache templating language Liquid templating language Naming rule for a Renderer file The naming rule for a Renderer file is: <document_type>.<output_extension>[.primary].<template_extension> . <document_type> is the document type current Renderer responsible to. <output_extension> defines the extension of the output files going through current Renderer . For example, conceptual.html.tmpl transforms file1.md into output file file1.html , and toc.json.tmpl transforms toc.md into output file toc.json . [.primary] is optional. It is used when there are multiple Renderer s with different extension for one particular document type. The output file transformed by the .primary Renderer is used as the file to be linked. The below example describes the behavior in detail. <template_extension> is the extension of the Renderer file based on the templating language it uses. For Mustache Renderer , it is .tmpl , while for Liquid Renderer , it is .liquid . Here is an example. The following template contains two Mustache Renderer files for conceptual document type: /- some_template/ |- conceptual.html.primary.tmpl \\- conceptual.mta.json.tmpl There are two Markdown files A.md and B.md , the content for A.md is: [Link To B](B.md) DocFX Template System produces two output files for A.md : A.html and A.mta.json , and also two output files for B.md : B.html and B.mta.json . According to conceptual.html.primary.tmpl , .html is the primary output file, the link from A.md to B.md is resolved to B.html instead of B.mta.json , which is to say, the content of A.md is transformed to: <a href=\"B.html\">Link To B</a> Note If no primary Renderer is defined, DocFX randomly picks one Renderer as the primary one, and the result is unpredictable. Renderer in Mustache syntax Introduction to Mustache Mustache is a logic-less template syntax containing only tag s. It works by expanding tags in a template using values provided in a hash or object. Tag s are indicated by the double mustaches. {{name}} is a tag, it tries to find the name key in current context, and replace it with the value of name . mustache.5 lists the syntax of Mustache in detail. Naming rule Renderer s in Mustache syntax MUST end with .tmpl extension. Mustache Partials Mustache Partials is also supported in DocFX Template System . Partials are common sections of Renderer that can be shared by multiple Renderer files. Partials MUST end with .tmpl.partial . For example, inside a Template , there is a Partial file part.tmpl.partial with content: Inside Partial {{ name }} To reuse this Partial file, Renderer file uses the following syntax: Inside Renderer {{ >part }} It has the same effect with the following Renderer file: Inside Renderer Inside Partial {{ name }} Extended syntax for Dependencies When rendering the input data model into output files, for example, html files, the html file may rely on other files to display correctly. For example, the html file dependents on stylesheet file main.css . We call such file main.css a Dependency to the Renderer . DocFX introduces the following syntax to define the dependency for the Renderer : {{!include('<file_name>')}} docfx copies these dependencies to output folder preserving its relative path to the Renderer file. Tip Mustache is logic-less, and for a specific {{name}} tag, Mustache searches its context and its parent context recursively. So most of the time Preprocessor File is used to re-define the data model used by the Mustache Renderer . Extended syntax for Master page In most cases templates with different document types share the same layout and style, for example, most of the pages can share navbar, header, or footer. DocFX introduces the following syntax to use a master page: {{!master('<master_page_name>')}} Inside the master page, the following syntax is used for pages to place their content body: {{!body}} For example, with the following master page _master.html : <html> <head></head> <body> {{!body}} <body> </html> A template conceptual.html.tmpl as follows: {{!master('_master.html')}} Hello World renders as the same as: <html> <head></head> <body> Hello World <body> </html> Renderer in Liquid syntax Naming rule Renderer s in Liquid syntax MUST end with .liquid extension. Liquid contains include tag to support partials, we follow the ruby partials naming convention to have _<partialName>.liquid as partial template. Extended syntax for Dependencies DocFX introduces a custom tag ref , e.g. {% ref file1 %} , to specify the resource files that current template depends on. Extended syntax for Master page DocFX introduces custom tags master and body to use master page: {% master <master_page_name> %} Inside the master page, the following syntax is used for pages to place their content body: {% body %} For example, with the following master page _master.html : <html> <head></head> <body> {% body %} <body> </html> A template conceptual.html.liquid as follows: {% master _master.html %} Hello World renders as the same as: <html> <head></head> <body> Hello World <body> </html> Preprocessor Renderer s take the input data model produced by document processor and render them into output files. Sometimes the input data model is not exactly what Renderer s want. DocFX Template System introduces the concept of Preprocessor to transform the input data model into what Renderer s exactly want. We call the data model Preprocessor returns the View Model . View Model is the data model to apply Renderer . Naming rule for Preprocessor The naming of Preprocessor follows the naming of Renderer with file extension changes to .js : <renderer_file_name_without_extension>.js . If a Preprocessor has no corresponding Renderer however it still needs to be executed, for example, to run exports.getOptions function , it should be named as <document_type>.tmpl.js . Syntax for Preprocessor Preprocessor s are JavaScript files following ECMAScript 5.1 standard. DocFX Template System uses Jint as JavaScript Engine, and provides several additional functions for easy debugging and integration. Module Preprocessor leverages the concept of Module as similar to the Module in Node.js . The syntax of Module in Preprocessor is a subset of the one in Node.js. The advantage of the Module concept is that the Preprocessor script file can also be run in Node.js. The Module syntax in Preprocessor is simple, To export function property from one Module file common.js : exports.util = function () {} To use the exported function property inside common.js : var common = require('./common.js'); // call util common.util(); Note Only relative path starting with ./ is supported. Log You can call the following functions to log messages with different error level: console.log , console.warn or console.warning and console.err . Function Signature A Preprocessor file is also considered as a Module. It MUST export the function property with the signature required by docfx 's prescriptive interop pattern. There are two functions defined. Function 1: exports.getOptions Function property getOptions takes the data model produced by document processor as the input argument, and the return value must be an object with the following properties: Property Name Type Description isShared bool Defines whether the input data model can be accessed by other data models when transform . By default the value is false . If it is set to true , the data model will be stored into Globally Shared Properties . A sample exports.getOptions defined in toc.tmpl.js is: exports.getOptions = function (model) { return { isShared: true; }; } <!-- TODO: add bookmarks part when it is implemented --> Function 2: exports.transform Function property transform takes the data model produced by document processor (described in further detail in The Input Data Model ) as the input argument, and returns the View Model . View Model is the exact model to apply the corresponding Renderer . A sample exports.transform for conceptual.txt.js is: exports.transform = function (model) { model._title = \"Hello World\" return model; } If conceptual.txt.tmpl is: {{{_title}}} Then Markdown file A.md is transformed to A.txt with content: Hello World Tip For each file, the input data model can be exported to a JSON file by calling docfx build --exportRawModel . And the returned View Model can be exported to a JSON file by calling docfx build --exportViewModel . The Input Data Model The input data model used by transform not only contains properties extracted from the content of the file, but also system generated properties and globally shared properties. System Generated Properties System generated property names start with underscore _ , as listed in the following table: Name Description _rel The relative path of the root output folder from current output file. For example, if the output file is a/b/c.html from root output folder, then the value is ../../ . _path The path of current output file starting from root output folder. _navPath The relative path of the root TOC file from root output folder, if exists. The root TOC file stands for the TOC file in root output folder. For example, if the output file is html file, the value is toc.html . _navRel The relative path from current output file to the root TOC file, if exists. For example, if the root TOC file is toc.html from root output folder, the value is empty. _navKey The original file path of the root TOC file starting with ~/ . ~/ stands for the folder where docfx.json is in, for example, ~/toc.md . _tocPath The relative path of the TOC file that current output file belongs to from root output folder, if current output file is in that TOC file. If current output file is not defined in any TOC file, the nearest TOC file is picked. _tocRel The relative path from current output file to its TOC file. For example, if the TOC file is a/toc.html from root output folder, the value is ../ . _tocKey The original file path of the TOC file starting with ~/ . ~/ stands for the folder where docfx.json is in, for example, ~/a/toc.yml . Note Users can also override system generated properties by using YAML Header , fileMetadata or globalMetadata . Globally Shared Properties Globally shared properties are stored in __global key for every data model. Its initial value is read from global.json inside the Template if the file exists. If a data model has isShared equal to true with the above getOptions function property, it is stored in __global._shared with the original path starting with ~/ as the key. (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "tutorial/intro_rest_api_documentation.html": {
    "href": "tutorial/intro_rest_api_documentation.html",
    "title": "Introduction to REST API Documentation | DocFX website",
    "keywords": "Introduction to REST API Documentation Introduction DocFX supports generating documentation from REST APIs following Swagger specification version 2.0. The Swagger RESTful API files MUST end with .json . One Swagger API file generates one HTML file. For example, a file contacts.swagger.json generates file naming contacts.html . Basic structure A single Swagger API file is considered as a unique REST File containing multiple API s. The UID (Unique IDentifier) for the File is defined as the combination of host , basePath , info.title and info.version with / as separator. For example, the following Swagger API file has UID equals to microsoft.com/docfx/Contacts/1.6 : { \"swagger\": \"2.0\", \"info\": { \"title\": \"Contacts\", \"version\": \"1.6\" }, \"host\": \"microsoft.com\", \"basePath\": \"/docfx\", \"schemes\": [ \"https\" ] } A REST API File contains multiple API s as its children. An API is an Operation Object defined in Path Item Object . The UID (Unique IDentifier) for this API is defined as the combination of the UID of the File and the operationId of the Operation Object . For example, the following get_contacts operation has UID equal to microsoft.com/docfx/Contacts/1.6/get_contacts : { \"swagger\": \"2.0\", \"info\": { \"title\": \"Contacts\", \"version\": \"1.6\" }, \"host\": \"microsoft.com\", \"basePath\": \"/docfx\", \"schemes\": [ \"https\" ], \"paths\": { \"/contacts\": { \"get\": { \"parameters\": [ ], \"responses\": { }, \"operationId\": \"get_contacts\" } } } } Tip It is recommended that user provides a well-formed operationId name. We suggest that the operationId is one word in camelCase or snake_case. A REST API File could also contain multiple tags. The tag is a Tag Object , which is optional and used by Operation Object . The UID (Unique IDentifier) for this tag is defined as the combination of UID of the File , tag , and name of the Tag Object . For example, the following tag Basic has UID microsoft.com/docfx/Contacts/1.6/tag/Basic : { \"swagger\": \"2.0\", \"info\": { \"title\": \"Contacts\", \"version\": \"1.6\" }, \"host\": \"microsoft.com\", \"basePath\": \"/docfx\", \"schemes\": [ \"https\" ], \"tags\": [ { \"name\": \"Basic\", \"description\": \"Basic description\" }, { \"name\": \"Advanced\", \"description\": \"Advanced description\" } ] } HTML layout The generated HTML file lists all the API s inside the File in the order defined in the Swagger REST file. You can use Overwrite File s to add more information to the File and API , and use tags to organize the sections of the API s. Overwrite File s Overwrite File s are Markdown files with multiple Overwrite Section s starting with YAML header block. A valid YAML header for an Overwrite Section MUST take the form of valid YAML set between triple-dashed lines and start with property uid . Here is a basic example of an Overwrite Section : --- uid: microsoft.com/docfx/Contacts/1.6 --- Further description for `microsoft.com/docfx/Contacts/1.6` The uid value MUST match the uid of the File or API that you want to overwrite. The content following YAML header is the additional Markdown description for the File or API . By default, it is transformed to HTML and appended below the description of the File or API . Add footer You can also define the footer of an File or API using the following syntax: --- uid: microsoft.com/docfx/Contacts/1.6 footer: *content --- Footer for `microsoft.com/docfx/Contacts/1.6` *content is the keyword representing the Markdown content following YAML header. The value for *content is always transformed from Markdown content to HTML. In the above example, the value for *content is <p>Footer for <code>microsoft.com/docfx/Contacts/1.6</code></p> . In this way, the value of footer for API microsoft.com/docfx/Contacts/1.6 is set to <p>Footer for <code>microsoft.com/docfx/Contacts/1.6</code></p> . We leverage Anchors syntax in YAML specification for *content . If footer is set, the content from footer will be appended to the last section of the File or API . It is usually used to define See Also or Additional Resources for the documentation. Tags to organize the sections of APIs You can organize the sections of APIs by using tags in Swagger file, following definitions in Tag Object . Each API can be specified with one or multiple tags, or not speficied with any tag. If all APIs are not tagged, each API will not be included in any sections. If the API is specified with one tag only, it will show inside this one tag section. If the API is specified with multiple tags, it will show inside multiple tag sections. If some APIs are specified with tags while some other APIs are not, the untagged APIs will be organized into one auto generated Other apis section. Specific bookmark could be added to tag section using x-bookmark-id , which is Swagger schema extensions following Specification Extensions . If no x-bookmark-id is specified, name of the tag will be the default bookmark. For example, the following swagger file defines Basic and Advanced tags. Sections in the layout: set_contacts API is tagged with Advanced only, then it will only show inside Advanced tag section. get_contacts API is tagged with both Basic and Advanced , then it will show inside both of the tag sections. delete_contacts API is not tagged, it will show inside \"Other apis\" section. Bookmarks: Bookmark of Basic tag is BasicBookmark , which is defined by x-bookmark-id . Bookmark of Advanced tag is Advanced , which use name by default. { \"swagger\": \"2.0\", \"info\": { \"title\": \"Contacts\", \"version\": \"1.6\" }, \"host\": \"microsoft.com\", \"basePath\": \"/docfx\", \"schemes\": [ \"https\" ], \"tags\": [ { \"name\": \"Basic\", \"x-bookmark-id\": \"BasicBookmark\", \"description\": \"Basic description\" }, { \"name\": \"Advanced\", \"description\": \"Advanced description\" } ], \"paths\": { \"/contacts\": { \"get\": { \"operationId\": \"get_contacts\", \"tags\": [ \"Basic\", \"Advanced\" ] }, \"set\": { \"operationId\": \"set_contacts\", \"tags\": [ \"Advanced\" ] }, \"delete\": { \"operationId\": \"delete_contacts\" } } } } For the example above, the simple html layout will be: <h2 id=\"BasicBookmark\">Basic</h2> <h3 data-uid=\"microsoft.com/docfx/Contacts/1.6/get_contacts\">get_contacts</h3> <h2 id=\"Advanced\">Advanced</h2> <h3 data-uid=\"microsoft.com/docfx/Contacts/1.6/get_contacts\">get_contacts</h3> <h3 data-uid=\"microsoft.com/docfx/Contacts/1.6/set_contacts\">set_contacts</h3> <h2 id=\"other-apis\">Other APIs</h2> <h3 data-uid=\"microsoft.com/docfx/Contacts/1.6/delete_contacts\">delete_contacts</h3> Overwrite the tags More information could be added to the tag as following: --- uid: microsoft.com/docfx/Contacts/1.6/tag/Basic --- Additional comments for `microsoft.com/docfx/Contacts/1.6/tag/Basic` The description of the tag could be overwritten as following: --- uid: microsoft.com/docfx/Contacts/1.6/tag/Basic description: *content --- Overwrite description for `microsoft.com/docfx/Contacts/1.6/tag/Basic` Add other metadata You can define your own metadata with YAML header. This functionality is quite useful when your own template is used. When the key of the metadata is already preserved by DocFX, for example, summary , the value of summary will be overwritten. You can also overwrite complex types, for example, description of a parameter . Make sure the data structure of the provided metadata is consistent with the one defined in DocFX, otherwise, DocFX is unable to cast the value and fails. When the key of the metadata is not preserved by DocFX, for example, not_predefined . The metadata is kept and can be used in the template. Split extensibility By default, one REST API file generates one HTML file. For example, petstore.json generates petstore.html. We provide rest.tagpage and rest.operationpage plugins to split the original REST API page into smaller pages. With rest.tagpage plugin enabled, operations with the same tag are grouped into one page. With rest.operationpage plugin enabled, each operation is splitted into single page. With both rest.tagpage and rest.operationpage plugins enabled, the REST model will be splitted to tag level first, then split to operation level. Refer Plugins dashboard for more details. (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "tutorial/intro_overwrite_files.html": {
    "href": "tutorial/intro_overwrite_files.html",
    "title": "Overwrite Files | DocFX website",
    "keywords": "Overwrite Files Introduction DocFX supports processing Markdown files, as well as structured data model in YAML or JSON format. We call Markdown files Conceptual File s, and the structured data model files Metadata File s. Current supported Metadata File s include: YAML files presenting managed reference model following Metadata Format for .NET Languages . Swagger JSON files presenting Swagger REST API model following Swagger Specification Version 2.0 . Inside DocFX, both Conceptual File s and Metadata File s are represented as Model s with different properties. Details on Model structure for these files are described in Data model inside DocFX section. DocFX introduces the concept of Overwrite File to modify or add properties to Model s without changing the input Conceptual File s and Metadata File s. The format of Overwrite File s Overwrite File s are Markdown files with multiple Overwrite Section s starting with YAML header block. A valid YAML header for an Overwrite Section MUST take the form of valid YAML set between triple-dashed lines and start with property uid . Here is a basic example of an Overwrite Section : --- uid: microsoft.com/docfx/Contacts some_property: value --- Further description for `microsoft.com/docfx/Contacts` Each Overwrite Section is transformed to Overwrite Model inside DocFX. For the above example, the Overwrite Model represented in YAML format is: uid: microsoft.com/docfx/Contacts some_property: value conceptual: <p><b>Content</b> in Markdown</p> Anchor *content *content is the keyword invented and used specifically in Overwrite File s to represent the Markdown content following YAML header. We leverage Anchors syntax in YAML specification for *content . The value for *content is always transformed from Markdown content to HTML. When *content is not used, the Markdown content below YAML header will be set to conceptual property; When *content is used, the Markdown content below YAML header will no longer be set to conceptual property. With *content , we can easily add Markdown content to any properties. --- uid: microsoft.com/docfx/Contacts footer: *content --- Footer for `microsoft.com/docfx/Contacts` In the above example, the value for *content is <p>Footer for <code>microsoft.com/docfx/Contacts</code></p> , and the Overwrite Model represented in YAML format is: uid: microsoft.com/docfx/Contacts footer: <p>Footer for <code>microsoft.com/docfx/Contacts</code></p> uid for an Overwrite Model stands for the Unique IDentifier of the Model it will overwrite. So it is allowed to have multiple Overwrite Section s with YAML Header containing the same uid . For one Overwrite File , the latter Overwrite Section overwrites the former one with the same uid . For different Overwrite File s, the order of overwrite is Undetermined . So it is suggested to have Overwrite Sections with the same uid in the same Overwrite File . Note Multiple Overwrite Section s in one file doesn't work in markdig markdown engine. You should remove \"markdownEngineName\": \"markdig\", from docfx.json to support this feature. When processing Conceptual File s and Metadata File s, Overwrite Model s with the same uid are applied to the processed Model s. Different Model s have different overwrite principles, Overwrite principles section describes the them in detail. Apply Overwrite File s Inside docfx.json , overwrite is used to specify the Overwrite File s. Overwrite principles As a general principle, uid is always the key that an Overwrite Model find the Model it is going to overwrite. So a Model with no uid defined will never get overwritten. Different types of files produce different Model s. The quickest way to get an idea of what the Model looks like is to run: docfx build --exportRawModel --exportRawModel exports Model in JSON format with .raw.json extension. The basic principle of Overwrite Model is: It keeps the same data structure as the Model it is going to overwrite If the property is defined in Model , please refer Data model inside DocFX for the specific overwrite behavior for a specific property. If the property is not defined in Model , it is added to Model Data model inside DocFX Managed reference model Key Type Overwrite behavior uid uid Merge key. assemblies string[] Ignore. attributes Attribute [] Ignore. children uid[] Ignore. documentation Source Merge. example string[] Replace. exceptions Exception [] Merge keyed list. fullName string Replace. fullName. string Replace. id string Replace. implements uid[] Ignore. inheritance uid[] Ignore. inheritedMembers uid[] Ignore. isEii boolean Replace. isExtensionMethod boolean Replace. langs string[] Replace. modifiers. string[] Ignore. name string Replace. name. string Replace. namespace uid Replace. overridden uid Replace. parent uid Replace. platform string[] Replace. remarks markdown Replace. see LinkInfo [] Merge keyed list. seealso LinkInfo [] Merge keyed list. source Source Merge. syntax Syntax Merge. summary markdown Replace. type string Replace. Source Property Type Overwrite behavior base string Replace. content string Replace. endLine integer Replace. id string Replace. isExternal boolean Replace. href string Replace. path string Replace. remote GitSource Merge. startLine integer Replace. GitSource Property Type Overwrite behavior path string Replace. branch string Replace. repo url Replace. commit Commit Merge. key string Replace. Commit Property Type Overwrite behavior committer User Replace. author User Replace. id string Replace. message string Replace. User Property Type Overwrite behavior name string Replace. email string Replace. date datetime Replace. Exception Property Type Overwrite behavior type uid Merge key. description markdown Replace. commentId string Ignore. LinkInfo Property Type Overwrite behavior linkId uid or href Merge key. altText markdown Replace. commentId string Ignore. linkType enum( CRef or HRef ) Ignore. Syntax Property Type Overwrite behavior content string Replace. content. string Replace. parameters Parameter [] Merge keyed list. typeParameters Parameter [] Merge keyed list. return Parameter Merge. Parameter Property Type Overwrite behavior id string Merge key. description markdown Replace. attributes Attribute [] Ignore. type uid Replace. Attribute Property Type Overwrite behavior arguments Argument [] Ignore. ctor uid Ignore. namedArguments NamedArgument [] Ignore. type uid Ignore. Argument Property Type Overwrite behavior type uid Ignore. value object Ignore. NamedArgument Property Type Overwrite behavior name string Ignore. type string Ignore. value object Ignore. REST API model Key Type Overwrite behavior children REST API item model Overwrite when uid of the item model matches summary string Overwrite description string Overwrite REST API item model Key Type Overwrite behavior uid string Key Conceptual model Key Type Overwrite behavior title string Overwrite rawTitle string Overwrite conceptual string Overwrite (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "tutorial/intro_markdown_lite.html": {
    "href": "tutorial/intro_markdown_lite.html",
    "title": "Markdown Lite | DocFX website",
    "keywords": "Markdown Lite Introduction Markdown lite is a simple markdown tool to markup md file. Design goal We write this tool for good extensibility, so our implementation should obey following principles: Extensibility: Support markdown syntax extension. Support validation extension. Correctness: We follow GFM syntax, but when some rules is too hard to implement, just breaking. Performance: Performance is not our major concern. Steps There are three steps when calling markup method : Parse Rewrite or validate Render Step 1: Parse In this step, it will parse markdown text to tokens . The parser is based on rules , which make up the context . For example, heading token is created by heading rule , the heading rule is belonging to block context . Step 2: Rewrite or validate In this step, it will walk through all tokens , we can change it to another, or just validate. For example, we can create a rewriter to change all heading token with depth + 1: MarkdownTokenRewriterFactory.FromLambda<IMarkdownRewriteEngine, MarkdownHeadingBlockToken>( (engine, token) => new MarkdownHeadingBlockToken(token.Rule, token.Context, token.Content, token.Id, token.Depth + 1, token.SourceInfo); Step 3: Render In this step, it renders models to text content (html format by default). To simplify extension, we created an adapter , the adapter invoke methods by following rules: Method name is Render Instance method Return type is @Microsoft.DocAsCode.MarkdownLite.StringBuffer The count of parameters is 3, and types are following: @Microsoft.DocAsCode.MarkdownLite.IMarkdownRenderer or any type implements it. @Microsoft.DocAsCode.MarkdownLite.IMarkdownToken or any type implements it. @Microsoft.DocAsCode.MarkdownLite.IMarkdownContext or any type implements it. Always invoke the best overloaded method (The best is defined by binder ). Engine and engine builder Engine is a set of parser, rewriter and renderer. It can markup a markdown file to html file (or others). But it cannot be invoked in parallel. So we create an engine builder . It defines all the rules of parser, rewriter and renderer. It can create instances when needed. How to customize markdown syntax Define markdown syntax Define markdown: : My label should be rendered as following html: <div id=\"My label\"></div> Select token kind First of all, we should select the context for this rule. And in this goal, the new line is required. So it should be a block token , all of the names for class should contain Block . Define token Create a token class like following: public class MarkdownMyLabelBlockToken : IMarkdownToken { public MarkdownMyLabelBlockToken(IMarkdownRule rule, IMarkdownContext context, string label, SourceInfo sourceInfo) { Rule = rule; Context = context; Label = label; SourceInfo = sourceInfo; } public IMarkdownRule Rule { get; } public IMarkdownContext Context { get; } public string Label { get; } public SourceInfo SourceInfo { get; } } Define rule Create a rule class as following: public class MarkdownMyLabelBlockRule : IMarkdownRule { public virtual string Name => \"My Label\"; public virtual Regex LabelRegex { get; } = new Regex(\"^\\: *([^\\n]+?) *(?:\\n+|$)\"); public virtual IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) { var match = LabelRegex.Match(context.CurrentMarkdown); if (match.Length == 0) { return null; } var sourceInfo = context.Consume(match.Length); return new MarkdownMyLabelBlockToken(this, parser.Context, match.Groups[1].Value, sourceInfo); } } Define renderer Create a renderer class as following: public class MyRenderer : HtmlRenderer { public virtual StringBuffer Render(IMarkdownRenderer renderer, MarkdownMyLabelBlockToken token, IMarkdownContext context) { return StringBuffer.Empty + \"<div id=\\\"\" + token.Label + \"\\\"></div>\"; } } Define engine builder Create an engine builder class as following: public class MyEngineBuilder : GfmEngineBuilder { public MyEngineBuilder(Options options) : base(options) { BlockRules = BlockRules.Insert(0, new MarkdownMyLabelBlockRule()); } } Markup it! Then use your custom markdown in your code: public string MarkupMyMarkdown(string markdown) { var builder = new MyEngineBuilder(new Options()); var engine = builder.CreateEngine(new MyRender()) return engine.Markup(markdown); } (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "tutorial/intro_default_template.html": {
    "href": "tutorial/intro_default_template.html",
    "title": "🔧 Default Template Introduction | DocFX website",
    "keywords": "🔧 Default Template Introduction Search Library -- lunr.js Customize full-text search in your website Search enable Disable full-text for specific pages (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "tutorial/howto_filter_out_unwanted_apis_attributes.html": {
    "href": "tutorial/howto_filter_out_unwanted_apis_attributes.html",
    "title": "How-to: Filter Out Unwanted APIs or Attributes | DocFX website",
    "keywords": "How-to: Filter Out Unwanted APIs or Attributes A filter configuration file is in YAML format. You may filter out unwanted APIs or attributes by providing a filter configuration file and specifying its path. Specifying the filter configuration file path The path of the configuration file is specified in the following two ways. Option 1 could overwrite option 2. docfx.exe metadata command argument. docfx.exe metadata --filter <path relative to baseDir or absolutepath> docfx.json metadata section filter property. Sample { \"metadata\": [ { \"src\": [ { \"files\": [ \"src/**.csproj\" ], \"exclude\": [ \"**/bin/**\", \"**/obj/**\" ] } ], \"dest\": \"obj/api\", \"filter\": \"filterConfig.yml\" } ] } DocFX has a default filter configuration . If the user doesn't specify the filter configuration file path, default filter configuration would be used. Otherwise, user provided filter configuration would merge with the default one. If there is a conflict, user specified would overwrite the default one. The format of the filter configuration file 1. API Filter Rules To filter out APIs, you could specify apiRules with a list of exclude or include rules. Note The rules would be executed sequentially and the matching process would stop once one rule is matched. Namely, you need to put the most detailed rule in the top. If no rule is matched the API would be included by default. 1) exclude or include APIs by matching their uid with the Regex uidRegex . The sample below excludes all APIs whose uids start with 'Microsoft.DevDiv' except those that start with 'Microsoft.DevDiv.SpecialCase'. - include: uidRegex: ^Microsoft\\.DevDiv\\.SpecialCase - exclude: uidRegex: ^Microsoft\\.DevDiv 2) exclude or include APIs by matching its type , this is often combined with uidRegex . Supported type : Namespace Type Class Struct Enum Interface Delegate Member Event Field Method Property Note Type could be Class , Struct , Enum , Interface , or Delegate . Member could be Event , Field , Method , or Property . Namespace is flattened. Namely, excluding namespace 'A.B' has nothing to do with namespace 'A.B.C'. Important If a namespace is excluded, all types/members defined in the namespace would also be excluded. If a type is excluded, all members defined in the type would also be excluded. The below sample would exclude all APIs whose uid starts with 'Microsoft.DevDiv' and type is Type , namely Class , Struct , Enum , Interface , or Delegate . - exclude: uidRegex: ^Microsoft\\.DevDiv type: Type 3) exclude or include APIs by containing matched attributes. You can specify an attribute by its uid , ctorArguments and ctorNamedArguments . Note ctorArguments requires a full match of the attribute's constructor arguments, while ctorNamedArguments supports a partial match. Namely, ctorArguments should contain all the arguments while ctorNamedArguments could contain a subset of the named arguments. The sample below excludes all APIs which have EditorBrowsableAttribute and its constructor argument is EditorBrowsableState.Never. - exclude: hasAttribute: uid: System.ComponentModel.EditorBrowsableAttribute ctorArguments: - System.ComponentModel.EditorBrowsableState.Never The sample below excludes all APIs which have AttributeUsageAttribute and its constructor argument is AttributeTargets.Class and its constructor has named argument [Inherited] = true - exclude: hasAttribute: uid: System.AttributeUsageAttribute ctorArguments: - System.AttributeTargets.Class ctorNamedArguments: Inherited: \"true\" A complete Sample of the filter configuration file for filtering out APIs follows: apiRules: - exclude: uidRegex: ^Microsoft\\.TeamFoundation\\.WorkItemTracking\\.Proxy\\.IRowSetsNative$ - exclude: uidRegex: ^Microsoft\\.TeamFoundation\\.WorkItemTracking\\.Proxy\\.MetadataRowSetsNative$ - exclude: uidRegex: ^Microsoft\\.TeamFoundation\\.WorkItemTracking\\.Proxy\\.RowSet\\.Columns.*$ type: Member - exclude: uidRegex: ^Microsoft\\.TeamFoundation\\.WorkItemTracking\\.Proxy\\.RowSetColumn\\.Name.*$ type: Member - exclude: hasAttribute: uid: System.ComponentModel.EditorBrowsableAttribute ctorArguments: - System.ComponentModel.EditorBrowsableState.Never 2. Attribute Filter Rules To filter out Attributes, you could specify attributeRules with a list of exclude or include rules. The rules are similar to API filter. Please refer to API Filter Rules section. 3. Default Filter Configuration apiRules: - exclude: hasAttribute: uid: System.ComponentModel.EditorBrowsableAttribute ctorArguments: - System.ComponentModel.EditorBrowsableState.Never attributeRules: - exclude: uidRegex: ^System\\.ComponentModel\\.Design$ type: Namespace - exclude: uidRegex: ^System\\.ComponentModel\\.Design\\.Serialization$ type: Namespace - exclude: uidRegex: ^System\\.Xml\\.Serialization$ type: Namespace - exclude: uidRegex: ^System\\.Web\\.Compilation$ type: Namespace - exclude: uidRegex: ^System\\.Runtime\\.Versioning$ type: Namespace - exclude: uidRegex: ^System\\.Runtime\\.ConstrainedExecution$ type: Namespace - exclude: uidRegex: ^System\\.EnterpriseServices$ type: Namespace - exclude: uidRegex: ^System\\.Diagnostics\\.CodeAnalysis$ type: Namespace - include: uidRegex: ^System\\.Diagnostics\\.(ConditionalAttribute|EventLogPermissionAttribute|PerformanceCounterPermissionAttribute)$ type: Type - exclude: uidRegex: '^System\\.Diagnostics\\.[^.]+$' type: Type - include: uidRegex: ^System\\.ComponentModel\\.(BindableAttribute|BrowsableAttribute|ComplexBindingPropertiesAttribute|DataObjectAttribute|DefaultBindingPropertyAttribute|ListBindableAttribute|LookupBindingPropertiesAttribute|SettingsBindableAttribute|TypeConverterAttribute)$ type: Type - exclude: uidRegex: '^System\\.ComponentModel\\.[^.]+$' type: Type - exclude: uidRegex: ^System\\.Reflection\\.DefaultMemberAttribute$ type: Type - exclude: uidRegex: ^System\\.CodeDom\\.Compiler\\.GeneratedCodeAttribute$ type: Type - include: uidRegex: ^System\\.Runtime\\.CompilerServices\\.ExtensionAttribute$ type: Type - exclude: uidRegex: '^System\\.Runtime\\.CompilerServices\\.[^.]+$' type: Type - include: uidRegex: ^System\\.Runtime\\.InteropServices\\.(ComVisibleAttribute|GuidAttribute|ClassInterfaceAttribute|InterfaceTypeAttribute)$ type: Type - exclude: uidRegex: '^System\\.Runtime\\.InteropServices\\.[^.]+$' type: Type - include: uidRegex: ^System\\.Security\\.(SecurityCriticalAttribute|SecurityTreatAsSafeAttribute|AllowPartiallyTrustedCallersAttribute)$ type: Type - exclude: uidRegex: '^System\\.Security\\.[^.]+$' type: Type - include: uidRegex: ^System\\.Web\\.UI\\.(ControlValuePropertyAttribute|PersistenceModeAttribute|ValidationPropertyAttribute|WebResourceAttribute|TemplateContainerAttribute|ThemeableAttribute|TemplateInstanceAttribute)$ type: Type - exclude: uidRegex: '^System\\.Web\\.UI\\.[^.]+$' type: Type - include: uidRegex: ^System\\.Windows\\.Markup\\.(ConstructorArgumentAttribute|DesignerSerializationOptionsAttribute|ValueSerializerAttribute|XmlnsCompatibleWithAttribute|XmlnsDefinitionAttribute|XmlnsPrefixAttribute)$ type: Type - exclude: uidRegex: '^System\\.Windows\\.Markup\\.[^.]+$' type: Type (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "tutorial/howto_customize_docfx_flavored_markdown.html": {
    "href": "tutorial/howto_customize_docfx_flavored_markdown.html",
    "title": "How-to: Customize DFM Engine | DocFX website",
    "keywords": "How-to: Customize DFM Engine Warning Currently, there're two markdown engines in DocFX: dfm engine and markdig engine . This tutorial is about how to customize dfm engine, so it doesn't work with markdig engine. markdig engine will be enabled only when docfx.json contains markdownEngineName: markdig in build configuration part, otherwise dfm engine will be enabled. Customize Renderer DocFX Flavored Markdown introduced IDfmCustomizedRendererPartProvider from v2.17. In older version, you need to define a new markdown renderer and export a new markdown service . Now, you can customize a part of renderer as a DocFX plugin. Default rendering for block code For standard markdown, block code is following: ```cs Console.WriteLine(); ``` And the html will be: <pre><code class=\"lang-cs\">Console.WriteLine(); </code></pre> Set goal Now we want any csharp code ( cs , c# , csharp ) will generate following html: <pre><code class=\"lang-csharp\">Console.WriteLine(); </code></pre> Create customize rendering plugin project To complete this goal, we need to create a customized rendering plugin. Create a project, set project names. Add required nuget package: Microsoft.DocAsCode.Dfm with version >= 2.17, Microsoft.Composition with version 1.0.31. Create a class, for example with name CustomBlockCodeRendererPart . Inherit DfmCustomizedRendererPartBase<TRenderer, TToken, TContext> (which implements @Microsoft.DocAsCode.Dfm.IDfmCustomizedRendererPart). Implements renderer part class like following: public class CustomBlockCodeRendererPart : DfmCustomizedRendererPartBase<IMarkdownRenderer, MarkdownCodeBlockToken, MarkdownBlockContext> { public override string Name => \"MyFirstCustomRendererPart\"; public override bool Match(IMarkdownRenderer renderer, MarkdownCodeBlockToken token, MarkdownBlockContext context) { return token.Lang == \"cs\" || token.Lang == \"c#\" || token.Lang == \"csharp\"; } public override StringBuffer Render(IMarkdownRenderer renderer, MarkdownCodeBlockToken token, MarkdownBlockContext context) { StringBuffer result = \"<pre><code class=\\\"\"; result += renderer.Options.LangPrefix; result += \"csharp\"; result += \"\\\">\"; result += token.Code; result += \"\\n</code></pre>\"; return result; } } Tip If your part require dispose some resource, please implement IDisposable . Create another class, for example with name CustomBlockCodeRendererPartProvider Implements IDfmCustomizedRendererPartProvider and export like following: [Export(typeof(IDfmCustomizedRendererPartProvider))] public class CustomBlockCodeRendererPartProvider : IDfmCustomizedRendererPartProvider { public IEnumerable<IDfmCustomizedRendererPart> CreateParts(IReadOnlyDictionary<string, object> parameters) { yield return new CustomBlockCodeRendererPart(); } } Build the project. Enable customize rendering plugin Copy output assemblies to x\\plugins, x is any folder. Run docfx.exe with template x ( details ) Customize Markdown Extension In DocFX Flavored Markdown, we can add new markdown extensions by existing plugin system. Compare with markdown lite In markdown lite, we can customize markdown extension by following steps: Create a new token Create a new rule Create a new renderer Create a new engine builder In DocFX Flavored Markdown, we introduced IDfmEngineCustomizer from v2.17. Now, we need to following step: Create a new token Create a new rule Create a new renderer part Create a new renderer part provider Create a new DFM engine customizer Difference: DFM markdown extension is a part plugin, markdown lite is a whole engine plugin. You can combine two or more DFM markdown extensions, but you must choose one of markdown lite engine plugin. How to create a new markdown extension by plugin Define markdown syntax (same with markdown lite ). Select token kind (same with markdown lite ). Define token (same with markdown lite ). Define rule (same with markdown lite ). Create a new renderer part. public sealed class LabelRendererPart : DfmCustomizedRendererPartBase<IMarkdownRenderer, MarkdownMyLabelBlockToken, MarkdownBlockContext> { public override string Name => \"LabelRendererPart\"; public override bool Match(IMarkdownRenderer renderer, MarkdownMyLabelBlockToken token, MarkdownBlockContext context) => true; public override StringBuffer Render(IMarkdownRenderer renderer, MarkdownMyLabelBlockToken token, MarkdownBlockContext context) => \"<div id=\\\"\" + token.Label + \"\\\"></div>\"; } Create a new renderer part provider. [Export(typeof(IDfmCustomizedRendererPartProvider))] public class LabelRendererPartProvider : IDfmCustomizedRendererPartProvider { public IEnumerable<IDfmCustomizedRendererPart> CreateParts(IReadOnlyDictionary<string, object> parameters) { yield return new LabelRendererPart(); } } Create a new DFM engine customizer. [Export(typeof(IDfmEngineCustomizer))] public class MyDfmEngineCustomizer : IDfmEngineCustomizer { public void Customize(DfmEngineBuilder builder, IReadOnlyDictionary<string, object> parameters) { var index = builder.BlockRules.FindIndex(r => r is MarkdownHeadingBlockRule); builder.BlockRules = builder.BlockRules.Insert(index, new MyHeadingRule()); } } Build project. Enable and test your plugin. (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "tutorial/howto_create_custom_template.html": {
    "href": "tutorial/howto_create_custom_template.html",
    "title": "How-to: Create A Custom Template | DocFX website",
    "keywords": "How-to: Create A Custom Template Templates are organized as a zip package or a folder. The file path (without the .zip extension) of the zip package or the path of the folder is considered to be the template name. Quickstart Let's create a template to transform Markdown files into a simple html file. Step 1. Create a template folder Create a folder for the template, for example, c:/docfx_howto/simple_template . Step 2. Add Renderer file Create a file conceptual.html.primary.tmpl under the template folder with the following content: {{{conceptual}}} Now a simple custom template is created. You may notice that DocFX reports a warning message saying that: Warning: [Build Document.Apply Templates]There is no template processing document type(s): Toc . It is because our custom template only specifies how to handle document with type conceptual . To test the output of the template, create a simple documentation project following Walkthrough Part I or download the zipped documentation project directly. In the documentation project, run docfx build docfx.json -t c:/docfx_howto/simple_template --serve . The -t command option specifies the template name(s) used by the current build. Open http://localhost:8080 and you can see a simple web page as follows: Add Preprocessor file Step 3. Add Preprocessor file Sometimes the input data model is not exactly what Renderer wants, you may want to add some properties to the data model, or modify the data model a little bit before applying the Renderer file. This can be done by creating a Preprocessor file. Create a file conceptual.html.primary.js under the template folder with the following content: exports.transform = function (model) { model._extra_property = \"Hello world\"; return model; } Update the file conceptual.html.primary.tmpl with the following content: <h1>{{_extra_property}}</h1> {{{conceptual}}} In the documentation project, run docfx build docfx.json -t c:/docfx_howto/simple_template --serve . Open http://localhost:8080 and you can see _extra_property is added to the web page. Merge template with default template DocFX contains some embedded template resources that you can refer to directly. You can use docfx template list to list available templates provided by DocFX. Take default template as an example. Run docfx template export default . It exports what's inside default template into the folder _exported_templates . You can see that there are sets of Preprocessor and Renderer files to deal with different types of documents. DocFX supports specifying multiple templates for a documentation project. That allows you to leverage the default template for handling other types of documents, together with your custom template. When dealing with multiple templates, DocFX merges the files inside these templates. The principle for merging is: if a file name collides then the file in the latter template overwrites the one in the former template. For example, you can merge default template and your custom template by calling docfx build docfx.json -t default,c:/docfx_howto/simple_template . Multiple templates are split by a comma , in the command line. Or you can define it in docfx.json by: \"build\": { \"template\": [ \"default\", \"c:/docfx_howto/simple_template\" ] } In the documentation project, run docfx build docfx.json -t default,c:/docfx_howto/simple_template --serve . Now the warning message There is no template processing document type(s): Toc disappears because the default template contains Renderer to handle TOC files. Open http://localhost:8080/toc.html and you can see a toc web page. Tip Run docfx template export default to view what's inside the default template. Note It is possible that DocFX updates its embedded templates when a new version is released. So please make sure to re-export the template if you overwrite or are dependent on it in your custom template. Extension for Preprocessor file If you want to modify some properties based on DocFX default template's Preprocessor , you can use Preprocessor extension file to achieve this. For example, if you want to add a property to the managed reference's data model after default template's Preprocessor , you can update the file ManagedReference.extension.js in your custom template with the following content: /** * This method will be called at the start of exports.transform in ManagedReference.html.primary.js */ exports.preTransform = function (model) { return model; } /** * This method will be called at the end of exports.transform in ManagedReference.html.primary.js */ exports.postTransform = function (model) { model._extra_property = \"Hello world\"; return model; } Compared with modifying ManagedReference.html.primary.js directely, you needn't worry about merging your custom templates with DocFX's embedded templates when DocFX updates. (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.html": {
    "href": "tutorial/howto_build_your_own_type_of_documentation_with_custom_plug-in.html",
    "title": "How-to: Build your own type of documentation with a custom plug-in | DocFX website",
    "keywords": "How-to: Build your own type of documentation with a custom plug-in In this topic we will create a plug-in to convert some simple rich text format files to html documents. Goal and limitation In scope: Our input will be a set of rtf files with .rtf as the file extension name. The rtf files will be built as html document. Out of scope: Picture or other object in rtf files. Hyperlink in rtf files. (in the advanced tutorial , we will describe how to support hyperlinks in a custom plugin.) Metadata and title. Preparation Create a new C# class library project in Visual Studio , targets .NET Framework 4.6.1. Add nuget packages: System.Collections.Immutable with version 1.3.1 Microsoft.Composition with version 1.0.31 Add Microsoft.DocAsCode.Plugins and Microsoft.DocAsCode.Common If building DocFX from source code then add a reference to the project, otherwise add the nuget packages with the same version as DocFX. Add framework assembly references: PresentationCore , PresentationFramework , WindowsBase . (This step is optional in Visual Studio 2017) Add a project for converting rtf to html: Clone project MarkupConverter , and reference it. Copy the code file C#,C++,F#,VB\\ParallelExtensionsExtras\\TaskSchedulers\\StaTaskScheduler.cs from ParExtSamples Create a document processor Responsibility of the document processor Declare which file can be handled. Load from the file to the object model. Provide build steps. Report document type, file links and xref links in document. Update references. Create our RtfDocumentProcessor Create a new class (RtfDocumentProcessor.cs) with the following code: [Export(typeof(IDocumentProcessor))] public class RtfDocumentProcessor : IDocumentProcessor { // todo : implements IDocumentProcessor. } Declare that we can handle the .rtf file: public ProcessingPriority GetProcessingPriority(FileAndType file) { if (file.Type == DocumentType.Article && \".rtf\".Equals(Path.GetExtension(file.File), StringComparison.OrdinalIgnoreCase)) { return ProcessingPriority.Normal; } return ProcessingPriority.NotSupported; } Here we declare this processor can handle any .rtf file in the article category with normal priority. When two or more processors compete for the same file, DocFX will give it to the higher priority one. Unexpected : two or more processor declare for the same file with same priority. Load our rtf file by reading all text: public FileModel Load(FileAndType file, ImmutableDictionary<string, object> metadata) { var content = new Dictionary<string, object> { [\"conceptual\"] = File.ReadAllText(Path.Combine(file.BaseDir, file.File)), [\"type\"] = \"Conceptual\", [\"path\"] = file.File, }; var localPathFromRoot = PathUtility.MakeRelativePath(EnvironmentContext.BaseDirectory, EnvironmentContext.FileAbstractLayer.GetPhysicalPath(file.File)); return new FileModel(file, content) { LocalPathFromRoot = localPathFromRoot, }; } We use Dictionary<string, object> as the data model, similar to how ConceptualDocumentProcessor stores the content of markdown files. Implement Save method as follows: public SaveResult Save(FileModel model) { return new SaveResult { DocumentType = \"Conceptual\", FileWithoutExtension = Path.ChangeExtension(model.File, null), }; } BuildSteps property can provide several build steps for the model. We suggest implementing this in the following manner: [ImportMany(nameof(RtfDocumentProcessor))] public IEnumerable<IDocumentBuildStep> BuildSteps { get; set; } Name property is used to display in the log, so give any constant string you like. e.g.: public string Name => nameof(RtfDocumentProcessor); Since we don't support hyperlink, keep the UpdateHref method empty. public void UpdateHref(FileModel model, IDocumentBuildContext context) { } View the final RtfDocumentProcessor.cs Create a document build step Responsibility of the build step Reconstruct documents via the Prebuild method, e.g.: remove some document according to a certain rule. Transform document content via Build method, e.g.: transform rtf content to html content. Transform more content required by all document processed via the PostBuild method, e.g.: extract the link text from the title of another document. About build order: For all documents in one processor always Prebuild -> Build -> Postbuild . For all documents in one processor always invoke Prebuild by BuildOrder . For each document in one processor always invoke Build by BuildOrder . For all documents in one processor always invoke Postbuild by BuildOrder . e.g.: Document processor X has two steps: A (with BuildOrder=1), B (with BuildOrder=2). When X is handling documents [D1, D2, D3], the invoke order is as follows: A.Prebuild([D1, D2, D3]) returns [D1, D2, D3] B.Prebuild([D1, D2, D3]) returns [D1, D2, D3] Parallel( A.Build(D1) -> B.Build(D1), A.Build(D2) -> B.Build(D2), A.Build(D3) -> B.Build(D3) ) A.Postbuild([D1, D2, D3]) B.Postbuild([D1, D2, D3]) Create our RtfBuildStep: Create a new class (RtfBuildStep.cs), and declare it is a build step for RtfDocumentProcessor : [Export(nameof(RtfDocumentProcessor), typeof(IDocumentBuildStep))] public class RtfBuildStep : IDocumentBuildStep { // todo : implements IDocumentBuildStep. } In the Build method, convert rtf to html: private readonly TaskFactory _taskFactory = new TaskFactory(new StaTaskScheduler(1)); public void Build(FileModel model, IHostService host) { string content = (string)((Dictionary<string, object>)model.Content)[\"conceptual\"]; content = _taskFactory.StartNew(() => RtfToHtmlConverter.ConvertRtfToHtml(content)).Result; ((Dictionary<string, object>)model.Content)[\"conceptual\"] = content; } Implement other methods: public int BuildOrder => 0; public string Name => nameof(RtfBuildStep); public void Postbuild(ImmutableList<FileModel> models, IHostService host) { } public IEnumerable<FileModel> Prebuild(ImmutableList<FileModel> models, IHostService host) { return models; } View the final RtfBuildStep.cs Enable plug-in Build our project. Copy the output dll files to: Global: the folder with name Plugins under DocFX.exe Non-global: the folder with name Plugins under a template folder. Then run DocFX build command with parameter -t {template} . Hint : DocFX can merge templates so create a template that only contains the Plugins folder, then run the command DocFX build with parameter -t {templateForRender},{templateForPlugins} . Build document Run command DocFX init and set the source article with **.rtf . Run command DocFX build . (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "tutorial/howto_add_a_customized_post_processor.html": {
    "href": "tutorial/howto_add_a_customized_post_processor.html",
    "title": "How-to: Add a customized post-processor | DocFX website",
    "keywords": "How-to: Add a customized post-processor We provide the ability to process output files by adding a customized post-processor. In DocFX, the index file for full-text-search is generated by one post-processor named ExtractSearchIndex . In this topic, we will show how to add a customized post-processor. Step0: Preparation Create a new C# class library project in Visual Studio . Add nuget packages: System.Collections.Immutable with version 1.3.1 Microsoft.Composition with version 1.0.31 Add Microsoft.DocAsCode.Plugins If you are building DocFX from source code, add this reference to the project, otherwise add the nuget package Microsoft.DocAsCode.Plugins with the same version as DocFX. Step1: Create a new class (MyProcessor.cs) with the following code: [Export(nameof(MyProcessor), typeof(IPostProcessor))] public class MyProcessor : IPostProcessor { // TODO: implements IPostProcessor } Step2: Update global metadata public ImmutableDictionary<string, object> PrepareMetadata(ImmutableDictionary<string, object> metadata) { // TODO: add/remove/update property from global metadata return metadata; } In this method, we can update the global metadata before building all the files declared in docfx.json . Otherwise, you can just return the metadata from parameters if you don't need to change global metadata. Using ExtractSearchIndex for example, we add \"_enableSearch\": true in global metadata. The default template would then know it should load a search box in the navbar. Step3: Process all the files generated by DocFX public Manifest Process(Manifest manifest, string outputFolder) { // TODO: add/remove/update all the files included in manifest return manifest; } Input for the method manifest contains a list of all files to process, and outputFolder specifies the output folder where our static website will be placed. We can implement customized operations here to process all files generated by DocFX. Note Post-processor aims to process the output files, so the FileModel can't be accessed in this phase. If some metadata is needed here, an option is to save it in FileModel.ManifestProperties in build phase, then access it through ManifestItem.Metadata . Another option is to save it somewhere in output files, like HTML's <meta> Tag. Using ExtractSearchIndex for example again, we traverse all HTML files, extract key words from these HTML files and save a file named index.json under the outputFolder . Finally we return the manifest which is not modified. Step4: Build your project and copy the output dll files to: Global: the folder with name Plugins under DocFX.exe Non-global: the folder with name Plugins under a template folder, then run DocFX build command with parameter -t {template} . Hint : DocFX can merge templates, so we can specify multiple template folders as DocFX build -t {templateForRender},{templateForPlugins} . Each of the template folders should have a subfolder named Plugins with exported assemblies. Step5: Add your post processor in docfx.json In this step, we need to enable the processor by adding its name in docfx.json . Here is an example: { \"build\": { ... \"postProcessors\": [\"OutputPDF\", \"BeautifyHTML\", \"OutputPDF\"] } } As you can see, the postProcessors is an array, which means it could have multiple processors. It needs to be pointed out that the order of postProcessors written in docfx.json is also the order to process output files. In the above example, DocFX will run OutputPDF first, then BeautifyHTML , and then OutputPDF again. If you want to enable the post processors without changing docfx.json , you can use the build command option like docfx build --postProcessors=OutputPDF,BeautifyHTML,OutputPDF . One more thing need to be noted: the build command option postProcessors would override the corresponding configuration in docfx.json . (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "tutorial/docfx_getting_started.html": {
    "href": "tutorial/docfx_getting_started.html",
    "title": "Getting Started with DocFX | DocFX website",
    "keywords": "Getting Started with DocFX 1. What is DocFX DocFX is an API documentation generator for .NET, which currently supports C# and VB. It generates API reference documentation from triple-slash comments in your source code. It also allows you to use Markdown files to create additional topics such as tutorials and how-tos, and to customize the generated reference documentation. DocFX builds a static HTML website from your source code and Markdown files, which can be easily hosted on any web servers (for example, github.io ). Also, DocFX provides you the flexibility to customize the layout and style of your website through templates. If you are interested in creating your own website with your own styles, you can follow how to create custom template to create custom templates. DocFX also has the following cool features: Integration with your source code. You can click \"View Source\" on an API to navigate to the source code in GitHub (your source code must be pushed to GitHub). Cross-platform support. We have an exe version that runs natively on Windows and with Mono it can also run on Linux and macOS. Integration with Visual Studio. You can seamlessly use DocFX within Visual Studio. Markdown extensions. We introduced DocFX Flavored Markdown(DFM) to help you write API documentation. DFM is 100% compatible with GitHub Flavored Markdown(GFM) with some useful extensions, like file inclusion , code snippet , cross reference , and yaml header . For detailed description about DFM, please refer to DFM . Warning Prerequisites Visual Studio 2017 is needed for docfx metadata msbuild projects. It's not required when generating metadata directly from source code ( .cs , .vb ) or assemblies ( .dll ) 2. Use DocFX as a command-line tool Step1. DocFX ships as a chocolatey package . Install docfx through Chocolatey by calling choco install docfx -y . DocFX also ships as a Homebrew package , install with brew install docfx . Alternatively, you can download and unzip docfx.zip from https://github.com/dotnet/docfx/releases , extract it to a local folder, and add it to PATH so you can run it anywhere. Step2. Create a sample project docfx init -q This command generates a default project named docfx_project . Step3. Build the website docfx docfx_project\\docfx.json --serve Now you can view the generated website on http://localhost:8080. 3. Use DocFX integrated with Visual Studio Step1. Create a Class Library (.NET Framework) project Step2. Right click on the project and select Manage NuGet Package Step3. Search and install the docfx.console NuGet package. It adds itself to the build targets and adds the docfx.json configuration file along with other files. Step4. Build the project, and a _site folder will be generated with the documentation. Note Possible warning : Cache is corrupted : if your project targets multiple frameworks, you have to indicate one to be the main for the documentation, through the TargetFramework property in docfx.json : \"metadata\": [ { \"src\": \"...\", \"dest\": \"...\", \"properties\": { \"TargetFramework\": <one_of_your_framework> } }, ] 4. Use DocFX with a Build Server DocFX can be used in a Continuous Integration environment. Most build systems do not checkout the branch that is being built, but use a detached head for the specific commit. DocFX needs the branch name to implement the View Source link in the API documentation. Setting the environment variable DOCFX_SOURCE_BRANCH_NAME tells DocFX which branch name to use. Many build systems set an environment variable with the branch name. DocFX uses the following: APPVEYOR_REPO_BRANCH - AppVeyor BUILD_SOURCEBRANCHNAME - Visual Studio Team Services CI_BUILD_REF_NAME - GitLab CI Git_Branch - TeamCity GIT_BRANCH - Jenkins GIT_LOCAL_BRANCH - Jenkins Note Known issue in AppVeyor : Currently platform: Any CPU in appveyor.yml causes docfx metadata failure. https://github.com/dotnet/docfx/issues/1078 5. Build from source code As a prerequisite, you need: Visual Studio 2017 with .NET Core cross-platform development toolset Node.js Step1. git clone https://github.com/dotnet/docfx.git to get the latest code. Step2. Run build.cmd under root folder. Step3. Add artifacts folder to nuget source by in IDE: Tools > NuGet Package Manager > Package Manager Settings > Package Sources Step4. Follow steps in #2, #3, #4 to use DocFX in command-line, IDE or .NET Core. 6. A seed project to play with DocFX Here is a seed project: https://github.com/docascode/docfx-seed . It contains A basic C# project under src . Several conceptual files under articles . An overwrite file to add extra content to API under specs . toc.yml under root folder. It renders as the navbar of the website. docfx.json under root folder. It is the configuration file that docfx depends upon. Tip It's good practice to separate files with different types into different folders. 7. Q&A Q: How do I quickly reference APIs from other APIs or conceptual files? A: Use @uid syntax. Q: What is uid and where do I find uid ? A: Refer to Cross Reference section in DFM . Q: How do I quickly find uid in the website? A: In the generated website, hit F12 to view source, and look at the title of an API. You can find uid in data-uid attribute. (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "tutorial/docfx.exe_user_manual.html": {
    "href": "tutorial/docfx.exe_user_manual.html",
    "title": "docfx.exe User Manual | DocFX website",
    "keywords": "Doc-as-code: docfx.exe User Manual 0. Introduction docfx.exe is used to generate documentation for programs. It has the ability to: Extract language metadata for programing languages as defined in Metadata Format Specification . Currently language VB and CSharp are supported. The language metadata will be saved with YAML format as described in YAML 1.2 . Look for available conceptual files as provided and link it with existing programs with syntax described in Section 3. Work with Metadata in Markdown . Supported conceptual files are plain text files, html files, and markdown files. Generate documentation to a. Visualize language metadata, with extra content provided by linked conceptual files using syntax described in Section 3. Work with Metadata in Markdown . b. Organize and render available conceptual files. It can be easily cross-referenced with language metadata pages. We support Docfx Flavored Markdown(DFM) for writing conceptual files. DFM supports all Github Flavored Markdown(GFM) syntax with 2 exceptions when resolving list . It also adds several new features including file inclusion , cross reference , and yaml header . For detailed description about DFM, please refer to DFM . Currently generating documentations to a client only website is supported. The generated website can be easily published to whatever platform such as Github Pages and Azure Website with no extra effort. Generating offline documentation such as PDF is also supported now. 1. Syntax docfx <command> [<args>] 2. Commands 2.0 Init command docfx init docfx init helps generate an docfx.json file. 2.1 Help command docfx help docfx help -a list available subcommands. docfx help <command> to read about a specific subcommand 2.2 Extract language metadata command docfx metadata Syntax docfx metadata [<projects>] [--property <n1>=<v1>;<n2>=<v2>] Layout |-- <metadata folder> |-- api | |-- <namespace>.yml | |-- <class>.yml |-- toc.yml |-- index.yml 2.2.1 Optional <projects> argument <projects> specifies the projects to have metadata extracted. There are several approaches to extract language metadata. From a supported file or file list Supported file extensions include .csproj , .vbproj , .sln , project.json , dll assembly file, .cs source file and .vb source file. Multiple files are seperated by whitespace, e.g. docfx metadata Class1.cs a.csproj Note Glob pattern is NOT supported in command line options. From docfx.json file, as described in Section3 . If the argument is not specified, docfx.exe will try reading docfx.json under current directory. The default output folder is _site/ folder if it is not specified in docfx.json under current directory. 2.2.2 Command option --shouldSkipMarkup If adding option --shouldSkipMarkup in metadata command, it means that DocFX would not render triple-slash-comments in source code as markdown. e.g. docfx metadata --shouldSkipMarkup 2.2.3 Command option --property <n1>=<v1>;<n2>=<v2> An optional set of MSBuild properties used when interpreting project files. These are the same properties that are passed to msbuild via the /property: = ; = command line argument. For example: docfx metadata --property TargetFramework=net46 generates metadata files with .NET framework 4.6. This command can be used when the project supports multiple TargetFrameworks . 2.3 Generate documentation command docfx build Syntax docfx build [-o:<output_path>] [-t:<template folder>] docfx build generates documentation for current folder. If toc.yml or toc.md is found in current folder, it will be rendered as the top level TABLE-OF-CONTENT. As in website, it will be rendered as the top navigation bar. Note Please note that homepage is not supported in toc.md . And if href is referencing to a folder , it must end with / . toc.yml syntax toc.yml is an array of items. Each item can have following properties: Property Description name Required . The title of the navigation page. href Required . Can be a folder or a file UNDER current folder. A folder must end with / . In case of a folder, TOC.md inside the folder will be rendered as second level TABLE-OF-CONTENT. As in website, it will be rendered as a sidebar. homepage The default content shown when no article is selected. TOC.yml Sample - name: Home href: articles/Home.md - name: Roslyn Wiki href: roslyn_wiki/ - name: Roslyn API href: api_roslyn/ homepage: homepages/roslyn_language_features.md TOC.md Sample ## [Home](articles/Home.md) ## [Roslyn Wiki](roslyn_wiki/) ## [Roslyn API](api_roslyn/) 2.3.1 Optional <output_path> argument The default output folder is _site/ folder 2.3.2 Optional <template folder> argument If specified, use the template from template folder Template Folder Structure |-- <template folder> |-- index.html |-- styles | |-- docascode.css | |-- docascode.js |-- template | |-- toc.html | |-- navbar.html | |-- yamlContent.html |-- favicon.ico |-- logo.ico 2.4 Generate PDF documentation command docfx pdf Syntax docfx pdf [<config_file_path>] [-o:<output_path>] docfx pdf generates PDF for the files defined in config file, if config file is not specified, docfx tries to find and use docfx.json file under current folder. Note Prerequisite: We leverage wkhtmltopdf to generate PDF. Download wkhtmltopdf and save the executable folder path to %PATH% . Or just install wkhtmltopdf using chocolatey: choco install wkhtmltopdf Current design is that each TOC file generates a corresponding PDF file. Walk through Walkthrough: Generate PDF Files to get start. 3. docfx.json Format Top level docfx.json structure is key-value pair. key is the name of the subcommand, current supported subcommands are metadata and build . 3.1 Properties for metadata Metadata section defines an array of source projects and their output folder. Each item has src and dest property. src defines the source projects to have metadata generated, which is in File Mapping Format . Detailed syntax is described in 4. Supported name-files File Mapping Format below. dest defines the output folder of the generated metadata files. Key Description src Defines the source projects to have metadata generated, which is in File Mapping Format . dest Defines the output folder of the generated metadata files. force If set to true, it would disable incremental build. shouldSkipMarkup If set to true, DocFX would not render triple-slash-comments in source code as markdown. filter Defines the filter configuration file, please go to How to filter out unwanted apis attributes for more details. useCompatibilityFileName If set to true, DocFX would keep ` in comment id instead of replacing it with - . properties Defines an optional set of MSBuild properties used when interpreting project files. These are the same properties that are passed to msbuild via the /property:name=value command line argument. Sample { \"metadata\": [ { \"src\": [ { \"files\": [\"**/*.csproj\"], \"exclude\": [ \"**/bin/**\", \"**/obj/**\" ], \"src\": \"../src\" } ], \"dest\": \"obj/docfx/api/dotnet\", \"shouldSkipMarkup\": true, \"properties\": { \"TargetFramework\": \"netstandard1.3\" } }, { \"src\": [ { \"files\": [\"**/*.js\"], \"src\": \"../src\" } ], \"dest\": \"obj/docfx/api/js\", \"useCompatibilityFileName\": true, \"properties\": { \"TargetFramework\": \"net46\" } } ] } Note Make sure to specify \"TargetFramework\": <one of the frameworks> in your docfx.json when the project is targeting for multiple platforms. 3.2 Properties for build Key Description content Contains all the files to generate documentation, including metadata yml files and conceptual md files. name-files file mapping with several ways to define it, as to be described in Section4 . The files contains all the project files to have API generated. resource Contains all the resource files that conceptual and metadata files dependent on, e.g. image files. name-files file mapping with several ways to define it, as to be described in Section4 . overwrite Contains all the conceputal files which contains yaml header with uid and is intended to override the existing metadata yml files. name-files file mapping with several ways to define it, as to be described in Section4 . globalMetadata Contains metadata that will be applied to every file, in key-value pair format. For example, you can define \"_appTitle\": \"This is the title\" in this section, and when applying template default , it will be part of the page title as defined in the template. fileMetadata Contains metadata that will be applied to specific files. name-files file mapping with several ways to define it, as to be described in Section4 . globalMetadataFile Obsoleted , Specify a JSON file path containing globalMetadata settings, as similar to {\"globalMetadata\":{\"key\":\"value\"}} . globalMetadataFiles Specify a list of JSON file path containing globalMetadata settings, as similar to {\"key\":\"value\"} . Please read Section3.2.3 for detail. fileMetadataFile Obsoleted , Specify a JSON file path containing fileMetadata settings, as similar to {\"fileMetadata\":{\"key\":\"value\"}} . fileMetadataFiles Specify a list of JSON file path containing fileMetadata settings, as similar to {\"key\":\"value\"} . Please read Section3.2.3 for detail. template The templates applied to each file in the documentation. It can be a string or an array. The latter ones will override the former ones if the name of the file inside the template collides. If ommited, embedded default template will be used. theme The themes applied to the documentation. Theme is used to customize the styles generated by template . It can be a string or an array. The latter ones will override the former ones if the name of the file inside the template collides. If ommited, no theme will be applied, the default theme inside the template will be used. externalReferences Obsoleted , Contains rpk files that define the external references. name-files file mapping with several ways to define it, as to be described in Section4 . xref Specifies the urls of xrefmap used by content files. Currently, it supports following scheme: http, https, ftp, file, embedded. xrefService Specifies the url patterns of xref service. Please read Section3.2.4 for detail. exportRawModel If set to true, data model to run template script will be extracted in .raw.json extension. rawModelOutputFolder Specify the output folder for the raw model. If not set, the raw model will be generated to the same folder as the output documentation. exportViewModel If set to true, data model to apply template will be extracted in .view.json extension. viewModelOutputFolder Specify the output folder for the view model. If not set, the view model will be generated to the same folder as the output documentation. dryRun If set to true, template will not be actually applied to the documents. This option is always used with --exportRawModel or --exportViewModel , so that only raw model files or view model files are generated. maxParallelism Set the max parallelism, 0 (default) is same as the count of CPU cores. markdownEngineName Set the name of markdown engine, default is dfm , and another build-in engine is gfm . markdownEngineProperties Set the parameters for markdown engine, value should be a JSON string. noLangKeyword Disable default lang keyword, it can be downloaded from here . keepFileLink If set to true, docfx does not dereference (aka. copy) file to the output folder, instead, it saves a link_to_path property inside manifest.json to indicate the physical location of that file. A file link will be created by incremental build and copy resouce file. sitemap In format SitemapOptions Specifies the options for the sitemap.xml file. 3.2.1 Template s and Theme s Template s are used to transform YAML files generated by docfx to human-readable page s. A page can be a markdown file, a html file or even a plain text file. Each YAML file will be transformed to ONE page and be exported to the output folder preserving its relative path to src . For example, if page s are in HTML format, a static website will be generated in the output folder. Theme is to provide general styles for all the generated page s. Files inside a theme will be generally COPIED to the output folder. A typical usage is, after YAML files are transformed to HTML pages, well-designed CSS style files in a Theme can then overwrite the default styles defined in template , e.g. main.css . There are two ways to use custom templates and themes. To use a custom template, one way is to specify template path with --template (or -t ) command option, multiple templates must be separated by , with no spaces. The other way is to set key-value mapping in docfx.json : { ... { \"build\" : { ... \"template\": \"custom\", ... } ... } { ... { \"build\" : { ... \"template\": [\"default\", \"X:/template/custom\"], ... } ... } Note The template path could either be a zip file called <template>.zip or a folder called <template> . Warning DocFX has embedded templates: default , default(zh-cn) , pdf.default , statictoc and common . Please avoid using these as template folder name. To custom theme, one way is to specify theme name with --theme command option, multiple themes must be separated by , with no spaces. The other way is to set key-value mapping in docfx.json as similar to defining template. Also, both .zip file and folder are supported. Please refer to How to Create Custom Templates to create custom templates. Sample { \"build\": { \"content\": [ { \"files\": [\"**/*.yml\"], \"src\": \"obj/docfx\" }, { \"files\": [\"tutorial/**/*.md\", \"spec/**/*.md\", \"spec/**/toc.yml\"] }, { \"files\": [\"toc.yml\"] } ], \"resource\": [ { \"files\": [\"spec/images/**\"] } ], \"overwrite\": \"apispec/*.md\", \"externalReference\": [ ], \"globalMetadata\": { \"_appTitle\": \"DocFX website\", \"_gitContribute\": { \"repo\": \"https://github.com/org/repo\", \"branch\": \"dev\", \"apiSpecFolder\": \"docs-ref-overwrite\" } }, \"dest\": \"_site\", \"template\": \"default\" } } 3.2.2 Reserved Metadata After passing values through global metadata or file metadata, DocFX can use these metadata in templates to control the output html. Reserved metadatas: Metadata Name Type Description _appTitle string Will be appended to each output page's head title. _appFooter string The footer text. Will show DocFX's Copyright text if not specified. _appLogoPath string Logo file's path from output root. Will show DocFX's logo if not specified. Remember to add file to resource. _appFaviconPath string Favicon file's path from output root. Will show DocFX's favicon if not specified. Remember to add file to resource. _enableSearch bool Indicate whether to show the search box on the top of page. _enableNewTab bool Indicate whether to open a new tab when clicking an external link. (internal link always shows within the current tab) _disableNavbar bool Indicate whether to show the navigation bar on the top of page. _disableBreadcrumb bool Indicate whether to show breadcrumb on the top of page. _disableToc bool Indicate whether to show table of contents on the left of page. _disableAffix bool Indicate whether to show the affix bar on the right of page. _disableContribution bool Indicate whether to show the View Source and Improve this Doc buttons. _gitContribute object Customize the Improve this Doc URL button for public contributors. Use repo to specify the contribution repository URL. Use branch to specify the contribution branch. Use apiSpecFolder to specify the folder for new overwrite files. If not set, the git URL and branch of the current git repository will be used. _gitUrlPattern string Choose the URL pattern of the generated link for View Source and Improve this Doc . Supports github and vso currently. If not set, DocFX will try speculating the pattern from domain name of the git URL. 3.2.3 Separated metadata files for global metadata and file metadata There're three ways to set metadata for a file in DocFX: using global metadata, it will set metadata for every file. using file metadata, it will set metadata for files that match pattern. using YAML header, it will set metadata for current file. In above ways, the later way will always overwrite the former way if the same key of metadata is set. Here we will show you how to set global metadata and file metadata using separated metadata files. Take global metadata for example, you can set globalMetadataFiles in docfx.json or --globalMetadataFiles in build command line. The usage of fileMetadataFiles is the same as globalMetadataFiles . There're some metadata file examples: globalMetadata file example { \"_appTitle\": \"DocFX website\", \"_enableSearch\": \"true\" } fileMetadata file example { \"priority\": { \"**.md\": 2.5, \"spec/**.md\": 3 }, \"keywords\": { \"obj/docfx/**\": [\"API\", \"Reference\"], \"spec/**.md\": [\"Spec\", \"Conceptual\"] } } There're some examples about how to use separated metadata files. use globalMetadataFiles in docfx.json ... \"globalMetadataFiles\": [\"global1.json\", \"global2.json\"], ... use --globalMetadataFiles in build command line docfx build --globalMetadataFiles global1.json,global2.json use fileMetadataFiles in docfx.json ... \"fileMetadataFiles\": [\"file1.json\", \"file2.json\"], ... use --fileMetadataFiles in build command line docfx build --fileMetadataFiles file1.json,file2.json Note that, metadata set in command line will merge with metadata set in docfx.json . If same key for global metadata was set, the order to be overwritten would be(the later one will overwrite the former one): global metadata from docfx config file global metadata from global metadata files global metadata from command line If same file pattern for file metadata was set, the order to be overwritten would be(the later one will overwrite the former one): file metadata from docfx config file file metadata from file metadata files Given multiple metadata files, the behavior would be undetermined , if same key is set in these files. 3.2.4 Xref service url pattern Xref service url pattern will exact url by following steps: Replace environment variables. Syntax: {%variableName%} Process: load variable value from enviroment variables, replace the source content. Extract post pipelines. Syntax: |> pipelineName parameter1 parameter2 ... Process: load pipeline, and extract parameters, remove from url. Current pipeline only contains: removeHost , addQueryString , pluggable pipeline will be add later. Runtime replace variables. Syntax: {varName} Process: replace the source content to the value of variable (uri data encoded). e.g.: Environment variables: test = hello Available Pipeline: removeHost Variable: uid = testuid1 Url pattern: http://{%test%}.contoso.com/?uid={uid}|> removeHost It will run as following steps: Replace environment variables, http://hello.contoso.com/?uid={uid}|> removeHost . Extract post pipelines, http://hello.contoso.com/?uid={uid} , and append a post pipeline removeHost . Runtime replace variables, http://hello.contoso.com/?uid=testuid . Send request to http://hello.contoso.com/?uid=testuid , and get response from site. Run post pipeline removeHost . 3.2.5 SitemapOptions The SitemapOptions is to configure the values for generating sitemap.xml file. Property Name Type Description baseUrl string Specifies the base url for the website to be published. It MUST begin with the protocol (such as http) and end with a trailing slash. For example, https://dotnet.github.io/docfx/ . If the value is not specified, sitemap.xml will NOT be generated. lastmod DateTime Specifies the date of last modification of the file. If not specified, docfx automatically set the value to the time the file is built. changefreq enum Specifies the value of changefreq in sitemap.xml. Valid values are always , hourly , daily , weekly , monthly , yearly , never . If not specified, the default value is daily priority double Specifies the value of priority in sitemap.xml. Valid values between 0.0 and 1.0 . If not specified, the default value is 0.5 fileOptions SitemapOptions Optional. This property can be used when some specific files have different sitemap settings. It is a set of key-value pairs, where key is the glob pattern for input files, and value is the sitemap options. Order matters and the latter matching option overwrites the former ones. In the following sample settings, the yml files inside api folder are with priority 0.3 while Markdown files are with priority 0.8 and with a different baseUrl. Sample settings: \"build\": { \"sitemap\":{ \"baseUrl\": \"https://dotnet.github.io/docfx\", \"priority\": 0.1, \"changefreq\": \"monthly\", \"fileOptions\":{ \"**/api/**.yml\": { \"priority\": 0.3, \"lastmod\": \"2001-01-01\", }, \"**/GettingStarted.md\": { \"baseUrl\": \"https://dotnet.github.io/docfx/conceptual\", \"priority\": 0.8, \"changefreq\": \"daily\" } } } } Possible generated sitemap.xml: <?xml version=\"1.0\" encoding=\"utf-8\"?> <urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\"> <url> <loc>https://dotnet.github.io/docfx/api/System.String.html</loc> <lastmod>2001-01-01T00:00:00.00+08:00</lastmod> <changefreq>monthly</changefreq> <priority>0.3</priority> </url> <url> <loc>https://dotnet.github.io/docfx/conceptual/GettingStarted.html</loc> <lastmod>2017-09-21T10:00:00.00+08:00</lastmod> <changefreq>daily</changefreq> <priority>0.3</priority> </url> <url> <loc>https://dotnet.github.io/docfx/ReadMe.html</loc> <lastmod>2017-09-21T10:00:00.00+08:00</lastmod> <changefreq>monthly</changefreq> <priority>0.1</priority> </url> </urlset> 3.3 Properties for pdf pdf supports ALL the properties for build , besides that, the following table lists additional properties specified for pdf only. Key Description name Specifies the prefix of the generated PDF files, e.g. PDF generated from testproject\\toc.yml is named as {name}.pdf , testproject\\api\\toc.yml is named as {name}_api.pdf . If not specified, the value of name is the folder name testproject . generatesAppendices If specified, an appendices.pdf file is generated containing all the not-in-TOC articles. keepRawFiles If specified, the intermediate html files used to generate the PDF are not deleted after the PDF has been generated. wkhtmltopdf Contains additional options specific to wkhtmltopdf which is used internally to generate the PDF files. 3.3.1 Properties for the wkhtmltopdf Key Key Description additionalArguments Additional arguments that should be passed to the wkhtmltopdf executable. 4. Supported File Mapping Format There are several ways to define file mapping. 4.1 Array Format This form supports multiple file mappings, and also allows additional properties per mapping. Supported properties: Property Name Description files REQUIRED . The file or file array, glob pattern is supported. name Obsoleted , please use dest . exclude The files to be excluded, glob pattern is supported. cwd Obsoleted , please use src . src Specifies the source directory. If omitted, the directory of the config file will be used. Use this option when you want to refer to files in relative folders while want to keep folder structure. e.g. set src to .. . dest The folder name for the generated files. version Version name for the current file mapping. If not set, treat the current file-mapping item as in default version. Mappings with the same version name will be built together. Cross reference doesn't support cross different versions. caseSensitive TOBEIMPLEMENTED . Default value is false . If set to true , the glob pattern is case sensitive. e.g. *.txt will not match 1.TXT . For OS Windows, file path is case insensitive while for Linux/Unix, file path is case sensitive. This option offers user the flexibility to determine how to search files. supportBackslash TOBEIMPLEMENTED . Default value is true . If set to true , \\ will be considered as file path separator. Otherwise, \\ will be considered as normal character if escape is set to true and as escape character if escape is set to false . If escape is set to true , \\\\ should be used to represent file path separator. escape TOBEIMPLEMENTED . Default value is false . If set to true , \\ character is used as escape character, e.g. \\{\\}.txt will match {}.txt . \"key\": [ {\"files\": [\"file1\", \"file2\"], \"dest\": \"dest1\"}, {\"files\": \"file3\", \"dest\": \"dest2\"}, {\"files\": [\"file4\", \"file5\"], \"exclude\": [\"file5\"], \"src\": \"folder1\"}, {\"files\": \"Example.yml\", \"src\": \"v1.0\", \"dest\":\"v1.0/api\", \"version\": \"v1.0\"}, {\"files\": \"Example.yml\", \"src\": \"v2.0\", \"dest\":\"v2.0/api\", \"version\": \"v2.0\"} ] 4.2 Compact Format \"key\": [\"file1\", \"file2\"] 4.3 Glob Pattern DocFX uses Glob to support glob pattern in file path. It offers several options to determine how to parse the Glob pattern: caseSensitive : Default value is false . If set to true , the glob pattern is case sensitive. e.g. *.txt will not match 1.TXT . For OS Windows, file path is case insensitive while for Linux/Unix, file path is case sensitive. This option offers user the flexibility to determine how to search files. supportBackslash : Default value is true . If set to true , \\ will be considered as file path separator. Otherwise, \\ will be considered as normal character if escape is set to true and as escape character if escape is set to false . If escape is set to true , \\\\ should be used to represent file path separator. escape : Default value is false . If set to true , \\ character is used as escape character, e.g. \\{\\}.txt will match {}.txt . In general, the glob pattern contains the following rules: * matches any number of characters, but not / ? matches a single character, but not / ** matches any number of characters, including / , as long as it's the only thing in a path part {} allows for a comma-separated list of OR expressions SAMPLES 5. Q & A Do we support files outside current project folder(the folder when docfx.json exists)? A: YES. DO specify src and files outside of current folder will be copied to output folder keeping the same relative path to src . Do we support output folder outside current project folder(the folder when docfx.json exists)? A: YES. Do we support referencing files outside of current project folder(the folder when docfx.json exists)? A: NO. (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "tutorial/advanced_support_hyperlink.html": {
    "href": "tutorial/advanced_support_hyperlink.html",
    "title": "🔧 Advanced: Support Hyperlink | DocFX website",
    "keywords": "🔧 Advanced: Support Hyperlink In this topic, we will support hyperlinking in rtf files. Create a hyperlink in the rtf file: Open foo.rtf by Word . Add a hyperlink in content Set the link target to an existing bar.rtf Save the document. About link An author can write any valid hyperlink in the document, and then needs to run DocFX build to update file links. What is file link: The hyperlink must be a relative path and not rooted. valid: foo\\bar.rtf , ../foobar.rtf invalid: /foo.rtf , c:\\foo\\bar.rtf , http://foo.bar/ , mailto:foo@bar.foobar The file must exist. Why update file link: The story is: In foo.rtf , it has a file link to bar.rtf . In document build, bar.rtf generates a file with the name bar.html . But in foo.rtf , the link target is still bar.rtf , thus in the output folder we cannot find this file and we will get a broken link. To resolve the broken link, we need to update the link target from bar.rtf to bar.html . File link is a relative path, but we cannot track the relative path easily. So we track the normalized file path instead. What is a normalized file path : It always starts from the working folder (the folder that contains docfx.json ), and we write it as ~/ . No ../ or ./ or // Replace \\ with / . No url encoding. The path must be same as it in the file system. No anchor. Finally, a valid normalized file path looks like: ~/foo/bar.rtf . Pros Same form in different documents when the target is the same file. When file structure is: z:\\a\\b\\foo.rtf z:\\a\\b\\c\\bar.rtf z:\\a\\b\\c\\foobar.rtf Link target c/foobar.rtf in foo.rtf and link target foobar.rtf in bar.rtf is the same file. When the working folder is z:\\a\\ , the link target is always ~/b/c/foobar.rtf . Avoids differences in style when referring to the same file. For example, the following hyperlinks target the same file: a/foo.rtf , ./a/foo.rtf , a/b/../foo.rtf , a//foo.rtf , a\\foo.rtf Cons A folder with the name ~ is not supported. Prepare Open the rtf plug-in library project in Visual Studio . Add nuget packages: for plug-in: Microsoft.DocAsCode.Utility Add framework assembly reference: System.Core , System.Web , System.Xml.Linq Update rtf document processor Following the rules for hyperlink, add a FixLink help method: private static void FixLink(XAttribute link, RelativePath filePath, HashSet<string> linkToFiles) { string linkFile; string anchor = null; if (PathUtility.IsRelativePath(link.Value)) { var index = link.Value.IndexOf('#'); if (index == -1) { linkFile = link.Value; } else if (index == 0) { return; } else { linkFile = link.Value.Remove(index); anchor = link.Value.Substring(index); } var path = filePath + (RelativePath)linkFile; var file = (string)path.GetPathFromWorkingFolder(); link.Value = file + anchor; linkToFiles.Add(HttpUtility.UrlDecode(file)); } } RelativePath helps us generate the links correctly. Then add CollectLinksAndFixDocument method: private static HashSet<string> CollectLinksAndFixDocument(FileModel model) { string content = (string)((Dictionary<string, object>)model.Content)[\"conceptual\"]; var doc = XDocument.Parse(content); var links = from attr in doc.Descendants().Attributes() where \"href\".Equals(attr.Name.LocalName, StringComparison.OrdinalIgnoreCase) || \"src\".Equals(attr.Name.LocalName, StringComparison.OrdinalIgnoreCase) select attr; var path = (RelativePath)model.File; var linkToFiles = new HashSet<string>(); foreach (var link in links) { FixLink(link, path, linkToFiles); } using (var sw = new StringWriter()) { doc.Save(sw); ((Dictionary<string, object>)model.Content)[\"conceptual\"] = sw.ToString(); } return linkToFiles; } Modify Save method with report links: public SaveResult Save(FileModel model) { HashSet<string> linkToFiles = CollectLinksAndFixDocument(model); return new SaveResult { DocumentType = \"Conceptual\", ModelFile = model.File, LinkToFiles = linkToFiles.ToImmutableArray(), }; } <!-- todo : `Update Reference` is preserved for next version of plugin. --> View final RtfDocumentProcessor.cs Test and verify Build project. Copy dll to Plugins folder. Modify rtf file, create hyperlink, link to another rtf file, and save. Build with command DocFX build . Verify output html file. (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "templates-and-plugins/contribute-your-template.html": {
    "href": "templates-and-plugins/contribute-your-template.html",
    "title": "Add Your Template to the Dashboard | DocFX website",
    "keywords": "Add Your Template to the Dashboard Add your own template info to the templates section of YAML Header of templates-dashboard.yml , and it will be shown in the dashboard! (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "spec/triple_slash_comments_spec.html": {
    "href": "spec/triple_slash_comments_spec.html",
    "title": "Triple-slash (///) Code Comments Support | DocFX website",
    "keywords": "Triple-slash (///) Code Comments Support DocFX extracts triple-slash (///) code comments from .NET source code when running docfx metadata . Tags in triple-slash (///) code comments are converted to corresponding metadata in .NET data model. Note docfx supports DocFX Flavored Markdown syntax inside triple-slash (///) code comments. You can disable this feature by set shouldSkipMarkup when generating metadata: docfx metadata --shouldSkipMarkup . Supported tags Top level block tags Top level block tags are transformed to corresponding metadata in .NET data model. Tags Metadata name Type summary summary string remarks remarks string returns returns string value returns string exception exception List< ExceptionInfo > seealso seealso List< LinkInfo > see see List< LinkInfo > example example List<string> Non-toplevel tags Non-toplevel tags transformed to HTML tags in DocFX. Tags Transformed Description para <p></p> b <strong></strong> i em see[@langword] <xref></xref> langwordMapping.yml lists supported language keywords in DocFX . DocFX leverages cross reference to reference language keywords. You can disable default langword resolver and apply your customized one by calling docfx build --xref yourLangword.yml --noLangKeyword see[@href] <a></a> see[@cref] <xref></xref> paramref <span class=\"paramref\"></span> typeparamref <span class=\"typeparamref\"></span> list type=\"table\" <table></table> list type=\"bullet\" <ul></ul> list type=\"number\" <ol></ol> c <code></code> code <pre><code></code></pre> Custom tags inheritdoc docfx supports a subset of the inheritdoc functionality available in Sandcastle . Specifically, it implements most of the \"Top-Level Inheritance Rules\". It does not implement: Support for the cref or select attributes. Automatic inheritance of documentation for explicit interface implementations. Support for inline inheritdoc tags (i.e., an inheritdoc tag inside of an example tag). (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "spec/sdp_design_spec.html": {
    "href": "spec/sdp_design_spec.html",
    "title": "Schema-driven Document Processor(SDP) Design Spec | DocFX website",
    "keywords": "Schema-driven Document Processor(SDP) Design Spec 1. Overview DocFX supports different document processors to handle different kinds of input. With a new data model introduced in, a new document processor is required to support that model, even most of the code logic is the same for these processors. With this situation considered, a Schema-driven Document Processor (abbreviated to SDP below) is introduced to simplify the process. Togethor with a well defined DocFX Document Schema , SDP is able to validate and process a new data model with no extra effort needed. 2. Workflow The workflow for SDP is illustrated below. In general, the schema file, with suggested naming convention, has documentType in its name, as {documentType} .schema.json (When title is defined in the schema file, title is considered as the documentType for this schema). docfx loads the schema files from schemas subfolder in template folder, and creates processors for these schema files with per schema file per processor. With data models are processed, docfx applies templates for that documentType to these data model, as details illustrated in Template Introduction and generates output documentation. (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "spec/metadata_format_spec.html": {
    "href": "spec/metadata_format_spec.html",
    "title": "Doc-as-Code: Metadata Format Specification | DocFX website",
    "keywords": "Doc-as-Code: Metadata Format Specification 0. Introduction 0.1 Goals and Non-goals The goal of this document is to define a general format to describe language metadata for programming languages. The language metadata is designed to be language agnostic and support multiple programming language in a single metadata file. The main user scenario for language metadata is to generate reference documentation, so this document will discuss how to optimize metadata format for documentation rendering. This document does NOT discuss details of metadata format implementation of a specific programming language. 0.2 Terminology The key words MUST , MUST NOT , REQUIRED , SHALL , SHALL NOT , SHOULD , SHOULD NOT , RECOMMENDED , MAY , and OPTIONAL in this document are to be interpreted as described in RFC 2119 . Words in italic imply they are terms defined in an earlier section of this document. 1. Items and Identifiers 1.1 Items Item is the basic unit of metadata format. From documentation perspective, each item represents a \"section\" in the reference documentation. This \"section\" is the minimum unit that you can cross reference to, or customize in layout and content. When implementing the metadata format for your own language, you can decide which elements are items . For example, usually namespaces, classes, and methods are items . However, you can also make smaller elements such as parameters be items if you want them to be referenceable and customizable. Items can be hierarchical. One item can have other items as children . For example, in C#, namespaces and classes can have classes and/or methods as children . 1.2 Identifiers Each item has an identifier (ID) which is unique under its parent. As we're targeting to support multiple languages, there is no restrictions as to which characters are not allowed in identifiers. However, to make identifiers easier to recognize and resolve in Markdown, it's not RECOMMENDED to have whitespaces in identifiers. Markdown processor MAY implement some algorithm to tolerate whitespaces in handwritten Markdown. (Leading and trailing spaces MUST be removed from identifier.) Identifier MUST be treated as case-sensitive when comparing equality. Each item has a unique identifier (UID) which is globally unique. A UID is defined as follows: If an item does not have a parent , its UID is its ID . Otherwise, its UID is the combination of the UID of its parent , a separator and the ID of the item itself. Valid separators are . , : , / and \\ . For example, for a class String under namespace System , its ID is String and UID is System.String . Given the above definition, an item 's UID MUST starts with the UID of its parent (and any of its ancestors) and ends with the ID of itself. This is useful to quickly determine whether an item is under another item . 1.3 Alias Identifier could be very long, which makes it difficult to write by hand in Markdown. For example, it's easy to create a long ID in C# like this: Format(System.IFormatProvider,System.String,System.Object,System.Object) We can create short alias for items so that they can be referenced easily. Alias is same as ID , except: It doesn't have to be unique. One item can have multiple aliases . It's not RECOMMENDED to create an alias that has nothing to do with an item's ID . Usually an item 's alias is part of its ID so it's easy to recognize and memorize. For example, for the case above, we usually create an alias Format() . We can easily get a \"global\" alias for an item by replacing the ID part of its UID with its alias. 2. File Structure 2.1 File Format You can use any file format that can represent structural data to store metadata. However, we recommend using YAML or JSON . In this document, we use YAML in examples, but all YAML can be converted to JSON easily. 2.2 File Layout A metadata file consists of two parts: An \"item\" section and a \"reference\" section. Each section is a list of objects and each object is a key-value pair (hereafter referred to as \"property\") list that represents an item . 2.3 Item Section Though items can be hierarchical, they are flat in an item section. Instead, each item has a \"children\" property indicating its children and a \"parent\" property indicating its parent. An item object has some basic properties: Property Description uid REQUIRED . The unique identifier of the item . children OPTIONAL . A list of UIDs of the item 's children. Can be omitted if there are no children . parent OPTIONAL . The UID of the item 's parent. If omitted, metadata parser will try to figure out its parent from the children information of other items within the same file. Here is an example of a YAML format metadata file for C# Object class: items: - uid: System.Object parent: System children: - System.Object.Object() - System.Object.Equals(System.Object) - System.Object.Equals(System.Object,System.Object) - System.Object.Finalize() - System.Object.GetHashCode() - System.Object.GetType() - System.Object.MemberwiseClone() - System.Object.ReferenceEquals() - System.Object.ToString() - uid: System.Object.Object() parent: System.Object - uid: System.Object.Equals(System.Object) parent: System.Object - uid: System.Object.Equals(System.Object,System.Object) parent: System.Object - uid: System.Object.Finalize() parent: System.Object - uid: System.Object.GetHashCode() parent: System.Object - uid: System.Object.GetType() parent: System.Object - uid: System.Object.MemberwiseClone() parent: System.Object - uid: System.Object.ReferenceEquals() parent: System.Object - uid: System.Object.ToString() parent: System.Object references: ... Items SHOULD be organized based upon how they will display in documentation. For example, if you want all members of a class be displayed in a single page, put all members in a single metadata file. 2.3 Item Object In additional to the properties listed in last section, item object also has some OPTIONAL properties : Property Description id The identifier of the item . alias A list of aliases of the item . name The display name of the item . fullName The full display name of the item . In programming languages, it's usually the full qualified name. type The type of the item , such as class, method, etc. url If it's a relative URL, then it's another metadata file that defines the item . If it's an absolute URL, it means the item is coming from an external library, and the URL is the documentation page of this item . If omitted, the URL is the location of the current file. source The source code information of the item . It's an object that contains following properties : 1. repo: The remote Git repository of the source code. 2. branch: the branch of the source code. 3. revision: The Git revision of the source code. 4. path: the path to the source code file where the item is defined. 5. startLine: the start line of the item definition. 6. endLine: the end line of the item definition. Here is an example of a C# Dictionary class: - uid: System.Collections.Generic.Dictionary`2 id: Dictionary`2 alias: - Dictionary parent: System.Collections.Generic name: Dictionary<TKey, TValue> fullName: System.Collections.Generic.Dictionary<TKey, TValue> type: class url: System.Collections.Generic.Dictionary`2.yml source: repo: https://github.com/dotnet/netfx.git branch: master revision: 5ed47001acfb284a301260271f7d36d2bb014432 path: src/system/collections/generic/dictionary.cs startLine: 1 endLine: 100 2.4 Custom Properties Besides the predefined properties , item can have its own properties . One restriction is property name MUST NOT contains dots, as dot in property name will have special meaning (described in later section). 2.5 Reference Section Reference section also contains a list of items . These items serve as the references by items in item section and won't show up in documentation. Also, reference item doesn't need to have full properties , it just contains necessary information needed by its referrer (for example, name or URL). In metadata file, all items MUST be referenced by UID . It's RECOMMENDED to include all referenced items in reference section. This makes the file self-contained and easy to render at runtime. Many programming languages have the concept of \"template instantiation\". For example, in C#, you can create a new type List<int> from List<T> with argument int . You can create a reference for \"template instances\". For example, for a class inherited from List<int> : items: - uid: NumberList inherits: - System.Collections.Generic.List<System.Int32> references: - uid: System.Collections.Generic.List`1<System.Int32> link: @\"System.Collections.Generic.List`1\"<@\"System.Int32\"> - uid: System.Collections.Generic.List`1 name: List url: system.collections.generic.list`1.yml - uid: System.Int32 name: int url: system.int32.yml 2.6 Multiple Language Support An item may need to support multiple languages. For example, in .NET, a class can be used in C#, VB, managed C++ and F#. Different languages may have differences in properties . For example, a list of string is displayed as List<string> in C#, while List(Of string) in VB. To support this scenario, we introduce a concept of language context to allow defining different property values in different languages. If a property name is in the form of property_name.language_name , it defines the value of property_name under language_name . For example: - uid: System.Collections.Generic.Dictionary`2 name.csharp: Dictionary<TKey, TValue> name.vb: Dictionary(Of TKey, TValue) This means the name of dictionary is Dictionary<TKey, TValue> in C# and Dictionary(Of TKey, TValue) in VB. The following properties SHALL NOT be overridden in language context: uid, id, alias, children, and parent. 3. Work with Metadata in Markdown 3.1 YAML Metadata Section In a Markdown file, you can also define items using the same metadata syntax. The metadata definition MUST be in YAML format and enclosed by triple-dash lines ( --- ). Here is an example: --- uid: System.String summary: String class --- This is a **string** class. You can have multiple YAML sections inside a single Markdown file, but in a single YAML section, there MUST be only one item . The YAML metadata section does not have to contain all properties . The only property that MUST appear is \"uid\", which is used to match the same item in metadata file. The most common scenario for using YAML section is to specify which item the markdown doc belongs to. But you can also overwrite item property by defining one with the same name in YAML section. In the above example, the property \"summary\" will overwrite the same one in metadata. As with language context, the following properties SHALL NOT be overridden: uid, id, alias, children, and parent. You SHALL NOT define new item in Markdown. 3.2 Reference Items in Markdown To cross reference an item , you can use URI with xref scheme. You can either use standard link or automatic link with the above URI. For example, to cross reference System.String : [System.String](xref:System.String) <xref:System.String> Since item reference is a URI, special characters (like # , ? ) MUST be encoded . We also introduce a shorthand markdown syntax to cross reference easily: If a string starts with @ , and followed by a string enclosed by quotes ' or double quotes \" , it will be treated as an item reference. The string inside \"\" or '' is the UID of the item . Here is one example: @\"System.String\" Markdown processor MAY implement some algorithm to allow omit curly braces if ID is simple enough. For example, For reference like @\"int\" , we may also want to allow @int . When rendering references in Markdown, they will expand into a link with the item 's name as link title. You can also customize the link title using the standard syntax of Markdown: [Dictionary](xref:System.Collections.Generic.Dictionary`2)<[String](xref:System.String), [String](xref:System.String)> Will be rendered to: Dictionary < String , String > Besides UID , we also allow referencing items using ID and alias , in the Markdown processor, the below algorithm SHOULD be implemented to resolve references. Check whether the reference matches: Any identifier of current item 's children. Any alias of current item 's children. Any identifier of current item 's silbings. Any alias of current item 's silbings. A UID . A global alias . (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "spec/metadata_dotnet_spec.html": {
    "href": "spec/metadata_dotnet_spec.html",
    "title": "DocFx: Metadata Format for .NET Languages | DocFX website",
    "keywords": "DocFx: Metadata Format for .NET Languages 0. Introduction 0.1 Goal and Non-goals 0.2 Terminology 1. Items The following .NET elements are defined as items in metadata: Namespaces Types, including class, struct, interface, enum, delegate Type members, including field, property, method, event Other elements such as parameters and generic parameters are not standalone items , they're part of other items . 2. Identifiers 2.1 Unique Identifiers For any item in .NET languages, its UID is defined by concatenating its parent 's UID and its own ID with a dot. The ID for each kind of item is defined in following sections. The basic principle here is to make ID format close to source code and easy for human reading. UID is similar to the document comment id, which is started with type prefix, for example, T: , or M: , but UID do not. There MUST NOT be any whitespace between method name, parentheses, parameters, and commas. 2.2 Spec Identifiers Spec identifier is another form of UID . It can spec a generic type with type arguments (for example, for parameters, return types or inheritances) and these UID s are unique in one yaml file. It is a simple modified Unique Identifiers, when it contains generic type arguments, it will use {Name} instead `N . For type parameter, it will be {Name} . And it also supports array and pointer. Example 2.2 Spec Identifier C#: namespace Foo { public class Bar { public unsafe List<String> FooBar<TArg>(int[] arg1, byte* arg2, TArg arg3, List<TArg[]> arg4) { return null; } } } YAML: references: - uid: System.Collections.Generic.List{System.String} - uid: System.Int32[] - uid: System.Byte* - uid: {TArg} - uid: System.Collections.Generic.List{{TArg}[]} 3. Namespaces For all namespaces, they are flat, e.i. namespaces do not have the parent namespace. So for any namespace, ID is always same with its UID . Example 3 Namespace C#: namespace System.IO { } YAML: uid: System.IO id: System.IO name: System.IO fullName: System.IO The children of namespace are all the visible types in the namespace. 4. Types Types include classes, structs, interfaces, enums, and delegates. They have following properties: summary, remarks, syntax, namespace, assemblies, inheritance. The parents of types are namespaces. The children of types are members. ID ID for a type is also its name . Example 4 Type C#: namespace System { public class String {} public struct Boolean {} public interface IComparable {} public enum ConsoleColor {} public delegate void Action(); } YAML: - uid: System.String id: String name.csharp: String fullName.csharp: System.String - uid: System.Boolean id: Boolean name.csharp: Boolean fullName.csharp: System.String - uid: System.IComparable id: IComparable name.csharp: IComparable fullName.csharp: System.IComparable - uid: System.ConsoleColor id: ConsoleColor name.csharp: ConsoleColor fullName.csharp: System.ConsoleColor - uid: System.Action id: Action name.csharp: Action fullName.csharp: System.Action 4.1 ID for Nested Types For nested types, ID is defined by concatenating the ID of all its containing types and the ID of itself, separated by a dot. The parent type of a nested type is its containing namespace, rather than its containing type. Example 4.1 Nested type C#: namespace System { public class Environment { public enum SpecialFolder {} } } YAML: uid: System.Environment.SpecialFolder id: Environment.SpecialFolder name.csharp: Environment.SpecialFolder fullName.csharp: System.Environment.SpecialFolder 4.2 Inheritance Only class contains inheritance, and the inheritance is a list of spec id. Example 4.2 Inheritance C#: namespace System.Collections.Generic { public class KeyedByTypeCollection<TItem> : KeyedCollection<Type, TItem> { } } YAML: uid : System.Collections.Generic.KeyedByTypeCollection`1 inheritance: - System.Collections.ObjectModel.KeyedCollection{System.Type,{TItem}} - System.Collections.ObjectModel.Collection{{TItem}} - System.Object 4.3 Syntax The syntax part for type contains declaration, and descriptions of type parameters for different languages. For delegates, it also contains descriptions of parameters and a return type. 5. Members Members include fields, properties, methods, and events. They have the following properties: summary, remarks, exceptions, and syntax. The parents of members are types. Members never have children, and all parameter types or return types are spec id. 5.1 Constructors The ID of a constructor is defined by #ctor , followed by the list of the UIDs of its parameter types: When a constructor does not have parameter, its ID MUST NOT end with parentheses. The syntax part for constructors contains a special language declaration, and descriptions of parameters. Example 5.1 Constructor C#: namespace System { public sealed class String { public String(); public String(char[] chars); } } YAML: - uid: System.String.#ctor id: #ctor name.csharp: String() fullName.csharp: System.String.String() - uid: System.String.#ctor(System.Char[]) id: #ctor(System.Char[]) name.csharp: String(Char[]) fullName.csharp: System.String.String(System.Char[]) 5.2 Methods The ID of a method is defined by its name, followed by the list of the UIDs of its parameter types: method_name(param1,param2,...) When a method does not have parameter, its ID MUST end with parentheses. The syntax part for method contains a special language declaration, and descriptions of type parameters for generic method, descriptions of parameters and return type. Example 5.2 Method C#: namespace System { public sealed class String { public String ToString(); public String ToString(IFormatProvider provider); } } YAML: - uid: System.String.ToString id: ToString name.csharp: ToString() fullName.csharp: System.String.ToString() - uid: System.String.ToString(System.IFormatProvider) id: ToString(System.IFormatProvider) name.csharp: ToString(IFormatProvider) fullName.csharp: System.String.ToString(System.IFormatProvider) 5.2.1 Explicit Interface Implementation The ID of an explicit interface implementation (EII) member MUST be prefixed by the UID of the interface it implements and replace . to # . Example 2.6 Explicit interface implementation (EII) C#: namespace System { using System.Collections; public sealed class String : IEnumerable { IEnumerator IEnumerable.GetEnumerator(); } } YAML: - uid: \"System.String.System#Collections#IEnumerable#GetEnumerator\" id: \"System#Collections#IEnumerable#GetEnumerator\" name.csharp: IEnumerable.GetEnumerator() fullName.csharp: System.String.System.Collections.IEnumerable.GetEnumerator() 5.4 Operator Overloads The IDs of operator overloads are same with the metadata name (for example, op_Equality ). The names of operator overloads are similar to MSDN, just remove op_ from the metadata name of the method. For instance, the name of the equals ( == ) operator is Equality . Type conversion operator can be considered a special operator whose name is the UID of the target type, with one parameter of the source type. For example, an operator that converts from string to int should be Explicit(System.String to System.Int32) . The syntax part for methods contains a special language declaration, descriptions of parameters and return type. Example 5.4 Operator overload namespace System { public struct Decimal { public static implicit operator Decimal(Char value); } public sealed class String { public static bool operator ==(String a, String b); } } YAML: - uid: System.Decimal.op_Implicit(System.Char)~System.Decimal id: op_Implicit(System.Char)~System.Decimal name.csharp: Implicit(Char to Decimal) fullName.csharp: System.Decimal.Implicit(System.Char to System.Decimal) - uid: System.String.op_Equality(System.String,System.String) id: op_Equality(System.String,System.String) name.csharp: Equality(String,String) fullName.csharp: System.String.Equality(System.String,System.String) Please check overloadable operators for all overloadable operators. 5.5 Field, Property or Event The ID of field, property or event is its name. The syntax part for field contains a special language declaration and descriptions of field type. For property, it contains a special language declaration, descriptions of parameters, and return type. For event, it contains a special language declaration and descriptions of event handler type. Example 5.5 Field, Property and Event C#: namespace System { public sealed class String { public static readonly String Empty; public int Length { get; } } public static class Console { public static event ConsoleCancelEventHandler CancelKeyPress; } } YAML: - uid: System.String.Empty id: Empty name.csharp: Empty fullName.csharp: System.String.Empty - uid: System.String.Length id: Length name.csharp: Length fullName.csharp: System.String.Length - uid: System.Console.CancelKeyPress id: CancelKeyPress name.csharp: CancelKeyPress fullName.csharp: System.Console.CancelKeyPress 5.6 Indexer Indexer operator's name is metadata name, by default, it is Item , with brackets and parameters. Example 5.6 Indexer namespace System.Collections { public interface IList { object this[int index] { get; set; } } } YAML: - uid: \"System.Collections.IList.Item[System.Int32]\" id: \"Item[System.Int32]\" name.csharp: Item[Int32] fullName.csharp: System.Collections.IList.Item[System.Int32] 6. Generics The ID of a generic type is its name with followed by `n , n and the count of generic type count, which is the same as the rule for document comment ID. For example, Dictionary`2 . The ID of a generic method uses postfix ``n , n is the count of in method parameters, for example, System.Tuple.Create``1(``0) . Example 2.7 Generic namespace System { public static class Tuple { public static Tuple<T1> Create<T1>(T1 item1); public static Tuple<T1, T2> Create<T1, T2>(T1 item1, T2 item2); } } YAML: - uid: System.Tuple.Create``1(``0) id: Create``1(``0) name.csharp: Create<T1>(T1) fullName.csharp: System.Tuple.Create<T1>(T1) - uid: System.Tuple.Create``2(``0,``1) id: Create``2(``0,``1) name.csharp: Create<T1,T2>(T1,T2) fullName.csharp: System.Tuple.Create<T1,T2>(T1,T2) 7. Reference The reference contains the following members: name, fullName, summary, isExternal, href, and more. The UID in reference can be a Spec Id , then it contains one more member: spec. The spec in reference is very like a list of lightweight references, it describes how to compose the generic type in some special language. Example 7 spec for references YAML: references: - uid: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.Int32}} name.csharp: Dictionary<String, List<Int32>> fullName.csharp: System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<System.Int32>> spec.csharp: - uid: System.Collections.Generic.Dictionary`2 name: Dictionary fullName: System.Collections.Generic.Dictionary isExternal: true - name: < fullName: < - uid: System.String name: String fullName: System.String isExternal: true - name: ', ' fullName: ', ' - uid: System.Collections.Generic.List`1 name: List fullName: System.Collections.Generic.List isExternal: true - name: < fullName: < - uid: System.Int32 name: Int32 fullName: System.Int32 isExternal: true - name: '>' fullName: '>' - name: '>' fullName: '>' (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "spec/docfx_incremental.html": {
    "href": "spec/docfx_incremental.html",
    "title": "Doc-as-code: DocFx.exe Incremental Build Specification | DocFX website",
    "keywords": "Doc-as-code: DocFx.exe Incremental Build Specification This documentation describes the implementation of incrementally extracting metadata from source. Currently we are using Roslyn to compile and analyse source code on the fly. When input sources are large, it may take minutes to load and process the files. To speed up the extraction, previous extracted details are saved to cache for further reference. There are two level caches in current implementation. First one is called Application Level cache, and the other one is Project level cache. Application level cache is saved in file %LocalAppData%/xdoc/cache . For Project level cache, a. If input sources are supported project files, e.g. .csproj or .vbproj files, Project level cache is located in file obj/xdoc/.cache under the same folder of the project file. b. If input sources are supported source code files, e.g. .cs or .vb files, Project level cache is located in file obj/xdoc/.cache under the same folder of the alphabetically first source code file. The cache file contains key-value pairs saved in JSON format. The key is the normalized input source code files, and the data structure for the value is as below: Property Description TriggeredUTCTime The UTC time when the action is triggered CompletedUTCTime The UTC time when the action is completed OutputFolder The output folder for the extracted result RelativeOutputFiles The paths of the extracted results related to the OutputFolder CheckSum The MD5 checksum calculated for all the extracted results Detailed Steps are described below: For each input solution/project/source files, get most latest LastModifiedTime . a. For solution, get LastModifiedTime for the solution file, and containing projects b. For project, get LastModifiedTime for the project file, project references, assembly references and containing documents. c. For source files, get LastModifiedTime for the files Normalize project list, check if Application level cache for these project list exists. Compare TriggeredUTCTime with the LastModifiedTime fetched in #1, and check if checksum remains unchanged for output files. If is, copy result files to output folder. Otherwise, continue to #3. For each supported solution/project/source code files, Step 1 . Check if Project level cache exists. If not, go to Step 4 . Step 2 . Compare TriggeredUTCTime with the LastModifiedTime fetched in #1, and check if checksum remains unchanged for output files. If not, go to Step 3 . Step 3 . Generate YAML metadata for current project and save to Project level cache. Read YAML metadata for each project, and merge with others following rules below: Rule 1 . For namespace , if uid equals, append . Rule 2 . For other type, if uid equals, override . Save result, and update * Application level cache. (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "spec/docfx_flavored_markdown.html": {
    "href": "spec/docfx_flavored_markdown.html",
    "title": "DocFX Flavored Markdown | DocFX website",
    "keywords": "DocFX Flavored Markdown DocFX supports DocFX Flavored Markdown , aka DFM. It supports all GitHub Flavored Markdown syntax and compatible with CommonMark. Also, DFM adds new syntax to support additional functionalities, including cross reference and file inclusion. Note The default markdown engine generated by docfx init has been switched to markdig engine, which is built on the top of markdig . Previous markdown engine dfm and dfm-latest will be kept for compatibiilty. Yaml Header Yaml header in DFM is considered as the metadata for the Markdown file. It will transform to yamlheader tag when processed. Yaml header MUST be the first thing in the file and MUST take the form of valid YAML set between triple-dashed lines. Here is a basic example: --- uid: A.md title: A --- Cross Reference Cross reference allows you to link to another topic by using its unique identifier (called UID) instead of using its file path. For conceptual Markdown files UID can be defined by adding a uid metadata in YAML header: --- uid: uid_of_the_file --- This is a conceptual topic with `uid` specified. For reference topics, UIDs are auto generated from source code and can be found in generated YAML files. You can use one of the following syntax to cross reference a topic with UID defined: Markdown link: [link_text](xref:uid_of_the_topic) Auto link: <xref:uid_of_the_topic> Shorthand form: @\"uid_of_the_topic\" All will render to: <a href=\"url_of_the_topic\">link_text</a> If link_text is not specified, DocFX will extract the title from the target topic and use it as the link text. Note Hashtag in xref is always treated as separator between file name and anchor name. That means if you have # in UID, it has to be encoded to %23 . Actually xref format follows URI standard so all reserved characters should be encoded. For more information, see cross reference . File Inclusion DFM adds syntax to include other file parts into current file, the included file will also be considered as in DFM syntax. There are two types of file inclusion: Inline and block, as similar to inline code span and block code. Note YAML header is NOT supported when the file is an inclusion. Inline Inline file inclusion is in the following syntax, in which <title> stands for the title of the included file, and <filepath> stands for the file path of the included file. The file path can be either absolute or relative. <filepath> can be wrapped by ' or \" . Note For inline file inclusion, the file included will be considered as containing only inline tags, for example, ### header inside the file will not transfer since <h3> is a block tag, while [a](b) will transform to <a href='b'>a</a> since <a> is an inline tag. Also, ending white spaces will be trimmed , considering ending white spaces in inline inclusion in most cases are typos. ...Other inline contents... [!include[<title>](<filepath>)] Block Block file inclusion must be in a single line and with no prefix characters before the start [ . Content inside the included file will transform using DFM syntax. [!include[<title>](<filepath>)] Section definition User may need to define section. Mostly used for code table. Give an example below. > [!div class=\"tabbedCodeSnippets\" data-resources=\"OutlookServices.Calendar\"] > ```cs > <cs code text> > ``` > ```javascript > <js code text> > ``` The above blockquote Markdown text will transform to section html as in the following: <div class=\"tabbedCodeSnippets\" data-resources=\"OutlookServices.Calendar\"> <pre><code>cs code text</code></pre> <pre><code>js code text</code></pre> </div> Code Snippet Allows you to insert code with code language specified. The content of specified code path will expand. [!code-<language>[<name>](<codepath><queryoption><queryoptionvalue> \"<title>\")] <language> can be made up of any number of character and '-'. However, the recommended value should follow Highlight.js language names and aliases . <codepath> is the path relative to the file containing this markdown content in file system, which indicates the code snippet file that you want to expand. <queryoption> and <queryoptionvalue> are used together to retrieve part of the code snippet file in the line range or tag name way. We have 2 query string options to represent these two ways: query string using # query string using ? 1. line range #L{startlinenumber}-L{endlinenumber} ?start={startlinenumber}&end={endlinenumber} 2. tagname #{tagname} ?name={tagname} 3. multiple region range Unsupported ?range={rangequerystring} 4. highlight lines Unsupported ?highlight={rangequerystring} 5. dedent Unsupported ?dedent={dedentlength} In ? query string, the whole file will be included if none of the first three option is specified. If dedent isn't specified, the maximum common indent will be trimmed automatically. <title> can be omitted as it doesn't affect the DocFX markup result, but it can beautify the result of other Markdown engine, like GitHub Preview. Code Snippet Sample [!code-csharp[Main](Program.cs)] [!code[Main](Program.cs#L12-L16 \"This is source file\")] [!code-vb[Main](../Application/Program.vb#testsnippet \"This is source file\")] [!code[Main](index.xml?start=5&end=9)] [!code-javascript[Main](../jquery.js?name=testsnippet)] [!code[Main](index.xml?range=2,5-7,9-) \"This includes the lines 2, 5, 6, 7 and lines 9 to the last line\"] [!code[Main](index.xml?highlight=2,5-7,9-) \"This includes the whole file with lines 2,5-7,9- highlighted\"] Tag Name Representation in Code Snippet Source File DFM currently supports the following <language> values to be able to retrieve by tag name: C family Start with: // <{name}> End with: // </{name}> Languages: actionscript, arduino, assembly (alias: nasm), c (alias: cpp, c++, objective-c, obj-c, objc, objectivec), csharp (alias: cs), cshtml, cuda, d (alias: dlang), fsharp (alias: fs), go (alias: golang), java, javascript (alias: js, node), pascal, php, processing, rust, scala, smalltalk, swift, typescript (alias: ts) File extensions: .as, .asm, .ino, .c, .cc, .cpp, .cs, .cshtml .cu, .cuh, .d, .fs, .fsi, .fsx, .go, .h, .hpp, .java, .js, .pas, .php, .pde, .rs, .scala, .st, .swift, .ts Basic family Start with: ' <{name}> End with: ' </{name}> Languages: vb, vbhtml, vbnet, vbscript File extensions: .bas, .vb, .vba, .vbhtml, .vbs Markup language family Start with: <!-- <{name}> --> End with: <!-- </{name}> --> Languages: cshtml, html, vbhtml, wsdl, xml, xsl, xslt, xsd, xaml File extensions: .asp, .aspx, .csdl, .cshtml, .edmx, .jsp, .vbhtml, .wsdl, .xaml, .xml, .xsd, .xsl, .xslt, .html Sql family Start with: -- <{name}> End with: -- </{name}> Languages: sql File extensions: .sql Script family Start with: # <{name}> End with: # </{name}> Languages: perl, powershell (alias: posh), python, r, ruby (alias: ru), shell (alias: sh, bash) File extensions: .bash, .pl, .ps1, .py, .r, .ru, .ruby, .sh Special language batchfile Start with: rem <{name}> End with: rem </{name}> Languages: batchfile File extensions: .bat .cmd csharp Start with: #region {name} End with: #endregion Languages: csharp (alias: cs) File extensions: .cs .cshtml erlang Start with: % <{name}> End with: % </{name}> Languages: erlang File extensions: .erl haskell Start with: -- <{name}> End with: -- </{name}> Languages: haskell File extensions: .hs matlab Start with: % <{name}> End with: % </{name}> Languages: matlab File extensions: .matlab lisp Start with: ; <{name}> End with: ; </{name}> Languages: lisp File extensions: .lisp, .lsp lua Start with: -- <{name}> End with: -- </{name}> Languages: lua File extensions: .lua vb Start with: #Region {name} End with: #End Region Languages: vb (alias: vbnet) File extensions: .vb .vbhtml Note If dev-lang is not specified, file extension will be used to determine the language. Note (Warning/Tip/Important) Using specific syntax inside block quote to indicate the following content is Note. > [!NOTE] > <note content> > [!WARNING] > <warning content> The above content will be transformed to the following html: <div class=\"NOTE\"> <h5>NOTE</h5> <p>note content</p> </div> <div class=\"WARNING\"> <h5>WARNING</h5> <p>WARNING content</p> </div> Here are all the supported note types with the styling of the default theme applied: Note This is a note which needs your attention, but it's not super important. Tip This is a note which needs your attention, but it's not super important. Warning This is a warning containing some important message. Important This is a warning containing some important message. Caution This is a warning containing some important message. Tabbed content Syntax Start a tab by a special markdown title (any level). Title content should be a markdown link. Link target is #tab/{tabid} or #tab/{tabid}/{condition} Continue by any other content. End by a markdown hr. Example Tab group 1: # [Tab Text 1](#tab/tabid-1) Tab content-1-1. # [Tab Text 2](#tab/tabid-2) Tab content-2-1. *** Tab group 2: # [Tab Text A](#tab/tabid-a) Tab content-a-1. # [Tab Text B](#tab/tabid-b) Tab content-b-1. *** Tab group 3: # [Tab Text 1](#tab/tabid-1) Tab content-1-1. # [Tab Text 2](#tab/tabid-2) Tab content-2-1. *** Tab group 4: # [Tab Text A](#tab/tabid-a) Tab content-a-2. # [Tab Text B](#tab/tabid-b) Tab content-b-2. *** The result will be: Tab group 1: Tab Text 1 Tab Text 2 Tab content-1-1. Tab content-2-1. Tab group 2: Tab Text A Tab Text B Tab content-a-1. Tab content-b-1. Tab group 3: Tab Text 1 Tab Text 2 Tab content-1-1. Tab content-2-1. Tab group 4: Tab Text A Tab Text B Tab content-a-2. Tab content-b-2. Behavior Tab groups with a same set of id are linkable in one page. In example, tab group 1, 3 have same id set: tabid-1 , tabid-2 , tab group 2, 4 have same id set: tabid-a , tabid-b . So tab group 1, 3 are linked, tab group 2, 4 are linked. When tab tabid-1 in tab group 1 is clicked, tab tabid-1 in tab group 3 will be selected in same time. But tab group 2, 4 do not have any changed. Condition Condition is the tab id of other table groups. e.g.: Tab Group 1: # [**Tab Text 1**](#tab/tabid-1) Tab content-1. # [**Tab Text 2**](#tab/tabid-2) Tab content-2. *** Tab Group 2: # [Tab Text A](#tab/tabid-a/tabid-1) Tab content-a for 1. # [Tab Text A](#tab/tabid-a/tabid-2) Tab content-a for 2. # [Tab Text B](#tab/tabid-b/tabid-1) Tab content-b for 1. # [Tab Text B](#tab/tabid-b/tabid-2) Tab content-b for 2. *** Result: Tab Group 1: Tab Text 1 Tab Text 2 Tab content-1. Tab content-2. Tab Group 2: Tab Text A Tab Text A Tab Text B Tab Text B Tab content-a for 1. Tab content-a for 2. Tab content-b for 1. Tab content-b for 2. When select tabid-1 in tab group 1, you can get content-a or content-b for 1 in group 2. When select tabid-2 in tab group 1, you can get content-a or content-b for 2 in group 2. Differences introduced by DFM syntax Warning DFM introduces more syntax to support more functionalities. When GFM does not support them, preview the Markdown file inside GFM Preview can lead to different results. YAML header In GFM, YAML header must start at the very beginning of the Markdown file. In DFM, YAML header contains more powerful meanings. Refer to Yaml Header for details. ...some text... --- a: b --- In GFM, it would be rendered as <hr>a: b<hr> . In DFM, it would be rendered as a YAML header. If you want to get <hr> in html in DFM, use: - - - *** * * * or change content to make it not in YAML format: --- a\\: b --- Text after block extension Some block extension in DFM cannot be recognized in GFM. In GFM, it would be treated as a part of paragraph. Then, following content would be treated as a part of paragraph. For example: > [!NOTE] > This is code. In GFM, it will be rendered as a paragraph with content [!NOTE] This is code. in blockquote. In DFM, it will be rendered as a code in note. (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "spec/docfx_document_schema.html": {
    "href": "spec/docfx_document_schema.html",
    "title": "DocFX Document Schema v1.0 Specification | DocFX website",
    "keywords": "DocFX Document Schema v1.0 Specification 1. Introduction DocFX supports different document processors to handle different kinds of input. For now, if the data model changes a bit, a new document processor is needed, even most of the work in processors are the same. DocFX Document Schema (abbreviated to THIS schema below) is introduced to address this problem. This schema is a JSON media type for defining the structure of a DocFX document. This schema is intended to annotate , validate and interpret the document data. 2. Conventions and Terminology The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in RFC 2119 . 3. Overview DocFX Document Schema is in JSON format. It borrows most syntax from JSON Schema , while it also introduces some other syntax to manipulate the data. 3.1 Annotation THIS schema is a JSON based format for the structure of a DocFX document. 3.2 Validation JSON schema validation already defines many keywords. This schema starts from supporting limited keyword like type , properties . 3.3 Interpretation Besides annotate and validate the input document model, THIS schema also defines multiple interpretations for each property of the document model. For example, a property named summary contains value in Markdown format, THIS schema can define a markup interpretation for the summary property, so that the property can be marked using DFM syntax. 4. General Considerations THIS schema leverages JSON schema definition, that is to say, keywords defined in JSON schema keeps its meaning in THIS schema when it is supported by THIS schema . 5. Detailed Specification Format The files describing DocFX document model in accordance with the DocFX document schema specification are represented as JSON objects and conform to the JSON standards. YAML, being a superset of JSON, can be used as well to represent a DocFX document schema specification file. All field names in the specification are case sensitive . This schema exposes two types of fields. Fixed fields, which have a declared name, and Patterned fields, which declare a regex pattern for the field name. Patterned fields can have multiple occurrences as long as each has a unique name. By convention, the schema file is suffixed with .schema.json . Data Types Primitive data types in THIS schema are based on JSON schema Draft 6 4.2 Instance Schema For a given field, * as the starting character in Description cell stands for required . Schema Object This is the root document object for THIS schema . Fixed Field Field Name Type Description $schema string * The version of the schema specification, for example, https://github.com/dotnet/docfx/v1.0/schema# . version string * The version of current schema object. id string It is best practice to include an id property as an unique identifier for each schema. title string The title of current schema, LandingPage , for example. In DocFX, this value can be used to determine what kind of documents apply to this schema, If not specified, file name before schema.json of this schema is used. Note that . is not allowed. description string A short description of current schema. type string * The type of the root document model MUST be object . properties Property Definitions Object An object to hold the schema of all the properties. metadata string In json-pointer format as defined in http://json-schema.org/latest/json-schema-validation.html#rfc.section.8.3.9 . The format for JSON pointer is defined by https://tools.ietf.org/html/rfc6901 , referencing to the metadata object. Metadata object is the object to define the metadata for current document, and can be also set through globalMetadata or fileMetadata in DocFX. The default value for metadata is empty which stands for the root object. Patterned Field Field Name Type Description ^x- Any Allows extensions to THIS schema . The field name MUST begin with x-, for example, x-internal-id. The value can be null, a primitive, an array or an object. Property Definitions Object It is an object where each key is the name of a property and each value is a schema to describe that property. Patterned Field Field Name Type Description {name} Property Object The schema object for the {name} property Property Object An object to describe the schema of the value of the property. Fixed Field Field Name Type Description title string The title of the property. description string A lengthy explanation about the purpose of the data described by the schema. default what type defined The default value for current field. type string The type of the root document model. Refer to type keyword for detailed description. properties Property Definitions Object An object to hold the schema of all the properties if type for the model is object . Omitting this keyword has the same behavior as an empty object. items Property Object An object to hold the schema of the items if type for the model is array . Omitting this keyword has the same behavior as an empty schema. reference string Defines whether current property is a reference to the actual value of the property. Refer to reference for detailed explanation. contentType string Defines the content type of the property. Refer to contentType for detailed explanation. tags array Defines the tags of the property. Refer to tags for detailed explanation. mergeType string Defines how to merge the property. Omitting this keyword has the same behavior as merge . Refer to mergeType for detailed explanation. xrefProperties array Defines the properties of current object when it is cross referenced by others. Each item is the name of the property in the instance. Refer to xrefProperties for detailed description of how to leverage this property. Patterned Field Field Name Type Description ^x- Any Allows extensions to THIS schema . The field name MUST begin with x-, for example, x-internal-id. The value can be null, a primitive, an array or an object. 6. Keywords in detail 6.1 type Same as in JSON schema: http://json-schema.org/latest/json-schema-validation.html#rfc.section.6.25 The value of this keyword MUST be either a string or an array. If it is an array, elements of the array MUST be strings and MUST be unique. String values MUST be one of the six primitive types (\"null\", \"boolean\", \"object\", \"array\", \"number\", or \"string\"), or \"integer\" which matches any number with a zero fractional part. An instance validates if and only if the instance is in any of the sets listed for this keyword. 6.2 reference It defines whether current property is a reference to the actual value of the property. The values MUST be one of the following: Value Description none It means the property is not a reference. file It means current property stands for a file path that contains content to be included. 6.3 contentType It defines how applications interpret the property. If not defined, the behavior is similar to default value. The values MUST be one of the following: Value Description default It means that no interpretion will be done to the property. uid type MUST be string . With this value, the property name MUST be uid . It means the property defines a unique identifier inside current document model. href type MUST be string . It means the property defines a file link inside current document model. Application CAN help to validate if the linked file exists, and update the file link if the linked file changes its output path. xref type MUST be string . It means the property defines a UID link inside current document model. Application CAN help to validate if the linked UID exists, and resolve the UID link to the corresponding file output link. file type MUST be string . It means the property defines a file path inside current document model. Application CAN help to validate if the linked file exists, and resolve the path to the corresponding file output path. The difference between file and href is that href is always URL encoded while file is not. markdown type MUST be string . It means the property is in DocFX flavored Markdown syntax. Application CAN help to transform it into HTML format. 6.4 tags The value of this keyword MUST be an array , elements of the array MUST be strings and MUST be unique. It provides hints for applications to decide how to interpret the property, for example, localizable tag can help Localization team to interpret the property as localizable . 6.5 mergeType The value of this keyword MUST be a string. It specifies how to merge two values of the given property. One use scenario is how DocFX uses the overwrite files to overwrite the existing values. In the below table, we use source and target to stands for the two values for merging. The value MUST be one of the following: Value Description key If key for source equals to the one for target , these two values are ready to merge. merge The default behavior. For array , items in the list are merged by key for the item. For string or any value type, target replaces source . For object , merge each property along with its own merge value. replace target replaces source . ignore source is not allowed to be merged. 6.6 xrefProperties The value of this keyword MUST be an array of string . Each string value is the property name of current object that will be exported to be Cross Referenced by others. To leverage this feature, a new xref syntax with template attribute is support: <xref uid=\"{uid}\" template=\"{path_of_partial_template}\" /> For the parital template, the input model is the object containing properties xrefProperties defines. For example, in the sample schema defined by 7. Samples , \"xrefProperties\": [ \"title\", \"description\" ], , title and description are xrefProperties for uid webapp . A partial template to render this xref, for example, named partials/overview.tmpl , looks like: {{title}}: {{{description}}} When someone references this uid using <xref uid=\"webapp\" template=\"partials/overview.tmpl\" , docfx expand this xref into the following html: Web Apps Documentation: <p>This is description</p> In this way, users can not only cross reference others to get the target url, but also cross reference other properties as they like. A common usage of this is the Namespace page in ManagedReference. The Namespace page shows a table of its Classes with the summary of the Class , with the help of xrefProperties , the source of truth summary is always from Class . For the Namespace page, it can, for example: Define a class.tr.tmpl template: <tr><td>{{name}}</td><td>{{{summary}}}</td></tr> The namespace namespace.tmpl template, use xref to render its children classes: {{#children}} <xref uid=\"{{uid}}\" template=\"class.tr.tmpl\" /> {{/children}} 7. Samples Here's an sample of the schema. Assume we have the following YAML file: ### YamlMime:LandingPage title: Web Apps Documentation description: This is description uid: webapp metadata: title: Azure Web Apps Documentation - Tutorials, API Reference meta.description: Learn how to use App Service Web Apps to build and host websites and web applications. services: app-service author: apexprodleads manager: carolz ms.service: app-service ms.tgt_pltfrm: na ms.devlang: na ms.topic: landing-page ms.date: 01/23/2017 ms.author: carolz sections: - title: 5-Minute Quickstarts children: - text: .NET href: app-service-web-get-started-dotnet.md - text: Node.js href: app-service-web-get-started-nodejs.md - text: PHP href: app-service-web-get-started-php.md - text: Java href: app-service-web-get-started-java.md - text: Python href: app-service-web-get-started-python.md - text: HTML href: app-service-web-get-started-html.md - title: Step-by-Step Tutorials children: - content: \"Create an application using [.NET with Azure SQL DB](app-service-web-tutorial-dotnet-sqldatabase.md) or [Node.js with MongoDB](app-service-web-tutorial-nodejs-mongodb-app.md)\" - content: \"[Map an existing custom domain to your application](app-service-web-tutorial-custom-domain.md)\" - content: \"[Bind an existing SSL certificate to your application](app-service-web-tutorial-custom-SSL.md)\" In this sample, we want to use the JSON schema to describe the overall model structure. Further more, the href is a file link. It need to be resolved from the relative path to the final href. The content property need to be marked up as a Markdown string. The metadata need to be tagged for further custom operations. We want to use section 's title as the key for overwrite section array. Here's the schema to describe these operations: { \"$schema\": \"https://dotnet.github.io/docfx/schemas/v1.0/schema.json#\", \"version\": \"1.0.0\", \"id\": \"https://github.com/dotnet/docfx/schemas/landingpage.schema.json\", \"title\": \"LandingPage\", \"description\": \"The schema for landing page\", \"type\": \"object\", \"xrefProperties\": [ \"title\", \"description\" ], \"properties\": { \"metadata\": { \"type\": \"object\", \"tags\": [ \"metadata\" ] }, \"uid\": { \"type\": \"string\", \"contentType\": \"uid\" }, \"sections\": { \"type\": \"array\", \"items\": { \"type\": \"object\", \"properties\": { \"children\": { \"type\": \"array\", \"items\": { \"type\": \"object\", \"properties\": { \"href\": { \"type\": \"string\", \"contentType\": \"href\" }, \"text\": { \"type\": \"string\", \"tags\": [ \"localizable\" ] }, \"content\": { \"type\": \"string\", \"contentType\": \"markdown\" } } } }, \"title\": { \"type\": \"string\", \"mergeType\": \"key\" } } } }, \"title\": { \"type\": \"string\" } } } 8. Q & A DocFX fills _global metadata into the processed data model, should the schema reflect this behavior? Decision: NOT include, this schema is for input model , use another schema for output model. Is it necessary to prefix d- to every field that DocFX introduces in? If keep d- Pros: d- makes it straightforward that these keywords are introduced by DocFX Keywords DocFX introduces in will never duplicate with the one preserved by JSON schema Cons: d- prefix provides a hint that these keywords are not first class keywords Little chance that keywords DocFX defines duplicate with what JSON schema defines, after all, JSON schema defines a finite set of reserved keywords. For example Swagger spec is also based on JSON schema and the fields it introduces in has no prefix. Decision: Remove d- prefix. (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "spec/docfx_design_spec.html": {
    "href": "spec/docfx_design_spec.html",
    "title": "docfx Design Spec | DocFX website",
    "keywords": "docfx Design Spec 0. Terms Term Description DFM DocFX Flavored Markdown API The API generated from source code Overwrite Files The files with YAML header used to override YAML files when uid matches. 1. Scenarios docfx should support the following scenarios: Source Code => Website Conceptual => Website YAML files => Website <!--break list--> 2. Architecture 3. Feature List Support for DocFX Flavored Markdown Ability to parse TOC.json/TOC.yml/TOC.md Custom template naming: {type}.{extension}.tmpl under folder {templateName} 4. Open Issues Should we support other conceptual file format, for example, RST? ==> How to parse? How do you know which link to replace to html, and which not? ==> (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "spec/docfx_build_manifest_file.html": {
    "href": "spec/docfx_build_manifest_file.html",
    "title": "Data structure for manifest file generated by docfx build | DocFX website",
    "keywords": "Data structure for manifest file generated by docfx build After docfx build , docfx generates a manifest file in JSON format in the root output folder, listing some basic information about the set of files that docfx build handles. Before DocFX version 1.7, the manifest file is an Array of items. Then DocFX realizes that there are also global properties manifest file consumers care about, for example, the list of TOC files that DocFX processed. However, it is hard to add properties to an Array model. So since version 1.8, DocFX introduces a new Object model for the manifest file. For backward compatibility, in version 1.8, DocFX generates both Array model to-be-obsoleted and the new Object model. In version 1.9, manifest file in Array model is removed . In version 2.24, version is obsolete and group is used instead. Below table shows the difference between manifest file in Array model and manifest file in Object model. ---- File Name Data Model Old Array Model .manifest Array model New Object Model manifest.json Object model The obsoleted Array model Array model contains a list of Manifest Item s. The new Object model Current supported properties for the Object model is listed as below: Property Type Description source_base_path string the directory path which contains docfx.json files List< ManifestItem > contains the information of all the output files. ( doesn't include templates and themes ) incremental_info List< IncrementalInfo > contains incremental infomation. groups List< ManifestGroupInfo > contains information of groups. sitemap object contains options for generating site map for post processor use xrefmap object deprecated, use xrefmap in groups version_info List<VersionInfo> deprecated, use groups homepages List<string> deprecated ManifestItem Property Type Description type string The documentType is generated by plugins or specified to each file using Yaml Header . Currently by default DocFX generates following document type s: ManagedReference , Conceptual , RestApi , Resource , Toc . source_relative_path string the input file path, relative to docfx.json output Dictionary<string, OutputFileInfo > For each output file, the key is the extension of the transformed file, the extension is determined by the template it applies to. is_incremental bool indicates whether this file is incremtal or rebuilt this time version string deprecated, use group group string the group the current item belongs to log_codes List the codes logged when building the current item OutputFileInfo Property Type Description relative_path string the logical output file path relative to output root. If it doesn't exist physically, it can be found through link_to_path link_to_path string the physical output file path hash string tha hash of the output file content IncrementalInfo Property Type Description status IncrementalStatus current build's overall incremental information processors Dictionary<string, IncrementalStatus > incremental information of each processor. Key is the name of the processor. IncrementalStatus Property Type Description can_incremental bool indicates whenther current build supports incremental build details string detailed explanation of the build status incrementalPhase string the phase of the status, can be Build or PostProcessing ManifestGroupInfo Property Type Description name string group name ( default group hasn't this property ) dest string group output folder, relative to the root output folder ( default group hasn't this property ) xrefmap string group xrefmap's path in output folder (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "guideline/engineering_guidelines.html": {
    "href": "guideline/engineering_guidelines.html",
    "title": "Engineering Guidelines | DocFX website",
    "keywords": "Engineering Guidelines Basics Copyright header and license notice All source code files require the following exact header according to its language (please do not make any changes to it). extension: .cs // Copyright (c) Microsoft. All rights reserved. // Licensed under the MIT license. See LICENSE file in the project root for full license information. extension: .js // Copyright (c) Microsoft. All rights reserved. Licensed under the MIT license. See LICENSE file in the project root for full license information. extension: .css /* Copyright (c) Microsoft Corporation. All Rights Reserved. Licensed under the MIT License. See License.txt in the project root for license information. */ extension: .tmpl , .tmpl.partial {{!Copyright (c) Microsoft. All rights reserved. Licensed under the MIT license. See LICENSE file in the project root for full license information.}} External dependencies This refers to dependencies on projects (that is, NuGet packages) outside of the docfx repo, and especially outside of Microsoft. Adding new dependencies requires additional approval. Current approved dependencies are: Newtonsoft.Json Jint HtmlAgilityPack Nustache YamlDotNet Code reviews and checkins To help ensure that only the highest quality code makes its way into the project, please submit all your code changes to GitHub as PRs. This includes runtime code changes, unit test updates, and deployment scripts. For example, sending a PR for just an update to a unit test might seem like a waste of time but the unit tests are just as important as the product code. As such, reviewing changes to unit tests is just as important. The advantages are numerous: Improving code quality; increasing visibility on changes and their potential impact; avoiding duplication of effort; and creating general awareness of progress being made in various areas. In general a PR should be signed off(using the 👍 emoticon) by the owner of that code. To commit the PR to the repo, do not use the Big Green Button . Instead, do a typical push that you would use with Git (for example, local pull, rebase, merge or push). Source Code Management Branch strategy In general: master has the code for the latest release on NuGet.org. (e.g. 1.0.0 , 1.1.0 ) dev has the code that is being worked on but that we have not yet released. This is the branch into which developers normally submit pull requests and merge changes into. We run daily CI towards dev branch and generate pre-release nuget package, e.g. 1.0.1-alpha-9-abcdefsd . Solution and project folder structure and naming Solution files go in the repo root. The default entry point is All.sln . Every project also needs a project.json and a matching .xproj file. This project.json is the source of truth for a project's dependencies and configuration options. The solution needs to contain solution folders that match the physical folder ( src , test , tools , etc.). Assembly naming pattern The general naming pattern is Microsoft.DocAsCode.<area>.<subarea> . Unit tests We use xUnit.net for all unit testing. Coding Standards Please refer to C# Coding standards for detailed guideline for C# coding standards. TODO Template Coding standards TODO Template Preprocess JS Coding standards (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "guideline/csharp_coding_standards.html": {
    "href": "guideline/csharp_coding_standards.html",
    "title": "C# Coding Standards | DocFX website",
    "keywords": "C# Coding Standards Introduction The C# Coding Standards will be used in conjunction with customized versions of StyleCop and FxCop [ TODO ] during both development and build process. This will help ensure that all developers on the team are in a consistent manner. \"Any fool can write code that a computer can understand. Good programmers write code that humans understand\". Martin Fowler. Refactoring: Improving the design of existing code. Purpose This section defines a set of C# coding standards to be used by the DocFX build team to guarantee maximum legibility, reliability, re-usability and homogeneity of our code. Each section is marked Mandatory or Recommended . Mandatory sections will be enforced during code reviews as well as tools like StyleCop and FxCop , and code will not be considered complete until it is compliant. Scope This section contains general C# coding standards that can be applied to any type of application developed in C#, based upon Framework Design Guidelines . This section is not intended to be a tutorial on C#. Instead, it includes a set of limitations and recommendations focused on clarifying the development. Tools ReSharper is a useful third-party code cleanup and style tool. StyleCop analyzes C# source code to enforce a set of style and consistency rules and has been integrated into many third-party development tools such as ReSharper. FxCop is an application that analyzes managed code assemblies (code that targets the .NET Framework common language runtime) and reports information about the assemblies, such as possible design, localization, performance, and security improvements. Highlights of Coding Standards This section is not intended to give a summary of all the coding standards enabled by our customized StyleCop, but to give a highlight of some rules one will possibly meet in daily coding life. It also provides some coding standards that are recommended but not mandatory (that is, not enabled by StyleCop). File Layout (Recommended) Only one public class is allowed per file. The file name derives from the class name. Class : Observer Filename: Observer.cs Class Definition Order (Mandatory) The class definition contains class members in the following order, from less restricted scope (public) to more restrictive (private): Field members (for example, member variables, const, etc.) Member functions Constructors Finalizer (Do not use unless absolutely necessary) Methods (Properties, Events, Operations, Overridables and Static) Private nested types Naming (Mandatory) DO use plural form for namespaces DO use PascalCasing for all public member, type, and namespace names consisting of multiple words. PropertyDescriptor HtmlTag IOStream Note A special case is made for two-letter acronyms in which both letters are capitalized, e.g. IOStream DO use camelCasing for parameter names. propertyDescriptor htmlTag ioStream DO start with underscore for private fields: private readonly Guid _userId = Guid.NewGuid(); DO start static readonly field and constant names with capitalized case private static readonly IEntityAccessor EntityAccessor = null; private const string MetadataName = \"MetadataName\"; DO NOT capitalize each word in so-called closed-form compound words . DO use Async suffix in the asynchronous method names to notice people how to use it properly public async Task<string> LoadContentAsync() { ... } Formatting (Mandatory) DO use spaces over tabs, and always show all spaces/tabs in IDE Tips Visual Studio > Tools > Options... > Text Editor > C# > Tabs > Insert spaces (Tab size: 4) Visual Studio > Edit > Advanced > View White Space (Ctrl+R, Ctrl+W) DO add using inside namespace declaration namespace Microsoft.Content.Build.BuildWorker.UnitTest { using System; } DO add a space when: for (var i = 0; i < 1; i++) if (a == b) Performace Consideration DO use sealed for private classes if they are not to be inherited. DO add readonly to fields if they do not tend to be changed. DO use static methods if it is not instance relevant. DO use RegexOptions.Compiled for readonly Regex . Cross-platform coding Our code can and should support multiple operating systems in addition to Windows. Code should be sensitvie to the differences between Operating Systems. Here are some specifics to consider: DO use Enviroment.NewLine instead of hard-coding the line break, as Windows uses \\r\\n and OSX/Linux uses \\n . Note Be aware that these line-endings may cause problems in code when using @\"\" text blocks with line breaks, e.g.: var x = @\"line1 line2\"; DO use Path.Combine() or Path.DirectorySeparatorChar to separate directories. If this is not possible (such as in scripting), use a forward slash / . Windows is more forgiving than Linux in this regard. Unit tests and functional tests Assembly naming The unit tests for the Microsoft.Foo assembly live in the Microsoft.Foo.Tests assembly. The functional tests for the Microsoft.Foo assembly live in the Microsoft.Foo.FunctionalTests assembly. In general there should be exactly one unit tests assembly for each product runtime assembly. In general there should be one functional tests assembly per repo. Exceptions can be made for both. Unit test class naming Test class names end with Test suffix and live in the same namespace as the class being tested. For example, the unit tests for the Microsoft.Foo.Boo class would be in a Microsoft.Foo.BooTest class in the unit tests assembly Microsoft.Foo.Tests . Unit test method naming Unit test method names must be descriptive about what developers are testing, under what conditions, and what the expectations are . Pascal casing and underscores can be used to improve readability. The following test names are correct: PublicApiArgumentsShouldHaveNotNullAnnotation Public_api_arguments_should_have_not_null_annotation The following test names are incorrect: Test1 Constructor FormatString GetData Unit test structure The contents of every unit test should be split into three distinct stages (arrange, act and assert), optionally separated by these comments: // Arrange // Act // Assert The crucial thing here is the Act stage is exactly one statement. That one statement calls only the one method that you are trying to test. Keeping that one statement as simple as possible is also very important. For example, this is not ideal: int result = myObj.CallSomeMethod(GetComplexParam1(), GetComplexParam2(), GetComplexParam3()); This style is not recommended because too much can go wrong in this one statement. All the GetComplexParamN() calls can throw exceptions for a variety of reasons unrelated to the test itself. It is thus unclear to someone running into a problem why the failure occurred. The ideal pattern is to move the complex parameter building into the Arrange section: // Arrange P1 p1 = GetComplexParam1(); P2 p2 = GetComplexParam2(); P3 p3 = GetComplexParam3(); // Act int result = myObj.CallSomeMethod(p1, p2, p3); // Assert Assert.AreEqual(1234, result); Now the only reason the line with CallSomeMethod() can fail is if the method itself throws an error. Testing exception messages Testing the specific exception message in a unit test is important. This ensures that the desired exception is being tested rather than a different exception of the same type. In order to verify the exact exception, it is important to verify the message. // Act var ex = Assert.Throws<InvalidOperationException>(() => fruitBasket.GetBananaById(-1)); // Assert Assert.Equal(\"Cannot load banana with negative identifier.\", ex.Message); Use xUnit.net's plethora of built-in assertions xUnit.net includes many kinds of assertions – please use the most appropriate one for your test. This makes the tests much more readable and also allows the test runner to report the best possible errors (whether it's local or the CI machine). For example, these are bad: Assert.Equal(true, someBool); Assert.True(\"abc123\" == someString); Assert.True(list1.Length == list2.Length); for (int i = 0; i < list1.Length; i++) { Assert.True( String.Equals( list1[i], list2[i], StringComparison.OrdinalIgnoreCase)); } These are good: Assert.True(someBool); Assert.Equal(\"abc123\", someString); // built-in collection assertions! Assert.Equal(list1, list2, StringComparer.OrdinalIgnoreCase); Parallel tests By default all unit test assemblies should run in parallel mode, which is the default. Unit tests shouldn't depend on any shared state, and so should generally be runnable in parallel. If tests fail in parallel, the first thing to do is to figure out why; do not just disable parallel testing! For functional tests, you can disable parallel tests. (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "README.html": {
    "href": "README.html",
    "title": "| DocFX website",
    "keywords": "Documentation project uses docfx.console nuget package to generate documentation for docfx project, along with conceputal files, with docfx.json to provide configuration for docfx . (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "install.html": {
    "href": "install.html",
    "title": "Thanks for installing DocFX! | DocFX website",
    "keywords": ""
  },
  "index.html": {
    "href": "index.html",
    "title": "Welcome to DocFX website! | DocFX website",
    "keywords": ""
  },
  "RELEASENOTE.html": {
    "href": "RELEASENOTE.html",
    "title": "Version Notes (Current Version: v2.40) | DocFX website",
    "keywords": "Version Notes (Current Version: v2.40) v2.40 Upgrade Markdig to 0.15.4 v2.39.2 Fix ArgumentNullException error when extracting metadata from DLL. (#3374) v2.39.1 Update Nuget package config. Fix Chocolatey package download error. (#3349) v2.39 Support warnings as errors by --warningsAsErrors true . (#3229) Support for value tuples in documentation. (#2512 #3211) Upgrade to net462 and support long path. (#3183) Upgrade Microsoft.Build to work with VS 15.8. (#3158 #3225 #3231) v2.38.1 Bug fix: Fix yamlheader in inline inclusion (#3203) v2.38 Support --disableDefaultFilter to disable default API visibility filter rule. (#2561) Improve warning message for invalid link in TOC inclusion (#3106) Support dropdowns in top navigation bar. (#3168) v2.37.2 Bug fix: Refine regex for tables and add timeout (#3118) v2.37.1 Defaults to TLS 1.2 when query from xref service and download xref map. Bug fix: Fix FSharp project loading. (#2960) v2.37 v2.36.2 Bug fix: Improve download command error message. (#2805) Fix code indent issue. (#2830) Fix error when generating metadata. (#2852) v2.36.1 Bug fix: Fix .targets file. (#2804) Fix missing publish Microsoft.DocAsCode.Metadata.ManagedReference.FSharp NuGet package. (#2779) v2.36 Allow setting the base path for code sources. (#2131) Bug fix: Fix API filter for attribute. (#2451) Fix error when attribute has null value. (#2539) Fix Markdown when link contains space. (#2681) Fix XML comment merge not preserving inheritdoc metadata. Fix page error under Internet Explorer 11 (#2741) Disable building document when live unit testing. v2.35.3 Bug fix: Tabbed content always enables second tab. (#2706) v2.35.1 Bug fix: codesnippet tagname is not recognized when the tag starts with \\t in Markdig. v2.35 Bug fix: Fix Tabbed Content rendering bug. (#2645) Fix script error in getHierarch. (#2624) Fix loading csproj NullObjectReferenceException. (#1944) Fix affix \"active\" class issue. (#2658) v2.34 Bug fix: Fix error with enum flags in attributes. (#2573) Improve syntax formatting when containing where keyword. (#2410) Fix XML syntax highlighting issue. (#2553) v2.33.2 support more languages for markdig (#2574) MonikerRange infinite loop bug (#2572) v2.33.1 Enable emoji in markdig Decode href in FileLinkInfo v2.33 Support generating API reference for TypeScript (#2220) Bug fix: XRefService lookup of generic classes doesn't work (#2448) Fix yaml serialize for string '~' (#2519) Fix link bug after <a/> in markdown (#2521) Fix VSTS's git url under detached HEAD (#2516) v2.32.2 Bug fixes: Fix metadata broken with mono and linux (#2358). Partially fix metadata broken with latest VS 15.6 with workaround: set VSINSTALLDIR=C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise set VisualStudioVersion=15.0 set MSBuildExtensionsPath=C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\15.0\\Bin v2.32 Support remove special host name from xref service. Bug fixes: Fix empty code block in markdown(dfm, dfm-latest). v2.31 Upgrade Roslyn's CodeAnalysis assemblies to latest 2.6.1 Bug fixes: Fix bug for missing seealso section in enum pages (#2402) Fix bug for supporting in keyword which is introduced in by C# 7.2 (#2385) Fix runtime error when EII name hits VB preserved keywords (#2379) Fix docfx.console so that it can support the new netstandard csproj format (#2142) v2.30 Improve DFM performance for em rule (#2339) v2.29 Support generating API reference for JavaScript (#2220) Bug fixes: Fix bug for query xref service (#2283) v2.28.3 Fix toc race condition and improve perf v2.28.2 Bug fixes: Fix issues running under mono (#2262, #1856) Fix VS17 15.5 support (#2265) v2.28.1 Bug fixes: Fix .NET core .csproj files support (#1752) v2.28 Add warning throttling. (#2187) Enable schema validation for SDP. Bug fixes: Fix markdown link behavior. (#2181) Fix xref map sorted comparer. (#2191) Fix yaml deserialize for int64. (#2193) Fix xref query filter. (#2195) Fix docfx metadata failure after VS2017 Update 15.3. (#1969) Provide MetadataOutputFolder MSBuild parameter with docfx.console . (#2194) v2.27 Improve code snippet, add cs snippet for cshtml, add vb snippet for vbhtml. v2.26 New feature: Support new syntax in Markdown: tabbed content # [Csharp](#tab/csharp) ```cs Console.WriteLine(\"Hello world\"); ``` # [JavaScript](#tab/js) ```js console.log('hello world'); ``` Renders to: Csharp JavaScript Console.WriteLine(\"Hello world\"); console.log('hello world'); Fix bugs: Update DFM XREF short format. Update Markdown EM rule. v2.25.2 Fix post-processor incremental bug that incremental post-processor is always disabled v2.25.1 Disable schema validation in schema-driven document processor temporarily. Disable loading overwrite documents in schema-driven document processor temporarily. v2.25 Use wbr instead of zero width space Remove warning invalid file link when customized href generator can resolve it. Support generating sitemap with at least \"sitemap\": { \"baseUrl\": \"https://yourwebsite.com/\" } defined in \"build\" section of docfx.json ( https://github.com/dotnet/docfx/issues/1979 ) Support responsive table: https://github.com/dotnet/docfx/issues/2024 Bug fixed: Multithreads issue for reading xref zip file. 404 issue for generated site. https://github.com/dotnet/docfx/issues/1858 v2.24 Log warning for manage reference yaml file without yaml mime. Obsolete external reference. Please use xref instead. Add xref query client. Upgrade Roslyn's CodeAnalysis assemblies to latest 2.3.1 Schema-driven document processor related support metadata keyword support all the functionalities defined in the spec Advanced xref syntax support: <xref uid=\"System.String\" template=\"partials/layout_section.tmpl\"> Support global metadata and file metadata for TOC files Add class level implements to default template. https://github.com/dotnet/docfx/issues/1223 Obsolete version and use group instead. Bug fixed: Fix #1982: c# 7.1 feature default is not correctly handled v2.23 Improve error message for invalid toc yaml file. Use xhtml for dfm default setting. Add language support for aspx-cs and aspx-vb in code snippet. Bug fixed: Fix #1825: ArgumentNullException when EII implements a member with EditorBrowsableState.Never. Fix #1937: Anchor icon overlays Note icon. Fix #1951, #1905: Running DocFX from outside the folder fails Fix #1915: Cannot generate docs of two assemblies Fix #1900: Add back Microsoft.CodeAnalysis.Csharp.Features.dll dependency v2.22 Support REST extensibility by rest.tagpage and rest.operationpage plugins, to split the original REST API page into smaller pages. Refer to plugins dashboard for more details. Bug fixed: Fix _rel unfound when href is url decoded. Fix #1886: Fails when project doesn't contain git remote information. Fix toc restruction to support expand child by sequence. Ignore default plugged assemblies when loading plugins. v2.20 Add anchor links to default theme. Disable LRU cache as it has race condition bug and not easy to fix. PDF improvements: Intermediate html files are now removed by default, you can use --keepRawFiles option to keep them. Add syntax highlight to PDF, it is using highlight.js in client-side js. Add hook files to css and js, you can now customize PDF styles by adding your own main.css and main.js . Change the default behavior of incremental build that it is always based on the same cache folder (originally the cache folder changes in every build and copy historical files form last cache folder). You can use --cleanupCacheHistory option to cleanup the historical cache data. Bug fixes: Fix #1817: Error extracting metadata when containing constant surrogate unicode character. Fix #1655: Using hashtag in external cross reference broken. Fix #219: Fails when source code contains two type names that differ only in case Fix #164: Clean up previous auto-generated metadata YAML files when calling docfx metadata Fix #1797: the command docfx template list does not show the pdf template Fix #1803: Overriding example with *content in same file as other overrides doesn't work Fix #1807: XREF link to API doc with wildcard UID not getting generated Fix #1823: Metadata being generated from referenced projects FIx #1824: Change generated .manifest file to be indented and ordered. v2.19 Enable incremental Build by default. You can use option --force to force rebuild. Improve docfx metadata error message when error opening solutions or projects using Roslyn. https://github.com/dotnet/docfx/pull/1738 Support more develop language for code snippet Markdown syntax. https://github.com/dotnet/docfx/pull/1754 Downgrade the message level for invalid inline code snippet and invalid block file inclusion from Error to Warning . Add LogCode for each file to the manifest file. DocFX is NOT dependent on Build Tool 2015 anymore. Add line and source file info for invalid cross reference Bug fixes: Fix html pre element behavior in Markdown, empty lines are now allowed in <pre> blocks. Fix #1747: add app.config redirect binding to docfx to resolve LoaderException for docfx metadata Fix #1737: it is now possible to use > [!warning] format in triple-slash comments Fix #1319 that docfx fails to load multiple solutions Fix #1720 and #1708 that docfx throws runtime error in Mono Fix post processor incremental bug: restore manifest should be case-insensitive v2.18.2 PDF is now supported. Refer to Walkthrough: Generate PDF to get start with generating PDF files. Fix default template performance bug that local search is always used. v2.18.1 Bug fixes: Bug fix for markdown empty link. Bug fix for html behaivor in dfm-latest. v2.17.5 Fix Egde crashes with web worker. https://github.com/dotnet/docfx/issues/1414 v2.17.4 Bug fix for default template that inheritance is incorrect. v2.17.3 Bug fix for extracting metadata from assembly that XML comment is not applied. v2.17.2 Bug fix for template statictoc. v2.17.1 Bug fix for fail to init markdown style. v2.17 Introduce Master page syntax into Template System: Mustache: {{!master('<master_page_name>')}} Liquid: {% master <master_page_name> %} [ Breaking Change ] View model for ManagedReference.html.primary.tmpl is updated from {item: model} to model , if you overwrites ManagedReference.html.primary.tmpl in your own template, make sure to re-export the template file. Simplify default template: now you only need to overwrite _master.tmpl to redesign the layout for the website. Frontend improvement Long namespace name in TOC will be word-wrapped now Bug fix for docfx.js when navbarPath or tocPath is empty. v2.16.8 Bug fixes: Bug fix for Null exception when <xref href=''/> exists Bug fix for docfx metadata for assemblies, to exclude null assembly symbols. Bug fix for toc: When b/toc.md is included by toc.md, invalid link in b/toc.md should be resolved to the path relative to toc.md v2.16 Support the latest csproj format <Project Sdk=\"Microsoft.NET.Sdk\"> The latest csproj introduces in a new property TargetFrameworks , docfx does not support it for now. To make docfx work, please specify TargetFramework when calling docfx. A sample docfx.json would be as follows. The merge command is to merge YAML files generated with different TargetFramework into one YAML file. { \"metadata\": [ { \"src\": \"*.csproj\", \"dest\": \"temp/api/netstandard1.4\", \"properties\": { \"TargetFramework\": \"netstandard1.4\" } }, { \"src\": \"*.csproj\", \"dest\": \"temp/api/net46\", \"properties\": { \"TargetFramework\": \"net46\" } } ], \"merge\": { \"content\": [ { \"files\": \"*.yml\", \"src\": \"temp/api/netstandard1.4\" }, { \"files\": \"*.yml\", \"src\": \"temp/api/net46\" } ], \"fileMetadata\": { \"platform\": { \"temp/api/netstandard1.4/*.yml\": [ \"netstandard1.4\" ], \"temp/api/net46/*.yml\": [ \"net46\" ] } }, \"dest\": \"api\" }, \"build\": { \"content\": [ { \"files\": [ \"api/*.yml\", \"**.md\", \"**/toc.yml\" ] } ], \"dest\": \"_site\" } } v2.15 Bug fixes: Auto dedent the included code snippet, both when including the whole file and file sections. [Breaking Change]For inline inclusion, trim ending white spaces, considering ending white spaces in inline inclusion in most cases are typos. Following GitHub markdown behavior changes. v2.14 Bug fixes: Fix duplicate project references fail GetCompilationAsync. https://github.com/dotnet/docfx/issues/1414 v2.13 Breaking Change : Create new type for files in manifest. Support working folder for dfm include and code. Upgrade YamlDotNet to 4.1. Support cross file definition reference for swagger. Bug fixes: Filter config file is expected in working dir instead of project's dir/src dir. Create msbuild workspace with release configuration by default. https://github.com/dotnet/docfx/pull/1356 v2.12 Bug fixes: default template: Do not load search-worker.js when search is disabled in docfx.js C# region support for code snippets broken by #endregion with extra text. https://github.com/dotnet/docfx/issues/1200 Markdown list continue with def. Markdown link rule is not allowed in link text. Markdown list restore wrong context. Metadata _docfxVersion can't be overwritten. https://github.com/dotnet/docfx/issues/1251 statictoc template out of sync with default template. https://github.com/dotnet/docfx/issues/1256 Fix footer covering sidetoc. https://github.com/dotnet/docfx/issues/1222 v2.11 Export custom href generator. Introduce attribute driven data model to Managed Reference Bug fixes: Generate overload name/fullname form generic method should not contain method parameter. Fix href for markdown link to non-exist files in include files. v2.10 Bug fixes: Markdown table content is misplaced if there is empty column in it. Markdown include should not share link context. Fix rawTitle when article's first line is HTML comment. v2.9.3 hotfix for wrong file link check message. v2.9.2 Remove commit id to avoid config hash changed. v2.9.1 Enable to show derived classes. Add log for config hash. v2.9 Breaking Change Using <span class=\"xxx\"> for languageKeyWord, paramref and typeparamref in generated yml files, instead of using <em> and <strong> . Change default template accordingly. Remove project Microsoft.DocAsCode.Utility , move class to Microsoft.DocAsCode.Common . Get documentation's git information with git command instead of GitSharp . REST: Support remarks to be overwritten. Support reference in parameters to be overwritten. Support DFM syntax in swagger description Bug fixes: Fix inherited member's name when xref unresolved. Fix missing items in breadcrumb. ( https://github.com/dotnet/docfx/issues/944 ) Fix generating overload method names from generic method. Fix full text search not work in index page. Fix the warning that no highlight function defined. v2.8.2 Fix bug: throw error when md contain wrong path.. v2.8.1 Fix bug: RelativePath.TryParse should not throw error when path contains invalid path characters. v2.8 Improve markdown engine: Remove paragraph rule. Improve parser performance. Report bookmarks in template preprocessor, which is used in URL segment when resolving cross reference. Support customizing logo and favicon through metadata. ( https://github.com/dotnet/docfx/pull/892 ) Refine the warning message of invalid bookmark. Improve layout for print. ( https://github.com/dotnet/docfx/issues/852 ) Remove the usage of FileModel.LocalPathFromRepoRoot . This property is marked Obsolete . Copy PathUtility , RelativePath , StringExtension and FilePathComparer from project Microsoft.DocAsCode.Utility to Microsoft.DocAsCode.Common . The copied classes in project Microsoft.DocAsCode.Utility are kept there for bits compatibility and marked Obsolete . Add command option docfx -v to show version of DocFX Bug fixes: concurrency issue of Logger . unable to handle file link with query string. unable to resolve uid for in html <a href=\"xref:...\"> . display specName wrong for generic type. ( https://github.com/dotnet/docfx/issues/896 ) breadcrumb rendered wrong when multiple toc item matched. subcommand metadata can't specify DocFX config file v2.7.3 Fix bookmark validation failed when link contains illegal characters. Fix xref to fall back to uid. v2.7.2 Fix xref with query string not resolved. Fix relative path when validating bookmark. v2.7.1 Search embedded resource prior to local resource. v2.7 Improve markdown engine performance. Improve regex. Add regex timeout. Fix bugs in markdown parser. Refine xref. Provide more options. Support options in query string. Support query string in toc href. Remove debug information in html. Add metadata command option to disable rendering triple-slash-comments as markdown. Fix bug in merging properties. Support extension for preprocessor file in default template. ( https://github.com/dotnet/docfx/issues/662 ) Improve error/warning message. Support bookmark validation. v2.6.3 minor: fix the Renderer v2.6.2 Improve markdown engine performance. Improve regex. Add regex timeout. Fix bugs in markdown parser. DFM: Support code in table v2.6.1 Fix argumentnullexception for generating overload item. Add serializable attribute. Use mark.js to highlight keywords. v2.6 Remove rest resolved cache. Fix assert fail in metadata. ( https://github.com/dotnet/docfx/issues/741 ) Add new command option: repositoryRoot. v2.5.4 Fix isssue #719 that assertion failed. v2.5.3 Update documenation Remove debug build option in Release configuration v2.5.2 Fix error message for invalid file link. v2.5.1 Support attribute filter to filter out attributes. Support choosing git URL pattern. ( https://github.com/dotnet/docfx/issues/677 ) Fix bug for line number is 0. v2.5 Add source file and line number for warning invalid file/uid link. Fix bugs in markdown table. v2.4 Update default template theme. Fix resolving properties for swagger. Fix bugs in markdown. Fix id in title (following GitHub rule). Fix strikeout not work in dfm. Fix tight list item behavior. Fix line number in table. v2.3 Support emoji in markdown content. Upgrade yamldotnet to 3.9. Refine markdown validation. Support separated meta json file. Change hightlight.js theme to github-gist . Support '.json' as supported swagger file extension. Support topicHref and tocHref to specify homepage toc. Support customized contribute repository and branch for \"Improve this Doc\" button. ( https://github.com/dotnet/docfx/issues/482 ) Improve message for docfx.exe template command. v2.2.2 Fix bug in .manifest file. v2.2.1 Fix bug when metadata incremental check. Move post process out of DocumentBuilder. v2.2 Support multi-version site. ( https://github.com/dotnet/docfx/issues/396 ) Support loop reference for Swagger Rest API. ( https://github.com/dotnet/docfx/issues/223 ) Support plug-in for post processor. Support href for see/seealso tags. Improve API reference documentation of namespace and enum. Update prerequisite to build docfx. Update manifest schema. Add chocolatey support in CI script. Provide with options in build.cmd. Bug fixes: syntax for static class is incorrect. improve warning message about global namespace class. ( https://github.com/dotnet/docfx/issues/417 ) fix normalizexml bug for empty <code></code> in tripleslashcomment. v2.1 Support for xref zip file in relative path. Support anchor in toc file. Support plug-in for validating markdown input metadata. Add output file md5 hashes. Breaking Url Rename generic type file name in metadata step E.g. System.Func<T> will generate System.Func-1.yml instead of System.Func`1.yml , and after build the url will be System.Func-1.html instead of System.Func%601.html . To keep old behavior, please add following option in metadata part in docfx.json: \"useCompatibilityFileName\": true Display extension methods in API reference documentation Provide with option _displayLangs in docfx.json to choose which language version you want to show. Support more Swagger syntax: Support allOf . ( https://github.com/dotnet/docfx/issues/360 ) Support $ref with [ and ] in json pointer. ( https://github.com/dotnet/docfx/issues/359 ) Support parameters applicable for all the operations under path . ( https://github.com/dotnet/docfx/issues/358 ) v2.0.2 Support localization tokens in DFM. v2.0.1 Fix bug that file links can't be resolved in overwrite file v2.0 Breaking Change Add line info for markdown parser. Allow Markdown reference at the end of overwrite file. Provide more information for API reference documentation display inherited members display overridden members display implemented interface separate category for Explicit Interface Implementation Rest api - Enable Tag in Swagger file to organize the API s. v1.9 Breaking Change Refactor template system: The input data model now contains all the properties including system generated metadata starting with underscore _ and globally shared variables stored in __global . You can use docfx build --exportRawModel to view the data model. Preprocessor 's transform function signature changes to: exports.transform = function (model){ // transform the model return model; } Provide a new embedded template statictoc with TOC generated in build time. Webpages generated by this template is PURE static and you can simply open the generated webpage file to take a preview, no local server is needed. Allow switch markdown engine. Allow export metadata to manifest file. Improve exclude logic to help avoid PathTooLongException . ( https://github.com/dotnet/docfx/issues/156 ) Provide with a config file named search-stopwords.json to customise full-text search stop-words. ( https://github.com/dotnet/docfx/issues/279 ) Bug fixes: Fix bug when cref contains loop. ( https://github.com/dotnet/docfx/issues/289 ) Make sure id is unique for each HTML in markdown transforming. ( https://github.com/dotnet/docfx/issues/224 ) Fix index range bugs in YamlHeaderParser . ( https://github.com/dotnet/docfx/issues/265 ) v1.8.4 Fix bug when outputFolder, basedirectory and destination are all not set fix <a> tag when href has invalid value with anchor v1.8.3 Fix bug for [!include()[]] when multiple articles in different subfolder including one file that v1.8.2 not resolved v1.8.2 Fix bug for [!include()[]] when multiple articles in different subfolder including one file v1.8.1 Fix bug when serialize attribute argument for type array. ( https://github.com/dotnet/docfx/issues/280 ) Fix bug when include file link to an anchor. Don't modify link when target file not existed. v1.8 Support multiple regions selection, code lines highlight and dedent length setting in Code Snippet . ( https://github.com/dotnet/docfx/issues/189 ) Support more tags in triple-slash-comments, e.g. lang , list , code , paramref and typeparamref . Add Example section to default template. Bug fixes: Fix bug when parsing triple-slash-comments. ( https://github.com/dotnet/docfx/issues/221 ) Fix syntax generation for VB module. ( https://github.com/dotnet/docfx/issues/260 ) v1.7 Behavior change For articles not in TOC, it's TOC file is the nearest TOC File in its output folder. Previously we only search the TOC File under the same input folder of the Not-In-Toc article. Provide more information for API reference documentation Type of events ( https://github.com/dotnet/docfx/issues/217 ) Parameters/returns for delegates ( https://github.com/dotnet/docfx/issues/218 ) Type parameter description ( https://github.com/dotnet/docfx/issues/204 ) Cross-reference is now supporting anchor # ( https://github.com/dotnet/docfx/issues/190 ) C# Code snippet now supports referencing source code using a region #engion ( https://github.com/dotnet/docfx/issues/160 ) Support TOC reference . With this syntax, we can combine multiple TOC files into a single TOC. ( https://github.com/dotnet/docfx/issues/161 ) Improve user experience when using docfx.msbuild in VS IDE Code refactor: We improved DocFX project structure in this release. Microsoft.DocAsCode.EntityModel namespace is no longer in use. Assemblies are separated into Microsoft.DocAsCode.Build , Microsoft.DocAsCode.DataContracts , and Microsoft.DocAsCode.Metadata namespace. All assemblies can be separately referenced through NuGet. In this way, it is much convenient for plugin writers to reference existing data models and utilities. v1.6 Add attribute in c# and vb syntax. Support full text search, with pure client side implementation: The feature is disabled by default. You can enable it by adding \"_enableSearch\": true to the globalMetadata property of docfx.json . The search engine is powered by lunr.js v1.5 Add 3 options to build subcommand: --rawModelOutputFolder : to specify the output folder for raw model if --exportRawModel . If the value is not set, raw model will be in the same folder as the output documenation. --viewModelOutputFolder : to specify the output folder for view model if --exportViewModel . If the value is not set, view model will be in the same folder as the output documenation. --dryRun : if this option is set, docfx will go through all the build processes for all the documents, however, no documentation will generated. Improve markdown: Allow paired parentheses in link target, e.g. [text](paired(parentheses(are)supported)now \"title\") . Improve performance for document build. Breaking changes: modify interface @Microsoft.DocAsCode.Plugins.IDocumentBuildStep. v1.4.2 Fix bug for encoded link file. Fix bug for directory not found. v1.4.1 Remove newFileRepository from output metadata v1.4 Cross-reference related: Make @uid rule more strict: if @ is not followed by ' or \" , it must be followed by word character ( [a-zA-Z] ) Introduce new syntax for cross-reference: similar to autolink: <xref:uid> similar to link: [title](xref:uid) or [title](@uid) support uid in toc.yml : - uid: getting-started - uid: manual support cross reference in toc.md # <xref:getting-started> # [Override title](@getting-started) Update yaml serializion: Add @Microsoft.DocAsCode.YamlSerialization.ExtensibleMemberAttribute Improve docfx init , now with docfx init , a docfx_project seed project will will generated. Several improvements for default template: Provide properties to customize layout: _disableNavbar , _disableBreadcrumb , _disableToc , _disableAffix , _disableContribution , _disableFooter Include empty main.css and main.js to head.tmpl.partial partial template so that there is no need to customize head.tmpl.partial when you want to customize website style. v1.3.8 Fix no link and ref link cannot work issue in table v1.3.7 Fix no link and ref link cannot work issue in markdownlite. Fix link issue (allow space in link) in markdownlite. Fix para for list in markdownlite. Fix tokenize bug in dfm. Add markdown token validator in dfm. v1.3.6 Fix cross domain issue: timeout exception throws when document build takes longer than 15 minutes Fix docfx IOException when calling docfx -l report.txt v1.3.5 FIX Github pages compatibility issue( Github pages now disallow iframe , however the default template of docfx uses iframe to load side toc): Update default template to use AJAX to load side toc, the original one is renamed to iframe.html . So now we have 2 embedded template, one is default and another is iframe.html . v1.3 docfx improvements Add subcommand docfx template . You can now docfx template list and docfx template export -A to list and export all the embeded templates! Add subcommand docfx merge . You can use this subcommand to merge platform from multiple APIs with the same uid Add two options to build subcommand, --exportRawModel and --exportViewModel . --exportRawModel exports the data model to apply templates, --exportViewModel exports the view model after running template's pre-process scripts. Add --globalMetadata , and --globalMetadataFile options to build subcommand. These options allow globalMetadata to be loaded from command line in json format or from a JSON file. Add --fileMetadataFile option to build subcommand. This option allows fileMeatdata to be read from an external JSON file. Support plugins. You can create your own template with a plugins folder, inside which, you create your own build steps. Refer to @Microsoft.DocAsCode.EntityModel.Plugins.BaseDocumentBuildStep for a sample plugin implementation. DFM syntax improvements Support note&div syntax Support query format in code snippet [!code-<language>[<name>](<codepath><queryoption><queryoptionvalue> \"<title>\")] Change xref logic: If content after @ is wrapped by ' or \" , it contains any character including white space If content after @ is not wrapped by ' or \" , it ends when: line ends meets whitespaces line ends with . , , , ; , : , ! , ? and ~ meets 2 times or more . , , , ; , : , ! , ? and ~ Code improvements Add @Microsoft.DocAsCode.YamlSerialization This project is based on YamlDotNet . It overrides classes like type converters to improve performance and fix bug existed in YamlDotNet Refactor markdown engine @Microsoft.DocAsCode.MarkdownLite Add @Microsoft.DocAsCode.MarkdownLite.IMarkdownRewritable`1. It provides a way to operate markdown tokens. Other improvements Add a new property _path into _attrs , it stands for the relative path from docfx.json to current file Improve missing xref warning message to include containing files. Add data-uid as attribute to generated html from default template, so that you can now find uid for API much more easily. v1.2 Support Liquid template, templates ending with .liquid are considered as using liquid templating language. Liquid contains include tag to support partials, we follow the ruby partials naming convention to have _<partialName>.liquid as partial template. A custom tag ref , e.g. {% ref file1 %} is introduced to specify the resource files that current template depends on. DFM include syntax is updated to use [!include[<title>](<filepath>)] syntax Disable glob pattern in docfx metadata command line option as it is to some extent confusing, consider using a -g option later to re-enable it. v1.1 Rewrite Glob The syntax of glob is: ** is called globstar, it matches any number of characters, including / , as long as it's the only thing in a path part. If ** is right behind / , it is a shortcut for **/* . * matches any number of characters, but not / ? matches 1 characters, but not / {} allows for a comma-separated list of \"or\" expressions, e.g. {a,b} => a and b ! at the beginning of a pattern will negate the match [...] matches a range of characters, similar to a RegExp range / is considered as path separator, while \\ is considered as escape character Support fileMetadata . You can specify different metadata value using glob pattern Improve overwrite functionality. Now you can overwrite not only summary/remarks, but also descriptions for parameters. You can even add exceptions. Now the latest project.json projects are also supported in DNX version. Simple code snippet is now supported, syntax is [!code-REST-i[title](path \"optionalTitle\")] Url is now encoded in markdown link. v1.0 Add section syntax in DFM Fix several bugs in DFM Update default template: rename css/js file Fix several display issue in default template v0.3 Support Static Website Templates Schema change to docfx.json (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.html": {
    "href": "api/Microsoft.DocAsCode.html",
    "title": "Namespace Microsoft.DocAsCode | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode Classes AssemblyLicenseAttribute AssemblyUsageAttribute BuildJsonConfig CascadableOptions ContentPairingInfo CustomAssemblyTextAttribute FileItems FileMapping FileMapping supports 3 forms: Array form This form supports multiple file mappings, and also allows additional properties per mapping. e.g. \"key\": [ {\"files\": [\"file1\", \"file2\"], \"dest\": \"dest1\"}, {\"files\": \"file3\", \"dest\": \"dest2\"}, {\"files\": [\"file4\", \"file5\"], \"exclude\": [\"file5\"], \"src\": \"folder1\"}, {\"files\": \"Example.yml\", \"src\": \"v1.0\", \"dest\":\"v1.0/api\", \"group\": \"v1.0\"}, {\"files\": \"Example.yml\", \"src\": \"v2.0\", \"dest\":\"v2.0/api\", \"group\": \"v2.0\"} ] Compact form This form supports multiple file patterns in an array e.g. projects: [\"file1\", \"file2\"] Object form If the Array form contains only one item, it can be shortened to an object e.g. projects: [\"file1\", \"file2\"] FileMappingConverter FileMappingItem Data model for a file-mapping item FileMetadataPairs FileMetadataPairsConverter FileMetadataPairsItem GroupConfig ListWithStringFallback ListWithStringFallbackConverter MergeJsonConfig MergeJsonConfigConverter MergeJsonItemConfig MetadataJsonConfig MetadataJsonItemConfig OptionUsageAttribute PdfJsonConfig WkhtmltopdfJsonConfig Holds configuration options specific to the wkhtmltopdf tooling used by the pdf command. (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.WkhtmltopdfJsonConfig.html": {
    "href": "api/Microsoft.DocAsCode.WkhtmltopdfJsonConfig.html",
    "title": "Class WkhtmltopdfJsonConfig | DocFX website",
    "keywords": "Class WkhtmltopdfJsonConfig Holds configuration options specific to the wkhtmltopdf tooling used by the pdf command. Inheritance Object WkhtmltopdfJsonConfig Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode Assembly : docfx.dll Syntax [Serializable] public class WkhtmltopdfJsonConfig Properties | Improve this Doc View Source AdditionalArguments Specify additional command line arguments that should be passed to the wkhtmltopdf executable. Declaration [JsonProperty(\"additionalArguments\")] public string AdditionalArguments { get; set; } Property Value Type Description String (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.SubCommands.html": {
    "href": "api/Microsoft.DocAsCode.SubCommands.html",
    "title": "Namespace Microsoft.DocAsCode.SubCommands | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.SubCommands Classes CommandOptionAttribute MetadataMergeParameters MetadataMerger OptionParserException (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.SubCommands.OptionParserException.html": {
    "href": "api/Microsoft.DocAsCode.SubCommands.OptionParserException.html",
    "title": "Class OptionParserException | DocFX website",
    "keywords": "Class OptionParserException Inheritance Object Exception SystemException ArgumentException OptionParserException Implements _Exception ISerializable Inherited Members ArgumentException.GetObjectData(SerializationInfo, StreamingContext) ArgumentException.Message ArgumentException.ParamName Exception.GetBaseException() Exception.ToString() Exception.GetType() Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.SubCommands Assembly : docfx.dll Syntax public class OptionParserException : ArgumentException, _Exception, ISerializable Constructors | Improve this Doc View Source OptionParserException() Declaration public OptionParserException() | Improve this Doc View Source OptionParserException(String) Declaration public OptionParserException(string message) Parameters Type Name Description String message Implements System.Runtime.InteropServices._Exception System.Runtime.Serialization.ISerializable (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.ResolverContext.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.ResolverContext.html",
    "title": "Class ResolverContext | DocFX website",
    "keywords": "Class ResolverContext Inheritance Object ResolverContext Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public class ResolverContext Properties | Improve this Doc View Source Members Declaration public Dictionary<string, MetadataItem> Members { get; set; } Property Value Type Description Dictionary < String , MetadataItem > | Improve this Doc View Source PreserveRawInlineComments Declaration public bool PreserveRawInlineComments { get; set; } Property Value Type Description Boolean | Improve this Doc View Source References Declaration public Dictionary<string, ReferenceItem> References { get; set; } Property Value Type Description Dictionary < String , ReferenceItem > (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.ReferenceItemVisitor.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.ReferenceItemVisitor.html",
    "title": "Class ReferenceItemVisitor | DocFX website",
    "keywords": "Class ReferenceItemVisitor Inheritance Object SymbolVisitor ReferenceItemVisitor CSReferenceItemVisitor VBReferenceItemVisitor Inherited Members SymbolVisitor.Visit(ISymbol) SymbolVisitor.DefaultVisit(ISymbol) SymbolVisitor.VisitAlias(IAliasSymbol) SymbolVisitor.VisitArrayType(IArrayTypeSymbol) SymbolVisitor.VisitAssembly(IAssemblySymbol) SymbolVisitor.VisitDiscard(IDiscardSymbol) SymbolVisitor.VisitDynamicType(IDynamicTypeSymbol) SymbolVisitor.VisitEvent(IEventSymbol) SymbolVisitor.VisitField(IFieldSymbol) SymbolVisitor.VisitLabel(ILabelSymbol) SymbolVisitor.VisitLocal(ILocalSymbol) SymbolVisitor.VisitMethod(IMethodSymbol) SymbolVisitor.VisitModule(IModuleSymbol) SymbolVisitor.VisitNamespace(INamespaceSymbol) SymbolVisitor.VisitParameter(IParameterSymbol) SymbolVisitor.VisitPointerType(IPointerTypeSymbol) SymbolVisitor.VisitProperty(IPropertySymbol) SymbolVisitor.VisitRangeVariable(IRangeVariableSymbol) SymbolVisitor.VisitTypeParameter(ITypeParameterSymbol) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.Roslyn.dll Syntax public abstract class ReferenceItemVisitor : SymbolVisitor Constructors | Improve this Doc View Source ReferenceItemVisitor(ReferenceItem) Declaration protected ReferenceItemVisitor(ReferenceItem referenceItem) Parameters Type Name Description ReferenceItem referenceItem Fields | Improve this Doc View Source QualifiedFormat Declaration public static readonly SymbolDisplayFormat QualifiedFormat Field Value Type Description SymbolDisplayFormat | Improve this Doc View Source QualifiedFormatWithoutGenericeParameter Declaration public static readonly SymbolDisplayFormat QualifiedFormatWithoutGenericeParameter Field Value Type Description SymbolDisplayFormat | Improve this Doc View Source ShortFormat Declaration public static readonly SymbolDisplayFormat ShortFormat Field Value Type Description SymbolDisplayFormat | Improve this Doc View Source ShortFormatWithoutGenericeParameter Declaration public static readonly SymbolDisplayFormat ShortFormatWithoutGenericeParameter Field Value Type Description SymbolDisplayFormat Properties | Improve this Doc View Source ReferenceItem Declaration protected ReferenceItem ReferenceItem { get; } Property Value Type Description ReferenceItem Methods | Improve this Doc View Source AddBeginGenericParameter() Declaration protected abstract void AddBeginGenericParameter() | Improve this Doc View Source AddEndGenericParameter() Declaration protected abstract void AddEndGenericParameter() | Improve this Doc View Source AddGenericParameterSeparator() Declaration protected abstract void AddGenericParameterSeparator() | Improve this Doc View Source AddLinkItems(INamedTypeSymbol, Boolean) Declaration protected abstract void AddLinkItems(INamedTypeSymbol symbol, bool withGenericeParameter) Parameters Type Name Description INamedTypeSymbol symbol Boolean withGenericeParameter | Improve this Doc View Source VisitNamedType(INamedTypeSymbol) Declaration public override void VisitNamedType(INamedTypeSymbol symbol) Parameters Type Name Description INamedTypeSymbol symbol Overrides SymbolVisitor.VisitNamedType(INamedTypeSymbol) (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.ReferenceItem.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.ReferenceItem.html",
    "title": "Class ReferenceItem | DocFX website",
    "keywords": "Class ReferenceItem Inheritance Object ReferenceItem Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.Common.dll Syntax public class ReferenceItem Properties | Improve this Doc View Source CommentId Declaration [YamlMember(Alias = \"commentId\")] [JsonProperty(\"commentId\")] public string CommentId { get; set; } Property Value Type Description String | Improve this Doc View Source Definition Declaration [YamlMember(Alias = \"definition\")] [JsonProperty(\"definition\")] public string Definition { get; set; } Property Value Type Description String | Improve this Doc View Source IsDefinition Declaration [YamlMember(Alias = \"isDefinition\")] [JsonProperty(\"isDefinition\")] public bool? IsDefinition { get; set; } Property Value Type Description Nullable < Boolean > | Improve this Doc View Source Parent Declaration [YamlMember(Alias = \"parent\")] [JsonProperty(\"parent\")] public string Parent { get; set; } Property Value Type Description String | Improve this Doc View Source Parts Declaration [YamlMember(Alias = \"name\")] [JsonProperty(\"name\")] public SortedList<SyntaxLanguage, List<LinkItem>> Parts { get; set; } Property Value Type Description SortedList < SyntaxLanguage , List < LinkItem >> Methods | Improve this Doc View Source Clone() Declaration public ReferenceItem Clone() Returns Type Description ReferenceItem | Improve this Doc View Source Merge(ReferenceItem) Declaration public void Merge(ReferenceItem other) Parameters Type Name Description ReferenceItem other (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.ProjectLevelCache.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.ProjectLevelCache.html",
    "title": "Class ProjectLevelCache | DocFX website",
    "keywords": "Class ProjectLevelCache Inheritance Object CacheBase ProjectLevelCache Inherited Members CacheBase.AssemblyName CacheBase.GetValidConfig(String) CacheBase.GetValidConfig(IEnumerable<String>) CacheBase.SaveToCache(String, IDictionary<String, List<String>>, DateTime, String, IList<String>, ExtractMetadataOptions) CacheBase.SaveToCache(IEnumerable<String>, IDictionary<String, List<String>>, DateTime, String, IList<String>, ExtractMetadataOptions) CacheBase.SaveToCache(String, IEnumerable<String>, DateTime, String, IList<String>, ExtractMetadataOptions) CacheBase.GetConfig(String) CacheBase.ReadConfig(String) CacheBase.SaveConfig(String, BuildInfo) CacheBase.CleanupConfig() Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.Common.dll Syntax public class ProjectLevelCache : CacheBase Fields | Improve this Doc View Source GetProjectLevelConfig Declaration public static Func<string, string> GetProjectLevelConfig Field Value Type Description Func < String , String > | Improve this Doc View Source OutputFolder Declaration public readonly string OutputFolder Field Value Type Description String Methods | Improve this Doc View Source Get(IEnumerable<String>) Declaration public static ProjectLevelCache Get(IEnumerable<string> files) Parameters Type Name Description IEnumerable < String > files Returns Type Description ProjectLevelCache | Improve this Doc View Source Get(String) Declaration public static ProjectLevelCache Get(string firstFile) Parameters Type Name Description String firstFile Returns Type Description ProjectLevelCache (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.ProjectFileInputParameters.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.ProjectFileInputParameters.html",
    "title": "Class ProjectFileInputParameters | DocFX website",
    "keywords": "Class ProjectFileInputParameters Inheritance Object ProjectFileInputParameters Implements IInputParameters Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.Common.dll Syntax public class ProjectFileInputParameters : IInputParameters Constructors | Improve this Doc View Source ProjectFileInputParameters(ExtractMetadataOptions, IEnumerable<String>, String, Boolean) Declaration public ProjectFileInputParameters(ExtractMetadataOptions options, IEnumerable<string> files, string projectFile, bool dependencyRebuilt) Parameters Type Name Description ExtractMetadataOptions options IEnumerable < String > files String projectFile Boolean dependencyRebuilt Properties | Improve this Doc View Source BuildInfo Declaration public BuildInfo BuildInfo { get; } Property Value Type Description BuildInfo | Improve this Doc View Source Cache Declaration public ProjectLevelCache Cache { get; } Property Value Type Description ProjectLevelCache | Improve this Doc View Source DependencyRebuilt Declaration public bool DependencyRebuilt { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Files Declaration public IEnumerable<string> Files { get; set; } Property Value Type Description IEnumerable < String > | Improve this Doc View Source Key Declaration public string Key { get; } Property Value Type Description String | Improve this Doc View Source Options Declaration public ExtractMetadataOptions Options { get; } Property Value Type Description ExtractMetadataOptions Methods | Improve this Doc View Source HasChanged(BuildInfo) Declaration public bool HasChanged(BuildInfo buildInfo) Parameters Type Name Description BuildInfo buildInfo Returns Type Description Boolean Implements IInputParameters (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.NormalizeSyntax.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.NormalizeSyntax.html",
    "title": "Class NormalizeSyntax | DocFX website",
    "keywords": "Class NormalizeSyntax Inheritance Object NormalizeSyntax Implements IResolverPipeline Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public class NormalizeSyntax : IResolverPipeline Methods | Improve this Doc View Source Run(MetadataModel, ResolverContext) Declaration public void Run(MetadataModel yaml, ResolverContext context) Parameters Type Name Description MetadataModel yaml ResolverContext context Implements IResolverPipeline (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.NameVisitorCreator.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.NameVisitorCreator.html",
    "title": "Class NameVisitorCreator | DocFX website",
    "keywords": "Class NameVisitorCreator Inheritance Object NameVisitorCreator CSharpNameVisitorCreator VBNameVisitorCreator Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.Roslyn.dll Syntax public abstract class NameVisitorCreator Constructors | Improve this Doc View Source NameVisitorCreator() Declaration protected NameVisitorCreator() Methods | Improve this Doc View Source Create() Declaration protected abstract NameVisitor Create() Returns Type Description NameVisitor | Improve this Doc View Source GetCSharp(NameOptions) Declaration public static NameVisitorCreator GetCSharp(NameOptions option) Parameters Type Name Description NameOptions option Returns Type Description NameVisitorCreator | Improve this Doc View Source GetName(ISymbol) Declaration public string GetName(ISymbol symbol) Parameters Type Name Description ISymbol symbol Returns Type Description String | Improve this Doc View Source GetVB(NameOptions) Declaration public static NameVisitorCreator GetVB(NameOptions option) Parameters Type Name Description NameOptions option Returns Type Description NameVisitorCreator (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.NameVisitor.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.NameVisitor.html",
    "title": "Class NameVisitor | DocFX website",
    "keywords": "Class NameVisitor Inheritance Object SymbolVisitor NameVisitor Inherited Members SymbolVisitor.Visit(ISymbol) SymbolVisitor.DefaultVisit(ISymbol) SymbolVisitor.VisitAlias(IAliasSymbol) SymbolVisitor.VisitArrayType(IArrayTypeSymbol) SymbolVisitor.VisitAssembly(IAssemblySymbol) SymbolVisitor.VisitDiscard(IDiscardSymbol) SymbolVisitor.VisitDynamicType(IDynamicTypeSymbol) SymbolVisitor.VisitEvent(IEventSymbol) SymbolVisitor.VisitField(IFieldSymbol) SymbolVisitor.VisitLabel(ILabelSymbol) SymbolVisitor.VisitLocal(ILocalSymbol) SymbolVisitor.VisitMethod(IMethodSymbol) SymbolVisitor.VisitModule(IModuleSymbol) SymbolVisitor.VisitNamedType(INamedTypeSymbol) SymbolVisitor.VisitNamespace(INamespaceSymbol) SymbolVisitor.VisitParameter(IParameterSymbol) SymbolVisitor.VisitPointerType(IPointerTypeSymbol) SymbolVisitor.VisitProperty(IPropertySymbol) SymbolVisitor.VisitRangeVariable(IRangeVariableSymbol) SymbolVisitor.VisitTypeParameter(ITypeParameterSymbol) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.Roslyn.dll Syntax public abstract class NameVisitor : SymbolVisitor Constructors | Improve this Doc View Source NameVisitor() Declaration protected NameVisitor() Methods | Improve this Doc View Source Append(String) Declaration protected void Append(string text) Parameters Type Name Description String text (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.NameOptions.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.NameOptions.html",
    "title": "Enum NameOptions | DocFX website",
    "keywords": "Enum NameOptions Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.Roslyn.dll Syntax [Flags] public enum NameOptions Fields Name Description All None Qualified UseAlias WithGenericParameter WithMethodGenericParameter WithNamespace WithParameter WithType WithTypeGenericParameter (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.MSBuildEnvironmentScope.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.MSBuildEnvironmentScope.html",
    "title": "Class MSBuildEnvironmentScope | DocFX website",
    "keywords": "Class MSBuildEnvironmentScope Inheritance Object MSBuildEnvironmentScope Implements IDisposable Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public class MSBuildEnvironmentScope : IDisposable Constructors | Improve this Doc View Source MSBuildEnvironmentScope() Declaration public MSBuildEnvironmentScope() Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() Implements System.IDisposable (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.MetadataModel.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.MetadataModel.html",
    "title": "Class MetadataModel | DocFX website",
    "keywords": "Class MetadataModel Inheritance Object MetadataModel Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.Common.dll Syntax public class MetadataModel Properties | Improve this Doc View Source Members Declaration public List<MetadataItem> Members { get; set; } Property Value Type Description List < MetadataItem > | Improve this Doc View Source TocYamlViewModel Declaration public MetadataItem TocYamlViewModel { get; set; } Property Value Type Description MetadataItem (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.MetadataItem.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.MetadataItem.html",
    "title": "Class MetadataItem | DocFX website",
    "keywords": "Class MetadataItem Inheritance Object MetadataItem Implements ICloneable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.Common.dll Syntax public class MetadataItem : ICloneable Properties | Improve this Doc View Source AssemblyNameList Declaration [YamlMember(Alias = \"assemblies\")] [JsonProperty(\"assemblies\")] public List<string> AssemblyNameList { get; set; } Property Value Type Description List < String > | Improve this Doc View Source Attributes Declaration [YamlMember(Alias = \"attributes\")] [JsonProperty(\"attributes\")] public List<AttributeInfo> Attributes { get; set; } Property Value Type Description List < AttributeInfo > | Improve this Doc View Source CommentId Declaration [YamlMember(Alias = \"commentId\")] [JsonProperty(\"commentId\")] public string CommentId { get; set; } Property Value Type Description String | Improve this Doc View Source CommentModel Declaration [YamlIgnore] [JsonIgnore] public TripleSlashCommentModel CommentModel { get; set; } Property Value Type Description TripleSlashCommentModel | Improve this Doc View Source DerivedClasses Declaration [YamlMember(Alias = \"derivedClasses\")] [JsonProperty(\"derivedClasses\")] public List<string> DerivedClasses { get; set; } Property Value Type Description List < String > | Improve this Doc View Source DisplayNames Declaration [YamlMember(Alias = \"name\")] [JsonProperty(\"name\")] public SortedList<SyntaxLanguage, string> DisplayNames { get; set; } Property Value Type Description SortedList < SyntaxLanguage , String > | Improve this Doc View Source DisplayNamesWithType Declaration [YamlMember(Alias = \"nameWithType\")] [JsonProperty(\"nameWithType\")] public SortedList<SyntaxLanguage, string> DisplayNamesWithType { get; set; } Property Value Type Description SortedList < SyntaxLanguage , String > | Improve this Doc View Source DisplayQualifiedNames Declaration [YamlMember(Alias = \"qualifiedName\")] [JsonProperty(\"qualifiedName\")] public SortedList<SyntaxLanguage, string> DisplayQualifiedNames { get; set; } Property Value Type Description SortedList < SyntaxLanguage , String > | Improve this Doc View Source Documentation Declaration [YamlMember(Alias = \"documentation\")] [JsonProperty(\"documentation\")] public SourceDetail Documentation { get; set; } Property Value Type Description SourceDetail | Improve this Doc View Source Examples Declaration [YamlMember(Alias = \"example\")] [JsonProperty(\"example\")] public List<string> Examples { get; set; } Property Value Type Description List < String > | Improve this Doc View Source Exceptions Declaration [YamlMember(Alias = \"exceptions\")] [JsonProperty(\"exceptions\")] public List<ExceptionInfo> Exceptions { get; set; } Property Value Type Description List < ExceptionInfo > | Improve this Doc View Source ExtensionMethods Declaration [YamlMember(Alias = \"extensionMethods\")] [JsonProperty(\"extensionMethods\")] public List<string> ExtensionMethods { get; set; } Property Value Type Description List < String > | Improve this Doc View Source Implements Declaration [YamlMember(Alias = \"implements\")] [JsonProperty(\"implements\")] public List<string> Implements { get; set; } Property Value Type Description List < String > | Improve this Doc View Source Inheritance Declaration [YamlMember(Alias = \"inheritance\")] [JsonProperty(\"inheritance\")] public List<string> Inheritance { get; set; } Property Value Type Description List < String > | Improve this Doc View Source InheritedMembers Declaration [YamlMember(Alias = \"inheritedMembers\")] [JsonProperty(\"inheritedMembers\")] public List<string> InheritedMembers { get; set; } Property Value Type Description List < String > | Improve this Doc View Source IsExplicitInterfaceImplementation Declaration [JsonProperty(\"isEii\")] [YamlMember(Alias = \"isEii\")] public bool IsExplicitInterfaceImplementation { get; set; } Property Value Type Description Boolean | Improve this Doc View Source IsExtensionMethod Declaration [YamlMember(Alias = \"isExtensionMethod\")] [JsonProperty(\"isExtensionMethod\")] public bool IsExtensionMethod { get; set; } Property Value Type Description Boolean | Improve this Doc View Source IsInheritDoc Declaration [YamlIgnore] [JsonIgnore] public bool IsInheritDoc { get; set; } Property Value Type Description Boolean | Improve this Doc View Source IsInvalid Declaration [YamlIgnore] [JsonIgnore] public bool IsInvalid { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Items Declaration [YamlMember(Alias = \"items\")] [JsonProperty(\"items\")] public List<MetadataItem> Items { get; set; } Property Value Type Description List < MetadataItem > | Improve this Doc View Source Language Declaration [YamlMember(Alias = \"language\")] [JsonProperty(\"language\")] public SyntaxLanguage Language { get; set; } Property Value Type Description SyntaxLanguage | Improve this Doc View Source Layout Declaration public List<LayoutItem> Layout { get; set; } Property Value Type Description List < LayoutItem > | Improve this Doc View Source Modifiers Declaration [YamlMember(Alias = \"modifiers\")] [JsonProperty(\"modifiers\")] public SortedList<SyntaxLanguage, List<string>> Modifiers { get; set; } Property Value Type Description SortedList < SyntaxLanguage , List < String >> | Improve this Doc View Source Name Declaration [YamlMember(Alias = \"id\")] [JsonProperty(\"id\")] public string Name { get; set; } Property Value Type Description String | Improve this Doc View Source NamespaceName Declaration [YamlMember(Alias = \"namespace\")] [JsonProperty(\"namespace\")] public string NamespaceName { get; set; } Property Value Type Description String | Improve this Doc View Source Overload Declaration [YamlMember(Alias = \"overload\")] [JsonProperty(\"overload\")] public string Overload { get; set; } Property Value Type Description String | Improve this Doc View Source Overridden Declaration [YamlMember(Alias = \"overridden\")] [JsonProperty(\"overridden\")] public string Overridden { get; set; } Property Value Type Description String | Improve this Doc View Source Parent Declaration [YamlMember(Alias = \"parent\")] [JsonProperty(\"parent\")] public MetadataItem Parent { get; set; } Property Value Type Description MetadataItem | Improve this Doc View Source RawComment Declaration [YamlIgnore] [JsonIgnore] public string RawComment { get; set; } Property Value Type Description String | Improve this Doc View Source References Declaration [YamlMember(Alias = \"references\")] [JsonProperty(\"references\")] public Dictionary<string, ReferenceItem> References { get; set; } Property Value Type Description Dictionary < String , ReferenceItem > | Improve this Doc View Source Remarks Declaration [YamlMember(Alias = \"remarks\")] [JsonProperty(\"remarks\")] public string Remarks { get; set; } Property Value Type Description String | Improve this Doc View Source SeeAlsos Declaration [YamlMember(Alias = \"seealso\")] [JsonProperty(\"seealso\")] public List<LinkInfo> SeeAlsos { get; set; } Property Value Type Description List < LinkInfo > | Improve this Doc View Source Sees Declaration [YamlMember(Alias = \"see\")] [JsonProperty(\"see\")] public List<LinkInfo> Sees { get; set; } Property Value Type Description List < LinkInfo > | Improve this Doc View Source Source Declaration [YamlMember(Alias = \"source\")] [JsonProperty(\"source\")] public SourceDetail Source { get; set; } Property Value Type Description SourceDetail | Improve this Doc View Source Summary Declaration [YamlMember(Alias = \"summary\")] [JsonProperty(\"summary\")] public string Summary { get; set; } Property Value Type Description String | Improve this Doc View Source Syntax Declaration [YamlMember(Alias = \"syntax\")] [JsonProperty(\"syntax\")] public SyntaxDetail Syntax { get; set; } Property Value Type Description SyntaxDetail | Improve this Doc View Source Type Declaration [YamlMember(Alias = \"type\")] [JsonProperty(\"type\")] public MemberType Type { get; set; } Property Value Type Description MemberType Methods | Improve this Doc View Source Clone() Declaration public object Clone() Returns Type Description Object | Improve this Doc View Source CopyInheritedData(MetadataItem) Declaration public void CopyInheritedData(MetadataItem src) Parameters Type Name Description MetadataItem src | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() Implements System.ICloneable Extension Methods YamlViewModelExtensions.ShrinkToSimpleToc(MetadataItem) YamlViewModelExtensions.ShrinkToSimpleTocWithNamespaceNotEmpty(MetadataItem) YamlViewModelExtensions.ToTocViewModel(MetadataItem) YamlViewModelExtensions.ToTocItemViewModel(MetadataItem) YamlViewModelExtensions.ToPageViewModel(MetadataItem) YamlViewModelExtensions.ToItemViewModel(MetadataItem) (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.MergeCommentsHelper.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.MergeCommentsHelper.html",
    "title": "Class MergeCommentsHelper | DocFX website",
    "keywords": "Class MergeCommentsHelper Inheritance Object MergeCommentsHelper Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public static class MergeCommentsHelper Methods | Improve this Doc View Source MergeComments(MetadataItem, IEnumerable<String>) Declaration public static void MergeComments(MetadataItem item, IEnumerable<string> commentFiles) Parameters Type Name Description MetadataItem item IEnumerable < String > commentFiles (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.LinkItem.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.LinkItem.html",
    "title": "Class LinkItem | DocFX website",
    "keywords": "Class LinkItem Inheritance Object LinkItem Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.Common.dll Syntax public class LinkItem Properties | Improve this Doc View Source DisplayName Declaration [YamlMember(Alias = \"name\")] [JsonProperty(\"name\")] public string DisplayName { get; set; } Property Value Type Description String | Improve this Doc View Source DisplayNamesWithType Declaration [YamlMember(Alias = \"nameWithType\")] [JsonProperty(\"nameWithType\")] public string DisplayNamesWithType { get; set; } Property Value Type Description String | Improve this Doc View Source DisplayQualifiedNames Declaration [YamlMember(Alias = \"qualifiedName\")] [JsonProperty(\"qualifiedName\")] public string DisplayQualifiedNames { get; set; } Property Value Type Description String | Improve this Doc View Source Href The url path for current source, should be resolved at some late stage Declaration [YamlMember(Alias = \"href\")] [JsonProperty(\"href\")] public string Href { get; set; } Property Value Type Description String | Improve this Doc View Source IsExternalPath The external path for current source if it is not locally available Declaration [YamlMember(Alias = \"isExternal\")] [JsonProperty(\"isExternal\")] public bool IsExternalPath { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Name Declaration [YamlMember(Alias = \"id\")] [JsonProperty(\"id\")] public string Name { get; set; } Property Value Type Description String Methods | Improve this Doc View Source Clone() Declaration public LinkItem Clone() Returns Type Description LinkItem Extension Methods YamlViewModelExtensions.ToSpecViewModel(LinkItem) (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.LayoutItem.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.LayoutItem.html",
    "title": "Enum LayoutItem | DocFX website",
    "keywords": "Enum LayoutItem Defines the layout for an API page Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.Common.dll Syntax public enum LayoutItem Fields Name Description Exception ExternalComments Hierarchy InlineComments MemberTable SeeAlso Syntax Title (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.LayoutCheckAndCleanup.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.LayoutCheckAndCleanup.html",
    "title": "Class LayoutCheckAndCleanup | DocFX website",
    "keywords": "Class LayoutCheckAndCleanup Inheritance Object LayoutCheckAndCleanup Implements IResolverPipeline Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public class LayoutCheckAndCleanup : IResolverPipeline Methods | Improve this Doc View Source Run(MetadataModel, ResolverContext) The yaml layout should be namespace -- class level -- method level Declaration public void Run(MetadataModel yaml, ResolverContext context) Parameters Type Name Description MetadataModel yaml ResolverContext context Implements IResolverPipeline (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.ITripleSlashCommentParserContext.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.ITripleSlashCommentParserContext.html",
    "title": "Interface ITripleSlashCommentParserContext | DocFX website",
    "keywords": "Interface ITripleSlashCommentParserContext Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.Common.dll Syntax public interface ITripleSlashCommentParserContext Properties | Improve this Doc View Source AddReferenceDelegate Declaration Action<string, string> AddReferenceDelegate { get; set; } Property Value Type Description Action < String , String > | Improve this Doc View Source CodeSourceBasePath Declaration string CodeSourceBasePath { get; set; } Property Value Type Description String | Improve this Doc View Source PreserveRawInlineComments Declaration bool PreserveRawInlineComments { get; set; } Property Value Type Description Boolean | Improve this Doc View Source ResolveCRef Declaration Func<string, CRefTarget> ResolveCRef { get; } Property Value Type Description Func < String , CRefTarget > | Improve this Doc View Source Source Declaration SourceDetail Source { get; set; } Property Value Type Description SourceDetail (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.IRoslynBuildController.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.IRoslynBuildController.html",
    "title": "Interface IRoslynBuildController | DocFX website",
    "keywords": "Interface IRoslynBuildController Inherited Members IBuildController.ExtractMetadata(IInputParameters) Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.Roslyn.dll Syntax public interface IRoslynBuildController : IBuildController Methods | Improve this Doc View Source GetAssembly(IInputParameters) Declaration IAssemblySymbol GetAssembly(IInputParameters key) Parameters Type Name Description IInputParameters key Returns Type Description IAssemblySymbol | Improve this Doc View Source GetCompilation(IInputParameters) Declaration Compilation GetCompilation(IInputParameters key) Parameters Type Name Description IInputParameters key Returns Type Description Compilation (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.IResolverPipeline.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.IResolverPipeline.html",
    "title": "Interface IResolverPipeline | DocFX website",
    "keywords": "Interface IResolverPipeline Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public interface IResolverPipeline Methods | Improve this Doc View Source Run(MetadataModel, ResolverContext) Declaration void Run(MetadataModel yaml, ResolverContext context) Parameters Type Name Description MetadataModel yaml ResolverContext context (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.IProjectLoader.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.IProjectLoader.html",
    "title": "Interface IProjectLoader | DocFX website",
    "keywords": "Interface IProjectLoader Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.Common.dll Syntax public interface IProjectLoader Methods | Improve this Doc View Source TryLoad(String, AbstractProjectLoader) Declaration AbstractProject TryLoad(string path, AbstractProjectLoader loader) Parameters Type Name Description String path AbstractProjectLoader loader Returns Type Description AbstractProject (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.IncrementalCheck.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.IncrementalCheck.html",
    "title": "Class IncrementalCheck | DocFX website",
    "keywords": "Class IncrementalCheck Inheritance Object IncrementalCheck Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.Common.dll Syntax public class IncrementalCheck Constructors | Improve this Doc View Source IncrementalCheck(BuildInfo) Declaration public IncrementalCheck(BuildInfo buildInfo) Parameters Type Name Description BuildInfo buildInfo Properties | Improve this Doc View Source BuildInfo Declaration public BuildInfo BuildInfo { get; } Property Value Type Description BuildInfo Methods | Improve this Doc View Source AreFilesModified(IEnumerable<String>) Declaration public bool AreFilesModified(IEnumerable<string> files) Parameters Type Name Description IEnumerable < String > files Returns Type Description Boolean | Improve this Doc View Source IsFileModified(String) If file does not exists, return true ?? ==> should have checked exists before calling. If file's last modified time is newer, return true; otherwise, return false Declaration public bool IsFileModified(string file) Parameters Type Name Description String file Returns Type Description Boolean | Improve this Doc View Source MSBuildPropertiesUpdated(IDictionary<String, String>) Declaration public bool MSBuildPropertiesUpdated(IDictionary<string, string> newProperties) Parameters Type Name Description IDictionary < String , String > newProperties Returns Type Description Boolean (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.IInputParameters.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.IInputParameters.html",
    "title": "Interface IInputParameters | DocFX website",
    "keywords": "Interface IInputParameters Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.Common.dll Syntax public interface IInputParameters Properties | Improve this Doc View Source BuildInfo Declaration BuildInfo BuildInfo { get; } Property Value Type Description BuildInfo | Improve this Doc View Source Cache Declaration ProjectLevelCache Cache { get; } Property Value Type Description ProjectLevelCache | Improve this Doc View Source Files Declaration IEnumerable<string> Files { get; } Property Value Type Description IEnumerable < String > | Improve this Doc View Source Key Declaration string Key { get; } Property Value Type Description String | Improve this Doc View Source Options Declaration ExtractMetadataOptions Options { get; } Property Value Type Description ExtractMetadataOptions Methods | Improve this Doc View Source HasChanged(BuildInfo) Declaration bool HasChanged(BuildInfo buildInfo) Parameters Type Name Description BuildInfo buildInfo Returns Type Description Boolean (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.DfmJsonTokenTreeRender.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmJsonTokenTreeRender.html",
    "title": "Class DfmJsonTokenTreeRender | DocFX website",
    "keywords": "Class DfmJsonTokenTreeRender Inheritance Object DfmJsonTokenTreeRender Namespace : Microsoft.DocAsCode.Dfm Assembly : Microsoft.DocAsCode.Dfm.dll Syntax public class DfmJsonTokenTreeRender : JsonTokenTreeRenderer Methods | Improve this Doc View Source Render(IMarkdownRenderer, MarkdownBlockquoteBlockToken, MarkdownBlockContext) Declaration public override StringBuffer Render(IMarkdownRenderer renderer, MarkdownBlockquoteBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer renderer MarkdownBlockquoteBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, DfmFencesBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, DfmFencesBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer renderer DfmFencesBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, DfmIncludeBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, DfmIncludeBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer renderer DfmIncludeBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, DfmIncludeInlineToken, MarkdownInlineContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, DfmIncludeInlineToken token, MarkdownInlineContext context) Parameters Type Name Description IMarkdownRenderer renderer DfmIncludeInlineToken token MarkdownInlineContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, DfmNoteBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, DfmNoteBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer renderer DfmNoteBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, DfmVideoBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, DfmVideoBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer renderer DfmVideoBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, DfmXrefInlineToken, MarkdownInlineContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, DfmXrefInlineToken token, MarkdownInlineContext context) Parameters Type Name Description IMarkdownRenderer renderer DfmXrefInlineToken token MarkdownInlineContext context Returns Type Description StringBuffer | Improve this Doc View Source Render(IMarkdownRenderer, DfmYamlHeaderBlockToken, MarkdownBlockContext) Declaration public virtual StringBuffer Render(IMarkdownRenderer renderer, DfmYamlHeaderBlockToken token, MarkdownBlockContext context) Parameters Type Name Description IMarkdownRenderer renderer DfmYamlHeaderBlockToken token MarkdownBlockContext context Returns Type Description StringBuffer (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.DfmIncludeInlineToken.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmIncludeInlineToken.html",
    "title": "Class DfmIncludeInlineToken | DocFX website",
    "keywords": "Class DfmIncludeInlineToken Inheritance Object DfmIncludeInlineToken Namespace : Microsoft.DocAsCode.Dfm Assembly : Microsoft.DocAsCode.Dfm.dll Syntax public class DfmIncludeInlineToken : IMarkdownToken Constructors | Improve this Doc View Source DfmIncludeInlineToken(IMarkdownRule, IMarkdownContext, String, String, String, SourceInfo) Declaration public DfmIncludeInlineToken(IMarkdownRule rule, IMarkdownContext context, string src, string name, string title, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context String src String name String title SourceInfo sourceInfo | Improve this Doc View Source DfmIncludeInlineToken(IMarkdownRule, IMarkdownContext, String, String, String, String, SourceInfo) Declaration [Obsolete] public DfmIncludeInlineToken(IMarkdownRule rule, IMarkdownContext context, string src, string name, string title, string raw, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context String src String name String title String raw SourceInfo sourceInfo Properties | Improve this Doc View Source Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description String | Improve this Doc View Source Raw Declaration [Obsolete] public string Raw { get; } Property Value Type Description String | Improve this Doc View Source Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule | Improve this Doc View Source SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo | Improve this Doc View Source Src Declaration public string Src { get; } Property Value Type Description String | Improve this Doc View Source Title Declaration public string Title { get; } Property Value Type Description String (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.DfmIncludeInlineRule.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmIncludeInlineRule.html",
    "title": "Class DfmIncludeInlineRule | DocFX website",
    "keywords": "Class DfmIncludeInlineRule Inheritance Object DfmIncludeInlineRule Namespace : Microsoft.DocAsCode.Dfm Assembly : Microsoft.DocAsCode.Dfm.dll Syntax public class DfmIncludeInlineRule : IMarkdownRule Properties | Improve this Doc View Source Include Declaration public virtual Regex Include { get; } Property Value Type Description Regex | Improve this Doc View Source Name Declaration public virtual string Name { get; } Property Value Type Description String Methods | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.DfmIncludeBlockToken.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmIncludeBlockToken.html",
    "title": "Class DfmIncludeBlockToken | DocFX website",
    "keywords": "Class DfmIncludeBlockToken Inheritance Object DfmIncludeBlockToken Namespace : Microsoft.DocAsCode.Dfm Assembly : Microsoft.DocAsCode.Dfm.dll Syntax public class DfmIncludeBlockToken : IMarkdownToken Constructors | Improve this Doc View Source DfmIncludeBlockToken(IMarkdownRule, IMarkdownContext, String, String, String, SourceInfo) Declaration public DfmIncludeBlockToken(IMarkdownRule rule, IMarkdownContext context, string src, string name, string title, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context String src String name String title SourceInfo sourceInfo | Improve this Doc View Source DfmIncludeBlockToken(IMarkdownRule, IMarkdownContext, String, String, String, String, SourceInfo) Declaration [Obsolete] public DfmIncludeBlockToken(IMarkdownRule rule, IMarkdownContext context, string src, string name, string title, string raw, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context String src String name String title String raw SourceInfo sourceInfo Properties | Improve this Doc View Source Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description String | Improve this Doc View Source Raw Declaration [Obsolete] public string Raw { get; } Property Value Type Description String | Improve this Doc View Source Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule | Improve this Doc View Source SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo | Improve this Doc View Source Src Declaration public string Src { get; } Property Value Type Description String | Improve this Doc View Source Title Declaration public string Title { get; } Property Value Type Description String (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.DfmIncludeBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmIncludeBlockRule.html",
    "title": "Class DfmIncludeBlockRule | DocFX website",
    "keywords": "Class DfmIncludeBlockRule Inheritance Object DfmIncludeBlockRule Namespace : Microsoft.DocAsCode.Dfm Assembly : Microsoft.DocAsCode.Dfm.dll Syntax public class DfmIncludeBlockRule : IMarkdownRule Properties | Improve this Doc View Source Include Declaration [Obsolete] public virtual Regex Include { get; } Property Value Type Description Regex | Improve this Doc View Source IncludeMatcher Declaration public virtual Matcher IncludeMatcher { get; } Property Value Type Description Matcher | Improve this Doc View Source Name Declaration public virtual string Name { get; } Property Value Type Description String Methods | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.DfmFencesToken.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmFencesToken.html",
    "title": "Class DfmFencesToken | DocFX website",
    "keywords": "Class DfmFencesToken Inheritance Object DfmFencesToken DfmFencesBlockToken DfmFencesInlineToken Namespace : Microsoft.DocAsCode.Dfm Assembly : Microsoft.DocAsCode.Dfm.dll Syntax public abstract class DfmFencesToken : IMarkdownToken Constructors | Improve this Doc View Source DfmFencesToken(IMarkdownRule, IMarkdownContext, String, String, SourceInfo, String, String, IDfmFencesBlockPathQueryOption) Declaration [Obsolete] public DfmFencesToken(IMarkdownRule rule, IMarkdownContext context, string name, string path, SourceInfo sourceInfo, string lang, string title, IDfmFencesBlockPathQueryOption pathQueryOption) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context String name String path SourceInfo sourceInfo String lang String title IDfmFencesBlockPathQueryOption pathQueryOption | Improve this Doc View Source DfmFencesToken(IMarkdownRule, IMarkdownContext, String, String, SourceInfo, String, String, IDfmFencesBlockPathQueryOption, String) Declaration [Obsolete] public DfmFencesToken(IMarkdownRule rule, IMarkdownContext context, string name, string path, SourceInfo sourceInfo, string lang, string title, IDfmFencesBlockPathQueryOption pathQueryOption, string queryStringAndFragment) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context String name String path SourceInfo sourceInfo String lang String title IDfmFencesBlockPathQueryOption pathQueryOption String queryStringAndFragment | Improve this Doc View Source DfmFencesToken(IMarkdownRule, IMarkdownContext, String, String, SourceInfo, String, String, String) Declaration public DfmFencesToken(IMarkdownRule rule, IMarkdownContext context, string name, string path, SourceInfo sourceInfo, string lang, string title, string queryStringAndFragment) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context String name String path SourceInfo sourceInfo String lang String title String queryStringAndFragment Properties | Improve this Doc View Source Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext | Improve this Doc View Source Lang Declaration public string Lang { get; } Property Value Type Description String | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description String | Improve this Doc View Source Path Declaration public string Path { get; } Property Value Type Description String | Improve this Doc View Source PathQueryOption Declaration [Obsolete(\"use QueryStringAndFragment\")] public IDfmFencesBlockPathQueryOption PathQueryOption { get; } Property Value Type Description IDfmFencesBlockPathQueryOption | Improve this Doc View Source QueryStringAndFragment Declaration public string QueryStringAndFragment { get; } Property Value Type Description String | Improve this Doc View Source Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule | Improve this Doc View Source SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo | Improve this Doc View Source Title Declaration public string Title { get; } Property Value Type Description String (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.DfmFencesRule.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmFencesRule.html",
    "title": "Class DfmFencesRule | DocFX website",
    "keywords": "Class DfmFencesRule Inheritance Object DfmFencesRule DfmFencesBlockRule DfmFencesInlineRule Namespace : Microsoft.DocAsCode.Dfm Assembly : Microsoft.DocAsCode.Dfm.dll Syntax public abstract class DfmFencesRule : IMarkdownRule Properties | Improve this Doc View Source Name Declaration public abstract string Name { get; } Property Value Type Description String Methods | Improve this Doc View Source ParsePathQueryString(String, String) Declaration [Obsolete(\"use DfmCodeExtractor.ParsePathQueryString\")] public static IDfmFencesBlockPathQueryOption ParsePathQueryString(string queryOption, string queryString) Parameters Type Name Description String queryOption String queryString Returns Type Description IDfmFencesBlockPathQueryOption | Improve this Doc View Source ParsePathQueryString(String, String, Boolean) Declaration [Obsolete(\"use DfmCodeExtractor.ParsePathQueryString\")] public static IDfmFencesBlockPathQueryOption ParsePathQueryString(string queryOption, string queryString, bool noCache = false) Parameters Type Name Description String queryOption String queryString Boolean noCache Returns Type Description IDfmFencesBlockPathQueryOption | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public abstract IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.DfmFencesInlineToken.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmFencesInlineToken.html",
    "title": "Class DfmFencesInlineToken | DocFX website",
    "keywords": "Class DfmFencesInlineToken Inheritance Object DfmFencesToken DfmFencesInlineToken Inherited Members DfmFencesToken.Rule DfmFencesToken.Context DfmFencesToken.Path DfmFencesToken.Lang DfmFencesToken.Name DfmFencesToken.Title DfmFencesToken.QueryStringAndFragment DfmFencesToken.PathQueryOption DfmFencesToken.SourceInfo Namespace : Microsoft.DocAsCode.Dfm Assembly : Microsoft.DocAsCode.Dfm.dll Syntax public class DfmFencesInlineToken : DfmFencesToken Constructors | Improve this Doc View Source DfmFencesInlineToken(IMarkdownRule, IMarkdownContext, String, String, SourceInfo, String, String, IDfmFencesBlockPathQueryOption) Declaration [Obsolete] public DfmFencesInlineToken(IMarkdownRule rule, IMarkdownContext context, string name, string path, SourceInfo sourceInfo, string lang = null, string title = null, IDfmFencesBlockPathQueryOption pathQueryOption = null) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context String name String path SourceInfo sourceInfo String lang String title IDfmFencesBlockPathQueryOption pathQueryOption | Improve this Doc View Source DfmFencesInlineToken(IMarkdownRule, IMarkdownContext, String, String, SourceInfo, String, String, IDfmFencesBlockPathQueryOption, String) Declaration [Obsolete] public DfmFencesInlineToken(IMarkdownRule rule, IMarkdownContext context, string name, string path, SourceInfo sourceInfo, string lang = null, string title = null, IDfmFencesBlockPathQueryOption pathQueryOption = null, string queryStringAndFragment = null) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context String name String path SourceInfo sourceInfo String lang String title IDfmFencesBlockPathQueryOption pathQueryOption String queryStringAndFragment | Improve this Doc View Source DfmFencesInlineToken(IMarkdownRule, IMarkdownContext, String, String, SourceInfo, String, String, String) Declaration public DfmFencesInlineToken(IMarkdownRule rule, IMarkdownContext context, string name, string path, SourceInfo sourceInfo, string lang = null, string title = null, string queryStringAndFragment = null) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context String name String path SourceInfo sourceInfo String lang String title String queryStringAndFragment (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.DfmFencesInlineRule.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmFencesInlineRule.html",
    "title": "Class DfmFencesInlineRule | DocFX website",
    "keywords": "Class DfmFencesInlineRule Inheritance Object DfmFencesRule DfmFencesInlineRule Inherited Members DfmFencesRule.ParsePathQueryString(String, String) DfmFencesRule.ParsePathQueryString(String, String, Boolean) Namespace : Microsoft.DocAsCode.Dfm Assembly : Microsoft.DocAsCode.Dfm.dll Syntax public class DfmFencesInlineRule : DfmFencesRule Properties | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description String Overrides DfmFencesRule.Name Methods | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public override IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken Overrides DfmFencesRule.TryMatch(IMarkdownParser, IMarkdownParsingContext) (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.DfmFencesBlockToken.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmFencesBlockToken.html",
    "title": "Class DfmFencesBlockToken | DocFX website",
    "keywords": "Class DfmFencesBlockToken Inheritance Object DfmFencesToken DfmFencesBlockToken Inherited Members DfmFencesToken.Rule DfmFencesToken.Context DfmFencesToken.Path DfmFencesToken.Lang DfmFencesToken.Name DfmFencesToken.Title DfmFencesToken.QueryStringAndFragment DfmFencesToken.PathQueryOption DfmFencesToken.SourceInfo Namespace : Microsoft.DocAsCode.Dfm Assembly : Microsoft.DocAsCode.Dfm.dll Syntax public class DfmFencesBlockToken : DfmFencesToken Constructors | Improve this Doc View Source DfmFencesBlockToken(IMarkdownRule, IMarkdownContext, String, String, SourceInfo, String, String, IDfmFencesBlockPathQueryOption) Declaration [Obsolete] public DfmFencesBlockToken(IMarkdownRule rule, IMarkdownContext context, string name, string path, SourceInfo sourceInfo, string lang = null, string title = null, IDfmFencesBlockPathQueryOption pathQueryOption = null) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context String name String path SourceInfo sourceInfo String lang String title IDfmFencesBlockPathQueryOption pathQueryOption | Improve this Doc View Source DfmFencesBlockToken(IMarkdownRule, IMarkdownContext, String, String, SourceInfo, String, String, IDfmFencesBlockPathQueryOption, String) Declaration [Obsolete] public DfmFencesBlockToken(IMarkdownRule rule, IMarkdownContext context, string name, string path, SourceInfo sourceInfo, string lang = null, string title = null, IDfmFencesBlockPathQueryOption pathQueryOption = null, string queryStringAndFragment = null) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context String name String path SourceInfo sourceInfo String lang String title IDfmFencesBlockPathQueryOption pathQueryOption String queryStringAndFragment | Improve this Doc View Source DfmFencesBlockToken(IMarkdownRule, IMarkdownContext, String, String, SourceInfo, String, String, String) Declaration public DfmFencesBlockToken(IMarkdownRule rule, IMarkdownContext context, string name, string path, SourceInfo sourceInfo, string lang = null, string title = null, string queryStringAndFragment = null) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context String name String path SourceInfo sourceInfo String lang String title String queryStringAndFragment (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.DfmBlockquoteHelper.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmBlockquoteHelper.html",
    "title": "Class DfmBlockquoteHelper | DocFX website",
    "keywords": "Class DfmBlockquoteHelper Inheritance Object DfmBlockquoteHelper Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Dfm Assembly : Microsoft.DocAsCode.Dfm.dll Syntax public class DfmBlockquoteHelper Methods | Improve this Doc View Source SplitBlockquoteTokens(ImmutableArray<IMarkdownToken>) Declaration public static List<SplitToken> SplitBlockquoteTokens(ImmutableArray<IMarkdownToken> tokens) Parameters Type Name Description ImmutableArray < IMarkdownToken > tokens Returns Type Description List < SplitToken > (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.DfmBlockquoteBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmBlockquoteBlockRule.html",
    "title": "Class DfmBlockquoteBlockRule | DocFX website",
    "keywords": "Class DfmBlockquoteBlockRule Inheritance Object DfmBlockquoteBlockRule Namespace : Microsoft.DocAsCode.Dfm Assembly : Microsoft.DocAsCode.Dfm.dll Syntax public class DfmBlockquoteBlockRule : MarkdownBlockquoteBlockRule Properties | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description String Methods | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public override IMarkdownToken TryMatch(IMarkdownParser parser, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser parser IMarkdownParsingContext context Returns Type Description IMarkdownToken (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.CustomizedRendererCreator.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.CustomizedRendererCreator.html",
    "title": "Class CustomizedRendererCreator | DocFX website",
    "keywords": "Class CustomizedRendererCreator Inheritance Object CustomizedRendererCreator Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Dfm Assembly : Microsoft.DocAsCode.Dfm.dll Syntax public static class CustomizedRendererCreator Methods | Improve this Doc View Source CreateRenderer(Object, IEnumerable<IDfmCustomizedRendererPartProvider>, IReadOnlyDictionary<String, Object>) Declaration public static object CreateRenderer(object innerRenderer, IEnumerable<IDfmCustomizedRendererPartProvider> partProviders, IReadOnlyDictionary<string, object> parameters) Parameters Type Name Description Object innerRenderer IEnumerable < IDfmCustomizedRendererPartProvider > partProviders IReadOnlyDictionary < String , Object > parameters Returns Type Description Object (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.CodeSnippetTagType.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.CodeSnippetTagType.html",
    "title": "Enum CodeSnippetTagType | DocFX website",
    "keywords": "Enum CodeSnippetTagType Namespace : Microsoft.DocAsCode.Dfm Assembly : Microsoft.DocAsCode.Dfm.dll Syntax public enum CodeSnippetTagType Fields Name Description End Start (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.CodeSnippetTag.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.CodeSnippetTag.html",
    "title": "Class CodeSnippetTag | DocFX website",
    "keywords": "Class CodeSnippetTag Inheritance Object CodeSnippetTag Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Dfm Assembly : Microsoft.DocAsCode.Dfm.dll Syntax public class CodeSnippetTag Constructors | Improve this Doc View Source CodeSnippetTag(String, Int32, CodeSnippetTagType) Declaration public CodeSnippetTag(string name, int line, CodeSnippetTagType type) Parameters Type Name Description String name Int32 line CodeSnippetTagType type Properties | Improve this Doc View Source Line Declaration public int Line { get; } Property Value Type Description Int32 | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description String | Improve this Doc View Source Type Declaration public CodeSnippetTagType Type { get; } Property Value Type Description CodeSnippetTagType (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.CodeSnippetRegexExtractor.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.CodeSnippetRegexExtractor.html",
    "title": "Class CodeSnippetRegexExtractor | DocFX website",
    "keywords": "Class CodeSnippetRegexExtractor Inheritance Object CodeSnippetRegexExtractor FlatNameCodeSnippetExtractor RecursiveNameCodeSnippetExtractor Implements ICodeSnippetExtractor Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Dfm Assembly : Microsoft.DocAsCode.Dfm.dll Syntax public abstract class CodeSnippetRegexExtractor : ICodeSnippetExtractor Methods | Improve this Doc View Source GetAll(String[]) Declaration public Dictionary<string, DfmTagNameResolveResult> GetAll(string[] lines) Parameters Type Name Description String [] lines Returns Type Description Dictionary < String , DfmTagNameResolveResult > | Improve this Doc View Source ResolveCodeSnippetTags(String[]) Declaration protected abstract List<CodeSnippetTag> ResolveCodeSnippetTags(string[] lines) Parameters Type Name Description String [] lines Returns Type Description List < CodeSnippetTag > Implements ICodeSnippetExtractor (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.CodeLanguageExtractorsBuilder.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.CodeLanguageExtractorsBuilder.html",
    "title": "Class CodeLanguageExtractorsBuilder | DocFX website",
    "keywords": "Class CodeLanguageExtractorsBuilder Inheritance Object CodeLanguageExtractorsBuilder Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Dfm Assembly : Microsoft.DocAsCode.Dfm.dll Syntax public sealed class CodeLanguageExtractorsBuilder Methods | Improve this Doc View Source Add(ICodeSnippetExtractor, String[]) Declaration public CodeLanguageExtractorsBuilder Add(ICodeSnippetExtractor extractor, params string[] keys) Parameters Type Name Description ICodeSnippetExtractor extractor String [] keys Returns Type Description CodeLanguageExtractorsBuilder | Improve this Doc View Source AddAlias(Func<String, String>) Declaration public CodeLanguageExtractorsBuilder AddAlias(Func<string, string> func) Parameters Type Name Description Func < String , String > func Returns Type Description CodeLanguageExtractorsBuilder | Improve this Doc View Source AddAlias(String, String[]) Declaration public CodeLanguageExtractorsBuilder AddAlias(string key, params string[] alias) Parameters Type Name Description String key String [] alias Returns Type Description CodeLanguageExtractorsBuilder | Improve this Doc View Source ToDictionay() Declaration public Dictionary<string, List<ICodeSnippetExtractor>> ToDictionay() Returns Type Description Dictionary < String , List < ICodeSnippetExtractor >> (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.AggregateBlockPathQueryOptionCreator.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.AggregateBlockPathQueryOptionCreator.html",
    "title": "Class AggregateBlockPathQueryOptionCreator | DocFX website",
    "keywords": "Class AggregateBlockPathQueryOptionCreator Inheritance Object AggregateBlockPathQueryOptionCreator Implements IDfmFencesBlockPathQueryOptionCreator Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Dfm Assembly : Microsoft.DocAsCode.Dfm.dll Syntax public class AggregateBlockPathQueryOptionCreator : IDfmFencesBlockPathQueryOptionCreator Constructors | Improve this Doc View Source AggregateBlockPathQueryOptionCreator(IDfmFencesBlockPathQueryOptionCreator[]) Declaration public AggregateBlockPathQueryOptionCreator(IDfmFencesBlockPathQueryOptionCreator[] pathQueryOptionCreaters = null) Parameters Type Name Description IDfmFencesBlockPathQueryOptionCreator [] pathQueryOptionCreaters Methods | Improve this Doc View Source GetDefaultOptionCreaters(CodeLanguageExtractorsBuilder) Declaration public static IDfmFencesBlockPathQueryOptionCreator[] GetDefaultOptionCreaters(CodeLanguageExtractorsBuilder builder = null) Parameters Type Name Description CodeLanguageExtractorsBuilder builder Returns Type Description IDfmFencesBlockPathQueryOptionCreator [] | Improve this Doc View Source ParseQueryOrFragment(DfmFencesBlockPathQueryOptionParameters, Boolean) Declaration public IDfmFencesBlockPathQueryOption ParseQueryOrFragment(DfmFencesBlockPathQueryOptionParameters parameters, bool noCache) Parameters Type Name Description DfmFencesBlockPathQueryOptionParameters parameters Boolean noCache Returns Type Description IDfmFencesBlockPathQueryOption Implements IDfmFencesBlockPathQueryOptionCreator (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.DataContracts.UniversalReference.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.UniversalReference.html",
    "title": "Namespace Microsoft.DocAsCode.DataContracts.UniversalReference | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.DataContracts.UniversalReference Classes ApiParameter ArgumentInfo AttributeInfo ExceptionInfo InheritanceTree ItemViewModel LinkInfo NamedArgumentInfo PageViewModel SyntaxDetailViewModel Enums LinkType (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.DataContracts.UniversalReference.SyntaxDetailViewModel.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.UniversalReference.SyntaxDetailViewModel.html",
    "title": "Class SyntaxDetailViewModel | DocFX website",
    "keywords": "Class SyntaxDetailViewModel Inheritance Object SyntaxDetailViewModel Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.DataContracts.UniversalReference Assembly : Microsoft.DocAsCode.DataContracts.UniversalReference.dll Syntax [Serializable] public class SyntaxDetailViewModel Properties | Improve this Doc View Source Content Declaration [YamlMember(Alias = \"content\")] [JsonProperty(\"content\")] public string Content { get; set; } Property Value Type Description String | Improve this Doc View Source Contents Declaration [JsonIgnore] public SortedList<string, string> Contents { get; set; } Property Value Type Description SortedList < String , String > | Improve this Doc View Source Metadata Declaration [JsonIgnore] public Dictionary<string, object> Metadata { get; set; } Property Value Type Description Dictionary < String , Object > | Improve this Doc View Source Parameters Declaration [YamlMember(Alias = \"parameters\")] [JsonProperty(\"parameters\")] public List<ApiParameter> Parameters { get; set; } Property Value Type Description List < ApiParameter > | Improve this Doc View Source Return syntax's returns multiple return type is allowed in languages like JavaScript, Python ApiParameter supports multiple types Declaration [YamlMember(Alias = \"return\")] [JsonProperty(\"return\")] public ApiParameter Return { get; set; } Property Value Type Description ApiParameter | Improve this Doc View Source ReturnInDevLangs Declaration [JsonIgnore] public SortedList<string, ApiParameter> ReturnInDevLangs { get; set; } Property Value Type Description SortedList < String , ApiParameter > | Improve this Doc View Source TypeParameters Declaration [YamlMember(Alias = \"typeParameters\")] [JsonProperty(\"typeParameters\")] public List<ApiParameter> TypeParameters { get; set; } Property Value Type Description List < ApiParameter > (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.DataContracts.UniversalReference.PageViewModel.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.UniversalReference.PageViewModel.html",
    "title": "Class PageViewModel | DocFX website",
    "keywords": "Class PageViewModel Inheritance Object PageViewModel Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.DataContracts.UniversalReference Assembly : Microsoft.DocAsCode.DataContracts.UniversalReference.dll Syntax [Serializable] public class PageViewModel Properties | Improve this Doc View Source Items Declaration [YamlMember(Alias = \"items\")] [JsonProperty(\"items\")] public List<ItemViewModel> Items { get; set; } Property Value Type Description List < ItemViewModel > | Improve this Doc View Source Metadata Declaration [JsonExtensionData] public Dictionary<string, object> Metadata { get; set; } Property Value Type Description Dictionary < String , Object > | Improve this Doc View Source References Declaration [YamlMember(Alias = \"references\")] [JsonProperty(\"references\")] public List<ReferenceViewModel> References { get; set; } Property Value Type Description List < ReferenceViewModel > | Improve this Doc View Source ShouldSkipMarkup Declaration [YamlMember(Alias = \"shouldSkipMarkup\")] [JsonProperty(\"shouldSkipMarkup\")] public bool ShouldSkipMarkup { get; set; } Property Value Type Description Boolean (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.DataContracts.UniversalReference.NamedArgumentInfo.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.UniversalReference.NamedArgumentInfo.html",
    "title": "Class NamedArgumentInfo | DocFX website",
    "keywords": "Class NamedArgumentInfo Inheritance Object NamedArgumentInfo Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.DataContracts.UniversalReference Assembly : Microsoft.DocAsCode.DataContracts.UniversalReference.dll Syntax [Serializable] public class NamedArgumentInfo Properties | Improve this Doc View Source Metadata Declaration [JsonExtensionData] public Dictionary<string, object> Metadata { get; set; } Property Value Type Description Dictionary < String , Object > | Improve this Doc View Source Name Declaration [YamlMember(Alias = \"name\")] [JsonProperty(\"name\")] public string Name { get; set; } Property Value Type Description String | Improve this Doc View Source Type Declaration [YamlMember(Alias = \"type\")] [JsonProperty(\"type\")] public string Type { get; set; } Property Value Type Description String | Improve this Doc View Source Value Declaration [YamlMember(Alias = \"value\")] [JsonProperty(\"value\")] public object Value { get; set; } Property Value Type Description Object (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.DataContracts.UniversalReference.LinkType.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.UniversalReference.LinkType.html",
    "title": "Enum LinkType | DocFX website",
    "keywords": "Enum LinkType Namespace : Microsoft.DocAsCode.DataContracts.UniversalReference Assembly : Microsoft.DocAsCode.DataContracts.UniversalReference.dll Syntax [Serializable] public enum LinkType Fields Name Description CRef HRef (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.DataContracts.UniversalReference.LinkInfo.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.UniversalReference.LinkInfo.html",
    "title": "Class LinkInfo | DocFX website",
    "keywords": "Class LinkInfo Inheritance Object LinkInfo Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.DataContracts.UniversalReference Assembly : Microsoft.DocAsCode.DataContracts.UniversalReference.dll Syntax [Serializable] public class LinkInfo Properties | Improve this Doc View Source AltText Declaration [YamlMember(Alias = \"altText\")] [JsonProperty(\"altText\")] public string AltText { get; set; } Property Value Type Description String | Improve this Doc View Source CommentId Declaration [YamlMember(Alias = \"commentId\")] [JsonProperty(\"commentId\")] public string CommentId { get; set; } Property Value Type Description String | Improve this Doc View Source LinkId Declaration [YamlMember(Alias = \"linkId\")] [JsonProperty(\"linkId\")] public string LinkId { get; set; } Property Value Type Description String | Improve this Doc View Source LinkType Declaration [YamlMember(Alias = \"linkType\")] [JsonProperty(\"linkType\")] public LinkType LinkType { get; set; } Property Value Type Description LinkType | Improve this Doc View Source Metadata Declaration [JsonExtensionData] public Dictionary<string, object> Metadata { get; set; } Property Value Type Description Dictionary < String , Object > (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.DataContracts.UniversalReference.ItemViewModel.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.UniversalReference.ItemViewModel.html",
    "title": "Class ItemViewModel | DocFX website",
    "keywords": "Class ItemViewModel Inheritance Object ItemViewModel Implements IOverwriteDocumentViewModel Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.DataContracts.UniversalReference Assembly : Microsoft.DocAsCode.DataContracts.UniversalReference.dll Syntax [Serializable] public class ItemViewModel : IOverwriteDocumentViewModel Properties | Improve this Doc View Source AssemblyNameList Declaration [YamlMember(Alias = \"assemblies.\")] [JsonProperty(\"assemblies.\")] public List<string> AssemblyNameList { get; set; } Property Value Type Description List < String > | Improve this Doc View Source AssemblyNameListInDevLangs Declaration [JsonIgnore] public SortedList<string, List<string>> AssemblyNameListInDevLangs { get; set; } Property Value Type Description SortedList < String , List < String >> | Improve this Doc View Source Children Declaration [YamlMember(Alias = \"children\")] [JsonProperty(\"children\")] public List<string> Children { get; set; } Property Value Type Description List < String > | Improve this Doc View Source ChildrenInDevLangs Declaration [JsonIgnore] public SortedList<string, List<string>> ChildrenInDevLangs { get; set; } Property Value Type Description SortedList < String , List < String >> | Improve this Doc View Source CommentId Declaration [YamlMember(Alias = \"commentId\")] [JsonProperty(\"commentId\")] public string CommentId { get; set; } Property Value Type Description String | Improve this Doc View Source Conceptual item's conceptual content in different dev langs can be put in this property all together Declaration [YamlMember(Alias = \"conceptual\")] [JsonProperty(\"conceptual\")] public string Conceptual { get; set; } Property Value Type Description String | Improve this Doc View Source DerivedClasses Declaration [YamlMember(Alias = \"derivedClasses\")] [JsonProperty(\"derivedClasses\")] public List<string> DerivedClasses { get; set; } Property Value Type Description List < String > | Improve this Doc View Source DerivedClassesInDevLangs Declaration [JsonIgnore] public SortedList<string, List<string>> DerivedClassesInDevLangs { get; set; } Property Value Type Description SortedList < String , List < String >> | Improve this Doc View Source Documentation item's documentation's source detail as ovwrite document targets uid, DocumentationInDevLangs is not supported Declaration [YamlMember(Alias = \"documentation\")] [JsonProperty(\"documentation\")] public SourceDetail Documentation { get; set; } Property Value Type Description SourceDetail | Improve this Doc View Source Examples item's examples content in different dev langs can be put in this property all together Declaration [YamlMember(Alias = \"example\")] [JsonProperty(\"example\")] public List<string> Examples { get; set; } Property Value Type Description List < String > | Improve this Doc View Source Exceptions Declaration [YamlMember(Alias = \"exceptions\")] [JsonProperty(\"exceptions\")] public List<ExceptionInfo> Exceptions { get; set; } Property Value Type Description List < ExceptionInfo > | Improve this Doc View Source ExceptionsInDevLangs Declaration [JsonIgnore] public SortedList<string, List<ExceptionInfo>> ExceptionsInDevLangs { get; set; } Property Value Type Description SortedList < String , List < ExceptionInfo >> | Improve this Doc View Source ExtensionMethods Declaration [YamlMember(Alias = \"extensionMethods\")] [JsonProperty(\"extensionMethods\")] public List<string> ExtensionMethods { get; set; } Property Value Type Description List < String > | Improve this Doc View Source ExtensionMethodsInDevLangs Declaration [JsonIgnore] public SortedList<string, List<string>> ExtensionMethodsInDevLangs { get; set; } Property Value Type Description SortedList < String , List < String >> | Improve this Doc View Source FullName Declaration [YamlMember(Alias = \"fullName\")] [JsonProperty(\"fullName\")] public string FullName { get; set; } Property Value Type Description String | Improve this Doc View Source FullNames Declaration [JsonIgnore] public SortedList<string, string> FullNames { get; set; } Property Value Type Description SortedList < String , String > | Improve this Doc View Source Href item's link URL As an item(uid) can be resolved to only one link in cross reference, HrefInDevLangs is not supported Declaration [YamlMember(Alias = \"href\")] [JsonProperty(\"href\")] public string Href { get; set; } Property Value Type Description String | Improve this Doc View Source Id item's identifier Declaration [YamlMember(Alias = \"id\")] [JsonProperty(\"id\")] public string Id { get; set; } Property Value Type Description String | Improve this Doc View Source Implements Declaration [YamlMember(Alias = \"implements\")] [JsonProperty(\"implements\")] public List<string> Implements { get; set; } Property Value Type Description List < String > | Improve this Doc View Source ImplementsInDevLangs Declaration [JsonIgnore] public SortedList<string, List<string>> ImplementsInDevLangs { get; set; } Property Value Type Description SortedList < String , List < String >> | Improve this Doc View Source Inheritance item's inheritance use tree as multiple inheritance is allowed in languages like Python Declaration [YamlMember(Alias = \"inheritance\")] [JsonProperty(\"inheritance\")] public List<InheritanceTree> Inheritance { get; set; } Property Value Type Description List < InheritanceTree > | Improve this Doc View Source InheritanceInDevLangs Declaration [JsonIgnore] public SortedList<string, List<InheritanceTree>> InheritanceInDevLangs { get; set; } Property Value Type Description SortedList < String , List < InheritanceTree >> | Improve this Doc View Source InheritanceUidReference Declaration [JsonIgnore] [YamlIgnore] public List<string> InheritanceUidReference { get; } Property Value Type Description List < String > | Improve this Doc View Source InheritedMembers Declaration [YamlMember(Alias = \"inheritedMembers\")] [JsonProperty(\"inheritedMembers\")] public List<string> InheritedMembers { get; set; } Property Value Type Description List < String > | Improve this Doc View Source InheritedMembersInDevLangs Declaration [JsonIgnore] public SortedList<string, List<string>> InheritedMembersInDevLangs { get; set; } Property Value Type Description SortedList < String , List < String >> | Improve this Doc View Source Metadata Declaration [JsonIgnore] public Dictionary<string, object> Metadata { get; set; } Property Value Type Description Dictionary < String , Object > | Improve this Doc View Source Name Declaration [YamlMember(Alias = \"name\")] [JsonProperty(\"name\")] public string Name { get; set; } Property Value Type Description String | Improve this Doc View Source Names Declaration [JsonIgnore] public SortedList<string, string> Names { get; set; } Property Value Type Description SortedList < String , String > | Improve this Doc View Source NamespaceName Declaration [YamlMember(Alias = \"namespace\")] [JsonProperty(\"namespace\")] public string NamespaceName { get; set; } Property Value Type Description String | Improve this Doc View Source NamespaceNameInDevLangs Declaration [JsonIgnore] public SortedList<string, string> NamespaceNameInDevLangs { get; set; } Property Value Type Description SortedList < String , String > | Improve this Doc View Source NamesWithType Declaration [JsonIgnore] public SortedList<string, string> NamesWithType { get; set; } Property Value Type Description SortedList < String , String > | Improve this Doc View Source NameWithType Declaration [YamlMember(Alias = \"nameWithType\")] [JsonProperty(\"nameWithType\")] public string NameWithType { get; set; } Property Value Type Description String | Improve this Doc View Source Overload Declaration [YamlMember(Alias = \"overload\")] [JsonProperty(\"overload\")] public string Overload { get; set; } Property Value Type Description String | Improve this Doc View Source OverloadInDevLangs Declaration [JsonIgnore] public SortedList<string, string> OverloadInDevLangs { get; set; } Property Value Type Description SortedList < String , String > | Improve this Doc View Source Overridden Declaration [YamlMember(Alias = \"overridden\")] [JsonProperty(\"overridden\")] public string Overridden { get; set; } Property Value Type Description String | Improve this Doc View Source OverriddenInDevLangs Declaration [JsonIgnore] public SortedList<string, string> OverriddenInDevLangs { get; set; } Property Value Type Description SortedList < String , String > | Improve this Doc View Source Parent Declaration [YamlMember(Alias = \"parent\")] [JsonProperty(\"parent\")] public string Parent { get; set; } Property Value Type Description String | Improve this Doc View Source ParentInDevLangs Declaration [JsonIgnore] public SortedList<string, string> ParentInDevLangs { get; set; } Property Value Type Description SortedList < String , String > | Improve this Doc View Source Platform Declaration [YamlMember(Alias = \"platform\")] [JsonProperty(\"platform\")] public List<string> Platform { get; set; } Property Value Type Description List < String > | Improve this Doc View Source PlatformInDevLangs Declaration [JsonIgnore] public SortedList<string, List<string>> PlatformInDevLangs { get; set; } Property Value Type Description SortedList < String , List < String >> | Improve this Doc View Source Remarks item's remarks content in different dev langs can be put in this property all together Declaration [YamlMember(Alias = \"remarks\")] [JsonProperty(\"remarks\")] public string Remarks { get; set; } Property Value Type Description String | Improve this Doc View Source SeeAlsoContent Declaration [YamlMember(Alias = \"seealsoContent\")] [JsonProperty(\"seealsoContent\")] public string SeeAlsoContent { get; set; } Property Value Type Description String | Improve this Doc View Source SeeAlsos Declaration [YamlMember(Alias = \"seealso\")] [JsonProperty(\"seealso\")] public List<LinkInfo> SeeAlsos { get; set; } Property Value Type Description List < LinkInfo > | Improve this Doc View Source SeeAlsosUidReference Declaration [JsonIgnore] [YamlIgnore] public List<string> SeeAlsosUidReference { get; } Property Value Type Description List < String > | Improve this Doc View Source Sees Declaration [YamlMember(Alias = \"see\")] [JsonProperty(\"see\")] public List<LinkInfo> Sees { get; set; } Property Value Type Description List < LinkInfo > | Improve this Doc View Source SeesUidReference Declaration [JsonIgnore] [YamlIgnore] public List<string> SeesUidReference { get; } Property Value Type Description List < String > | Improve this Doc View Source Source Declaration [YamlMember(Alias = \"source\")] [JsonProperty(\"source\")] public SourceDetail Source { get; set; } Property Value Type Description SourceDetail | Improve this Doc View Source SourceInDevLangs item's source code's source detail in different dev langs Declaration [JsonIgnore] public SortedList<string, SourceDetail> SourceInDevLangs { get; set; } Property Value Type Description SortedList < String , SourceDetail > | Improve this Doc View Source Summary item's summary content in different dev langs can be put in this property all together Declaration [YamlMember(Alias = \"summary\")] [JsonProperty(\"summary\")] public string Summary { get; set; } Property Value Type Description String | Improve this Doc View Source SupportedLanguages Declaration [YamlMember(Alias = \"langs\")] [JsonProperty(\"langs\")] public string[] SupportedLanguages { get; set; } Property Value Type Description String [] | Improve this Doc View Source Syntax item's syntax as SyntaxDetailViewModel support different dev langs, SyntaxInDevLangs is not necessary Declaration [YamlMember(Alias = \"syntax\")] [JsonProperty(\"syntax\")] public SyntaxDetailViewModel Syntax { get; set; } Property Value Type Description SyntaxDetailViewModel | Improve this Doc View Source Type Declaration [YamlMember(Alias = \"type\")] [JsonProperty(\"type\")] public string Type { get; set; } Property Value Type Description String | Improve this Doc View Source Uid item's unique identifier Declaration [YamlMember(Alias = \"uid\")] [JsonProperty(\"uid\")] public string Uid { get; set; } Property Value Type Description String Implements IOverwriteDocumentViewModel (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.DataContracts.UniversalReference.InheritanceTree.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.UniversalReference.InheritanceTree.html",
    "title": "Class InheritanceTree | DocFX website",
    "keywords": "Class InheritanceTree Inheritance Object InheritanceTree Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.DataContracts.UniversalReference Assembly : Microsoft.DocAsCode.DataContracts.UniversalReference.dll Syntax [Serializable] public class InheritanceTree Properties | Improve this Doc View Source Inheritance item's inheritance multiple inheritance is allowed in languages like Python Declaration [YamlMember(Alias = \"inheritance\")] [JsonProperty(\"inheritance\")] public List<InheritanceTree> Inheritance { get; set; } Property Value Type Description List < InheritanceTree > | Improve this Doc View Source Metadata Declaration [JsonExtensionData] public Dictionary<string, object> Metadata { get; set; } Property Value Type Description Dictionary < String , Object > | Improve this Doc View Source Type Declaration [YamlMember(Alias = \"type\")] [JsonProperty(\"type\")] public string Type { get; set; } Property Value Type Description String (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.DataContracts.ManagedReference.NamedArgumentInfo.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.ManagedReference.NamedArgumentInfo.html",
    "title": "Class NamedArgumentInfo | DocFX website",
    "keywords": "Class NamedArgumentInfo Inheritance Object NamedArgumentInfo Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.DataContracts.ManagedReference Assembly : Microsoft.DocAsCode.DataContracts.ManagedReference.dll Syntax [Serializable] public class NamedArgumentInfo Properties | Improve this Doc View Source Name Declaration [YamlMember(Alias = \"name\")] [JsonProperty(\"name\")] public string Name { get; set; } Property Value Type Description String | Improve this Doc View Source Type Declaration [YamlMember(Alias = \"type\")] [JsonProperty(\"type\")] public string Type { get; set; } Property Value Type Description String | Improve this Doc View Source Value Declaration [YamlMember(Alias = \"value\")] [JsonProperty(\"value\")] public object Value { get; set; } Property Value Type Description Object (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.DataContracts.ManagedReference.MemberType.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.ManagedReference.MemberType.html",
    "title": "Enum MemberType | DocFX website",
    "keywords": "Enum MemberType Namespace : Microsoft.DocAsCode.DataContracts.ManagedReference Assembly : Microsoft.DocAsCode.DataContracts.ManagedReference.dll Syntax [Serializable] public enum MemberType Fields Name Description Assembly AttachedEvent AttachedProperty Class Constructor Container Default Delegate Enum Event Field Interface Method Namespace Operator Property Struct Toc Extension Methods YamlViewModelExtensions.IsPageLevel() YamlViewModelExtensions.AllowMultipleItems() (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.DataContracts.ManagedReference.LinkType.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.ManagedReference.LinkType.html",
    "title": "Enum LinkType | DocFX website",
    "keywords": "Enum LinkType Namespace : Microsoft.DocAsCode.DataContracts.ManagedReference Assembly : Microsoft.DocAsCode.DataContracts.ManagedReference.dll Syntax [Serializable] public enum LinkType Fields Name Description CRef HRef (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.DataContracts.ManagedReference.LinkInfo.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.ManagedReference.LinkInfo.html",
    "title": "Class LinkInfo | DocFX website",
    "keywords": "Class LinkInfo Inheritance Object LinkInfo Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.DataContracts.ManagedReference Assembly : Microsoft.DocAsCode.DataContracts.ManagedReference.dll Syntax [Serializable] public class LinkInfo Properties | Improve this Doc View Source AltText Declaration [YamlMember(Alias = \"altText\")] [JsonProperty(\"altText\")] public string AltText { get; set; } Property Value Type Description String | Improve this Doc View Source CommentId Declaration [YamlMember(Alias = \"commentId\")] [JsonProperty(\"commentId\")] public string CommentId { get; set; } Property Value Type Description String | Improve this Doc View Source LinkId Declaration [YamlMember(Alias = \"linkId\")] [JsonProperty(\"linkId\")] public string LinkId { get; set; } Property Value Type Description String | Improve this Doc View Source LinkType Declaration [YamlMember(Alias = \"linkType\")] [JsonProperty(\"linkType\")] public LinkType LinkType { get; set; } Property Value Type Description LinkType Methods | Improve this Doc View Source Clone() Declaration public LinkInfo Clone() Returns Type Description LinkInfo (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.DataContracts.ManagedReference.ItemViewModel.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.ManagedReference.ItemViewModel.html",
    "title": "Class ItemViewModel | DocFX website",
    "keywords": "Class ItemViewModel Inheritance Object ItemViewModel Implements IOverwriteDocumentViewModel Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.DataContracts.ManagedReference Assembly : Microsoft.DocAsCode.DataContracts.ManagedReference.dll Syntax [Serializable] public class ItemViewModel : IOverwriteDocumentViewModel Properties | Improve this Doc View Source AdditionalNotes Declaration [YamlMember(Alias = \"additionalNotes\")] [JsonProperty(\"additionalNotes\")] public AdditionalNotes AdditionalNotes { get; set; } Property Value Type Description AdditionalNotes | Improve this Doc View Source AssemblyNameList Declaration [YamlMember(Alias = \"assemblies\")] [JsonProperty(\"assemblies\")] public List<string> AssemblyNameList { get; set; } Property Value Type Description List < String > | Improve this Doc View Source Attributes Declaration [YamlMember(Alias = \"attributes\")] [JsonProperty(\"attributes\")] public List<AttributeInfo> Attributes { get; set; } Property Value Type Description List < AttributeInfo > | Improve this Doc View Source Children Declaration [YamlMember(Alias = \"children\")] [JsonProperty(\"children\")] public List<string> Children { get; set; } Property Value Type Description List < String > | Improve this Doc View Source CommentId Declaration [YamlMember(Alias = \"commentId\")] [JsonProperty(\"commentId\")] public string CommentId { get; set; } Property Value Type Description String | Improve this Doc View Source Conceptual Declaration [YamlMember(Alias = \"conceptual\")] [JsonProperty(\"conceptual\")] public string Conceptual { get; set; } Property Value Type Description String | Improve this Doc View Source DerivedClasses Declaration [YamlMember(Alias = \"derivedClasses\")] [JsonProperty(\"derivedClasses\")] public List<string> DerivedClasses { get; set; } Property Value Type Description List < String > | Improve this Doc View Source Documentation Declaration [YamlMember(Alias = \"documentation\")] [JsonProperty(\"documentation\")] public SourceDetail Documentation { get; set; } Property Value Type Description SourceDetail | Improve this Doc View Source Examples Declaration [YamlMember(Alias = \"example\")] [JsonProperty(\"example\")] public List<string> Examples { get; set; } Property Value Type Description List < String > | Improve this Doc View Source Exceptions Declaration [YamlMember(Alias = \"exceptions\")] [JsonProperty(\"exceptions\")] public List<ExceptionInfo> Exceptions { get; set; } Property Value Type Description List < ExceptionInfo > | Improve this Doc View Source ExtensionMethods Declaration [YamlMember(Alias = \"extensionMethods\")] [JsonProperty(\"extensionMethods\")] public List<string> ExtensionMethods { get; set; } Property Value Type Description List < String > | Improve this Doc View Source FullName Declaration [YamlMember(Alias = \"fullName\")] [JsonProperty(\"fullName\")] public string FullName { get; set; } Property Value Type Description String | Improve this Doc View Source FullNameForCSharp Declaration [YamlIgnore] [JsonIgnore] public string FullNameForCSharp { get; set; } Property Value Type Description String | Improve this Doc View Source FullNameForVB Declaration [YamlIgnore] [JsonIgnore] public string FullNameForVB { get; set; } Property Value Type Description String | Improve this Doc View Source FullNames Declaration [JsonIgnore] public SortedList<string, string> FullNames { get; set; } Property Value Type Description SortedList < String , String > | Improve this Doc View Source Href Declaration [YamlMember(Alias = \"href\")] [JsonProperty(\"href\")] public string Href { get; set; } Property Value Type Description String | Improve this Doc View Source Id Declaration [YamlMember(Alias = \"id\")] [JsonProperty(\"id\")] public string Id { get; set; } Property Value Type Description String | Improve this Doc View Source Implements Declaration [YamlMember(Alias = \"implements\")] [JsonProperty(\"implements\")] public List<string> Implements { get; set; } Property Value Type Description List < String > | Improve this Doc View Source Inheritance Declaration [YamlMember(Alias = \"inheritance\")] [JsonProperty(\"inheritance\")] public List<string> Inheritance { get; set; } Property Value Type Description List < String > | Improve this Doc View Source InheritedMembers Declaration [YamlMember(Alias = \"inheritedMembers\")] [JsonProperty(\"inheritedMembers\")] public List<string> InheritedMembers { get; set; } Property Value Type Description List < String > | Improve this Doc View Source IsExplicitInterfaceImplementation Declaration [YamlMember(Alias = \"isEii\")] [JsonProperty(\"isEii\")] public bool IsExplicitInterfaceImplementation { get; set; } Property Value Type Description Boolean | Improve this Doc View Source IsExtensionMethod Declaration [YamlMember(Alias = \"isExtensionMethod\")] [JsonProperty(\"isExtensionMethod\")] public bool IsExtensionMethod { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Metadata Declaration [JsonIgnore] public Dictionary<string, object> Metadata { get; set; } Property Value Type Description Dictionary < String , Object > | Improve this Doc View Source Modifiers Declaration [JsonIgnore] public SortedList<string, List<string>> Modifiers { get; set; } Property Value Type Description SortedList < String , List < String >> | Improve this Doc View Source Name Declaration [YamlMember(Alias = \"name\")] [JsonProperty(\"name\")] public string Name { get; set; } Property Value Type Description String | Improve this Doc View Source NameForCSharp Declaration [YamlIgnore] [JsonIgnore] public string NameForCSharp { get; set; } Property Value Type Description String | Improve this Doc View Source NameForVB Declaration [YamlIgnore] [JsonIgnore] public string NameForVB { get; set; } Property Value Type Description String | Improve this Doc View Source Names Declaration [JsonIgnore] public SortedList<string, string> Names { get; set; } Property Value Type Description SortedList < String , String > | Improve this Doc View Source NamespaceName Declaration [YamlMember(Alias = \"namespace\")] [JsonProperty(\"namespace\")] public string NamespaceName { get; set; } Property Value Type Description String | Improve this Doc View Source NamesWithType Declaration [JsonIgnore] public SortedList<string, string> NamesWithType { get; set; } Property Value Type Description SortedList < String , String > | Improve this Doc View Source NameWithType Declaration [YamlMember(Alias = \"nameWithType\")] [JsonProperty(\"nameWithType\")] public string NameWithType { get; set; } Property Value Type Description String | Improve this Doc View Source NameWithTypeForCSharp Declaration [YamlIgnore] [JsonIgnore] public string NameWithTypeForCSharp { get; set; } Property Value Type Description String | Improve this Doc View Source NameWithTypeForVB Declaration [YamlIgnore] [JsonIgnore] public string NameWithTypeForVB { get; set; } Property Value Type Description String | Improve this Doc View Source Overload Declaration [YamlMember(Alias = \"overload\")] [JsonProperty(\"overload\")] public string Overload { get; set; } Property Value Type Description String | Improve this Doc View Source Overridden Declaration [YamlMember(Alias = \"overridden\")] [JsonProperty(\"overridden\")] public string Overridden { get; set; } Property Value Type Description String | Improve this Doc View Source Parent Declaration [YamlMember(Alias = \"parent\")] [JsonProperty(\"parent\")] public string Parent { get; set; } Property Value Type Description String | Improve this Doc View Source Platform Declaration [YamlMember(Alias = \"platform\")] [JsonProperty(\"platform\")] public List<string> Platform { get; set; } Property Value Type Description List < String > | Improve this Doc View Source Remarks Declaration [YamlMember(Alias = \"remarks\")] [JsonProperty(\"remarks\")] public string Remarks { get; set; } Property Value Type Description String | Improve this Doc View Source SeeAlsos Declaration [YamlMember(Alias = \"seealso\")] [JsonProperty(\"seealso\")] public List<LinkInfo> SeeAlsos { get; set; } Property Value Type Description List < LinkInfo > | Improve this Doc View Source SeeAlsosUidReference Declaration [JsonIgnore] [YamlIgnore] public List<string> SeeAlsosUidReference { get; } Property Value Type Description List < String > | Improve this Doc View Source Sees Declaration [YamlMember(Alias = \"see\")] [JsonProperty(\"see\")] public List<LinkInfo> Sees { get; set; } Property Value Type Description List < LinkInfo > | Improve this Doc View Source SeesUidReference Declaration [JsonIgnore] [YamlIgnore] public List<string> SeesUidReference { get; } Property Value Type Description List < String > | Improve this Doc View Source Source Declaration [YamlMember(Alias = \"source\")] [JsonProperty(\"source\")] public SourceDetail Source { get; set; } Property Value Type Description SourceDetail | Improve this Doc View Source Summary Declaration [YamlMember(Alias = \"summary\")] [JsonProperty(\"summary\")] public string Summary { get; set; } Property Value Type Description String | Improve this Doc View Source SupportedLanguages Declaration [YamlMember(Alias = \"langs\")] [JsonProperty(\"langs\")] public string[] SupportedLanguages { get; set; } Property Value Type Description String [] | Improve this Doc View Source Syntax Declaration [YamlMember(Alias = \"syntax\")] [JsonProperty(\"syntax\")] public SyntaxDetailViewModel Syntax { get; set; } Property Value Type Description SyntaxDetailViewModel | Improve this Doc View Source Type Declaration [YamlMember(Alias = \"type\")] [JsonProperty(\"type\")] public MemberType? Type { get; set; } Property Value Type Description Nullable < MemberType > | Improve this Doc View Source Uid Declaration [YamlMember(Alias = \"uid\")] [JsonProperty(\"uid\")] public string Uid { get; set; } Property Value Type Description String Implements IOverwriteDocumentViewModel (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.DataContracts.ManagedReference.ExceptionInfo.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.ManagedReference.ExceptionInfo.html",
    "title": "Class ExceptionInfo | DocFX website",
    "keywords": "Class ExceptionInfo Inheritance Object ExceptionInfo Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.DataContracts.ManagedReference Assembly : Microsoft.DocAsCode.DataContracts.ManagedReference.dll Syntax [Serializable] public class ExceptionInfo Properties | Improve this Doc View Source CommentId Declaration [YamlMember(Alias = \"commentId\")] [JsonProperty(\"commentId\")] public string CommentId { get; set; } Property Value Type Description String | Improve this Doc View Source Description Declaration [YamlMember(Alias = \"description\")] [JsonProperty(\"description\")] public string Description { get; set; } Property Value Type Description String | Improve this Doc View Source Type Declaration [YamlMember(Alias = \"type\")] [JsonProperty(\"type\")] public string Type { get; set; } Property Value Type Description String Methods | Improve this Doc View Source Clone() Declaration public ExceptionInfo Clone() Returns Type Description ExceptionInfo (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.DataContracts.ManagedReference.AttributeInfo.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.ManagedReference.AttributeInfo.html",
    "title": "Class AttributeInfo | DocFX website",
    "keywords": "Class AttributeInfo Inheritance Object AttributeInfo Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.DataContracts.ManagedReference Assembly : Microsoft.DocAsCode.DataContracts.ManagedReference.dll Syntax [Serializable] public class AttributeInfo Properties | Improve this Doc View Source Arguments Declaration [YamlMember(Alias = \"arguments\")] [JsonProperty(\"arguments\")] public List<ArgumentInfo> Arguments { get; set; } Property Value Type Description List < ArgumentInfo > | Improve this Doc View Source Constructor Declaration [YamlMember(Alias = \"ctor\")] [JsonProperty(\"ctor\")] public string Constructor { get; set; } Property Value Type Description String | Improve this Doc View Source NamedArguments Declaration [YamlMember(Alias = \"namedArguments\")] [JsonProperty(\"namedArguments\")] public List<NamedArgumentInfo> NamedArguments { get; set; } Property Value Type Description List < NamedArgumentInfo > | Improve this Doc View Source Type Declaration [YamlMember(Alias = \"type\")] [JsonProperty(\"type\")] public string Type { get; set; } Property Value Type Description String (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.DataContracts.ManagedReference.ArgumentInfo.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.ManagedReference.ArgumentInfo.html",
    "title": "Class ArgumentInfo | DocFX website",
    "keywords": "Class ArgumentInfo Inheritance Object ArgumentInfo Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.DataContracts.ManagedReference Assembly : Microsoft.DocAsCode.DataContracts.ManagedReference.dll Syntax [Serializable] public class ArgumentInfo Properties | Improve this Doc View Source Type Declaration [YamlMember(Alias = \"type\")] [JsonProperty(\"type\")] public string Type { get; set; } Property Value Type Description String | Improve this Doc View Source Value Declaration [YamlMember(Alias = \"value\")] [JsonProperty(\"value\")] public object Value { get; set; } Property Value Type Description Object (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.DataContracts.ManagedReference.ApiReferenceViewModel.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.ManagedReference.ApiReferenceViewModel.html",
    "title": "Class ApiReferenceViewModel | DocFX website",
    "keywords": "Class ApiReferenceViewModel Inheritance Object SortedDictionary < String , String > ApiReferenceViewModel Implements IDictionary < String , String > ICollection < KeyValuePair < String , String >> IDictionary ICollection IReadOnlyDictionary < String , String > IReadOnlyCollection < KeyValuePair < String , String >> IEnumerable < KeyValuePair < String , String >> IEnumerable Inherited Members System.Collections.Generic.SortedDictionary<System.String, System.String>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.String>>.Add(System.Collections.Generic.KeyValuePair<System.String, System.String>) System.Collections.Generic.SortedDictionary<System.String, System.String>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.String>>.Contains(System.Collections.Generic.KeyValuePair<System.String, System.String>) System.Collections.Generic.SortedDictionary<System.String, System.String>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.String>>.Remove(System.Collections.Generic.KeyValuePair<System.String, System.String>) SortedDictionary<String, String>.Add(String, String) SortedDictionary<String, String>.Clear() SortedDictionary<String, String>.ContainsKey(String) SortedDictionary<String, String>.ContainsValue(String) SortedDictionary<String, String>.CopyTo(KeyValuePair<String, String>[], Int32) SortedDictionary<String, String>.GetEnumerator() System.Collections.Generic.SortedDictionary<System.String, System.String>.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.String>>.GetEnumerator() SortedDictionary<String, String>.Remove(String) SortedDictionary<String, String>.TryGetValue(String, String) SortedDictionary<String, String>.ICollection.CopyTo(Array, Int32) System.Collections.Generic.SortedDictionary<System.String, System.String>.System.Collections.IDictionary.get_Item(System.Object) System.Collections.Generic.SortedDictionary<System.String, System.String>.System.Collections.IDictionary.set_Item(System.Object, System.Object) SortedDictionary<String, String>.IDictionary.Add(Object, Object) SortedDictionary<String, String>.IDictionary.Contains(Object) SortedDictionary<String, String>.IDictionary.GetEnumerator() SortedDictionary<String, String>.IDictionary.Remove(Object) SortedDictionary<String, String>.IEnumerable.GetEnumerator() System.Collections.Generic.SortedDictionary<System.String, System.String>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.String>>.IsReadOnly SortedDictionary<String, String>.Item[String] SortedDictionary<String, String>.Count SortedDictionary<String, String>.Comparer SortedDictionary<String, String>.Keys System.Collections.Generic.SortedDictionary<System.String, System.String>.System.Collections.Generic.IDictionary<System.String, System.String>.Keys System.Collections.Generic.SortedDictionary<System.String, System.String>.System.Collections.Generic.IReadOnlyDictionary<System.String, System.String>.Keys SortedDictionary<String, String>.Values System.Collections.Generic.SortedDictionary<System.String, System.String>.System.Collections.Generic.IDictionary<System.String, System.String>.Values System.Collections.Generic.SortedDictionary<System.String, System.String>.System.Collections.Generic.IReadOnlyDictionary<System.String, System.String>.Values SortedDictionary<String, String>.IDictionary.IsFixedSize SortedDictionary<String, String>.IDictionary.IsReadOnly SortedDictionary<String, String>.IDictionary.Keys SortedDictionary<String, String>.IDictionary.Values SortedDictionary<String, String>.IDictionary.Item[Object] SortedDictionary<String, String>.ICollection.IsSynchronized SortedDictionary<String, String>.ICollection.SyncRoot Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.DataContracts.ManagedReference Assembly : Microsoft.DocAsCode.DataContracts.ManagedReference.dll Syntax public class ApiReferenceViewModel : SortedDictionary<string, string>, IDictionary<string, string>, ICollection<KeyValuePair<string, string>>, IDictionary, ICollection, IReadOnlyDictionary<string, string>, IReadOnlyCollection<KeyValuePair<string, string>>, IEnumerable<KeyValuePair<string, string>>, IEnumerable Implements System.Collections.Generic.IDictionary<TKey,TValue> System.Collections.Generic.ICollection<T> System.Collections.IDictionary System.Collections.ICollection System.Collections.Generic.IReadOnlyDictionary<TKey,TValue> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.DataContracts.ManagedReference.ApiParameter.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.ManagedReference.ApiParameter.html",
    "title": "Class ApiParameter | DocFX website",
    "keywords": "Class ApiParameter Inheritance Object ApiParameter Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.DataContracts.ManagedReference Assembly : Microsoft.DocAsCode.DataContracts.ManagedReference.dll Syntax [Serializable] public class ApiParameter Properties | Improve this Doc View Source Attributes Declaration [YamlMember(Alias = \"attributes\")] [JsonProperty(\"attributes\")] public List<AttributeInfo> Attributes { get; set; } Property Value Type Description List < AttributeInfo > | Improve this Doc View Source Description Declaration [YamlMember(Alias = \"description\")] [JsonProperty(\"description\")] public string Description { get; set; } Property Value Type Description String | Improve this Doc View Source Name Declaration [YamlMember(Alias = \"id\")] [JsonProperty(\"id\")] public string Name { get; set; } Property Value Type Description String | Improve this Doc View Source Type Declaration [YamlMember(Alias = \"type\")] [JsonProperty(\"type\")] public string Type { get; set; } Property Value Type Description String Methods | Improve this Doc View Source CopyInheritedData(ApiParameter) Declaration public void CopyInheritedData(ApiParameter src) Parameters Type Name Description ApiParameter src (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.DataContracts.ManagedReference.AdditionalNotes.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.ManagedReference.AdditionalNotes.html",
    "title": "Class AdditionalNotes | DocFX website",
    "keywords": "Class AdditionalNotes Inheritance Object AdditionalNotes Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.DataContracts.ManagedReference Assembly : Microsoft.DocAsCode.DataContracts.ManagedReference.dll Syntax [Serializable] public class AdditionalNotes Properties | Improve this Doc View Source Caller Declaration [JsonProperty(\"caller\")] [YamlMember(Alias = \"caller\")] public string Caller { get; set; } Property Value Type Description String | Improve this Doc View Source Implementer Declaration [JsonProperty(\"implementer\")] [YamlMember(Alias = \"implementer\")] public string Implementer { get; set; } Property Value Type Description String | Improve this Doc View Source Inheritor Declaration [JsonProperty(\"inheritor\")] [YamlMember(Alias = \"inheritor\")] public string Inheritor { get; set; } Property Value Type Description String (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.DataContracts.Common.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.Common.html",
    "title": "Namespace Microsoft.DocAsCode.DataContracts.Common | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.DataContracts.Common Classes Constants Constants.DevLang Constants.DocumentType Constants.ExtensionMemberPrefix Constants.MetadataName Constants.PropertyName TODO: add other property name const Constants.TableOfContents ExternalReferencePackageCollection ExternalReferencePackageReader ExternalReferencePackageWriter JTokenConverter MarkdownContentAttribute MarkdownContentIgnoreAttribute ReferenceViewModel SourceDetail SpecViewModel TocItemViewModel TocRootViewModel TocViewModel UniqueIdentityReferenceAttribute UniqueIdentityReferenceIgnoreAttribute UrlContentAttribute UrlContentIgnoreAttribute Interfaces IOverwriteDocumentViewModel (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.DataContracts.Common.UrlContentIgnoreAttribute.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.Common.UrlContentIgnoreAttribute.html",
    "title": "Class UrlContentIgnoreAttribute | DocFX website",
    "keywords": "Class UrlContentIgnoreAttribute Inheritance Object Attribute UrlContentIgnoreAttribute Implements _Attribute Inherited Members Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.Equals(Object) Attribute.GetHashCode() Attribute.Match(Object) Attribute.IsDefaultAttribute() Attribute._Attribute.GetTypeInfoCount(UInt32) Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr) Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr) Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr) Attribute.TypeId Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.DataContracts.Common Assembly : Microsoft.DocAsCode.DataContracts.Common.dll Syntax [AttributeUsage(AttributeTargets.Property, AllowMultiple = false, Inherited = false)] public class UrlContentIgnoreAttribute : Attribute, _Attribute Implements System.Runtime.InteropServices._Attribute (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.DataContracts.Common.UrlContentAttribute.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.Common.UrlContentAttribute.html",
    "title": "Class UrlContentAttribute | DocFX website",
    "keywords": "Class UrlContentAttribute Inheritance Object Attribute UrlContentAttribute Implements _Attribute Inherited Members Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.Equals(Object) Attribute.GetHashCode() Attribute.Match(Object) Attribute.IsDefaultAttribute() Attribute._Attribute.GetTypeInfoCount(UInt32) Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr) Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr) Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr) Attribute.TypeId Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.DataContracts.Common Assembly : Microsoft.DocAsCode.DataContracts.Common.dll Syntax [AttributeUsage(AttributeTargets.Property, AllowMultiple = false, Inherited = false)] public class UrlContentAttribute : Attribute, _Attribute Implements System.Runtime.InteropServices._Attribute (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.DataContracts.Common.UniqueIdentityReferenceIgnoreAttribute.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.Common.UniqueIdentityReferenceIgnoreAttribute.html",
    "title": "Class UniqueIdentityReferenceIgnoreAttribute | DocFX website",
    "keywords": "Class UniqueIdentityReferenceIgnoreAttribute Inheritance Object Attribute UniqueIdentityReferenceIgnoreAttribute Implements _Attribute Inherited Members Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.Equals(Object) Attribute.GetHashCode() Attribute.Match(Object) Attribute.IsDefaultAttribute() Attribute._Attribute.GetTypeInfoCount(UInt32) Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr) Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr) Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr) Attribute.TypeId Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.DataContracts.Common Assembly : Microsoft.DocAsCode.DataContracts.Common.dll Syntax [AttributeUsage(AttributeTargets.Property, AllowMultiple = false, Inherited = false)] public class UniqueIdentityReferenceIgnoreAttribute : Attribute, _Attribute Implements System.Runtime.InteropServices._Attribute (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.DataContracts.Common.UniqueIdentityReferenceAttribute.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.Common.UniqueIdentityReferenceAttribute.html",
    "title": "Class UniqueIdentityReferenceAttribute | DocFX website",
    "keywords": "Class UniqueIdentityReferenceAttribute Inheritance Object Attribute UniqueIdentityReferenceAttribute Implements _Attribute Inherited Members Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.Equals(Object) Attribute.GetHashCode() Attribute.Match(Object) Attribute.IsDefaultAttribute() Attribute._Attribute.GetTypeInfoCount(UInt32) Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr) Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr) Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr) Attribute.TypeId Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.DataContracts.Common Assembly : Microsoft.DocAsCode.DataContracts.Common.dll Syntax [AttributeUsage(AttributeTargets.Property, AllowMultiple = false, Inherited = false)] public class UniqueIdentityReferenceAttribute : Attribute, _Attribute Implements System.Runtime.InteropServices._Attribute (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.DataContracts.Common.TocViewModel.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.Common.TocViewModel.html",
    "title": "Class TocViewModel | DocFX website",
    "keywords": "Class TocViewModel Inheritance Object List < TocItemViewModel > TocViewModel Implements IList < TocItemViewModel > ICollection < TocItemViewModel > IList ICollection IReadOnlyList < TocItemViewModel > IReadOnlyCollection < TocItemViewModel > IEnumerable < TocItemViewModel > IEnumerable Inherited Members System.Collections.Generic.List<Microsoft.DocAsCode.DataContracts.Common.TocItemViewModel>.System.Collections.IList.get_Item(System.Int32) System.Collections.Generic.List<Microsoft.DocAsCode.DataContracts.Common.TocItemViewModel>.System.Collections.IList.set_Item(System.Int32, System.Object) List<TocItemViewModel>.Add(TocItemViewModel) List<TocItemViewModel>.IList.Add(Object) List<TocItemViewModel>.AddRange(IEnumerable<TocItemViewModel>) List<TocItemViewModel>.AsReadOnly() List<TocItemViewModel>.BinarySearch(Int32, Int32, TocItemViewModel, IComparer<TocItemViewModel>) List<TocItemViewModel>.BinarySearch(TocItemViewModel) List<TocItemViewModel>.BinarySearch(TocItemViewModel, IComparer<TocItemViewModel>) List<TocItemViewModel>.Clear() List<TocItemViewModel>.Contains(TocItemViewModel) List<TocItemViewModel>.IList.Contains(Object) List<TocItemViewModel>.ConvertAll<TOutput>(Converter<TocItemViewModel, TOutput>) List<TocItemViewModel>.CopyTo(TocItemViewModel[]) List<TocItemViewModel>.ICollection.CopyTo(Array, Int32) List<TocItemViewModel>.CopyTo(Int32, TocItemViewModel[], Int32, Int32) List<TocItemViewModel>.CopyTo(TocItemViewModel[], Int32) List<TocItemViewModel>.Exists(Predicate<TocItemViewModel>) List<TocItemViewModel>.Find(Predicate<TocItemViewModel>) List<TocItemViewModel>.FindAll(Predicate<TocItemViewModel>) List<TocItemViewModel>.FindIndex(Predicate<TocItemViewModel>) List<TocItemViewModel>.FindIndex(Int32, Predicate<TocItemViewModel>) List<TocItemViewModel>.FindIndex(Int32, Int32, Predicate<TocItemViewModel>) List<TocItemViewModel>.FindLast(Predicate<TocItemViewModel>) List<TocItemViewModel>.FindLastIndex(Predicate<TocItemViewModel>) List<TocItemViewModel>.FindLastIndex(Int32, Predicate<TocItemViewModel>) List<TocItemViewModel>.FindLastIndex(Int32, Int32, Predicate<TocItemViewModel>) List<TocItemViewModel>.ForEach(Action<TocItemViewModel>) List<TocItemViewModel>.GetEnumerator() List<TocItemViewModel>.IEnumerable<TocItemViewModel>.GetEnumerator() List<TocItemViewModel>.IEnumerable.GetEnumerator() List<TocItemViewModel>.GetRange(Int32, Int32) List<TocItemViewModel>.IndexOf(TocItemViewModel) List<TocItemViewModel>.IList.IndexOf(Object) List<TocItemViewModel>.IndexOf(TocItemViewModel, Int32) List<TocItemViewModel>.IndexOf(TocItemViewModel, Int32, Int32) List<TocItemViewModel>.Insert(Int32, TocItemViewModel) List<TocItemViewModel>.IList.Insert(Int32, Object) List<TocItemViewModel>.InsertRange(Int32, IEnumerable<TocItemViewModel>) List<TocItemViewModel>.LastIndexOf(TocItemViewModel) List<TocItemViewModel>.LastIndexOf(TocItemViewModel, Int32) List<TocItemViewModel>.LastIndexOf(TocItemViewModel, Int32, Int32) List<TocItemViewModel>.Remove(TocItemViewModel) List<TocItemViewModel>.IList.Remove(Object) List<TocItemViewModel>.RemoveAll(Predicate<TocItemViewModel>) List<TocItemViewModel>.RemoveAt(Int32) List<TocItemViewModel>.RemoveRange(Int32, Int32) List<TocItemViewModel>.Reverse() List<TocItemViewModel>.Reverse(Int32, Int32) List<TocItemViewModel>.Sort() List<TocItemViewModel>.Sort(IComparer<TocItemViewModel>) List<TocItemViewModel>.Sort(Int32, Int32, IComparer<TocItemViewModel>) List<TocItemViewModel>.Sort(Comparison<TocItemViewModel>) List<TocItemViewModel>.ToArray() List<TocItemViewModel>.TrimExcess() List<TocItemViewModel>.TrueForAll(Predicate<TocItemViewModel>) List<TocItemViewModel>.Capacity List<TocItemViewModel>.Count List<TocItemViewModel>.IList.IsFixedSize List<TocItemViewModel>.ICollection<TocItemViewModel>.IsReadOnly List<TocItemViewModel>.IList.IsReadOnly List<TocItemViewModel>.ICollection.IsSynchronized List<TocItemViewModel>.ICollection.SyncRoot List<TocItemViewModel>.Item[Int32] List<TocItemViewModel>.IList.Item[Int32] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.DataContracts.Common Assembly : Microsoft.DocAsCode.DataContracts.Common.dll Syntax [Serializable] public class TocViewModel : List<TocItemViewModel>, IList<TocItemViewModel>, ICollection<TocItemViewModel>, IList, ICollection, IReadOnlyList<TocItemViewModel>, IReadOnlyCollection<TocItemViewModel>, IEnumerable<TocItemViewModel>, IEnumerable Constructors | Improve this Doc View Source TocViewModel() Declaration public TocViewModel() | Improve this Doc View Source TocViewModel(IEnumerable<TocItemViewModel>) Declaration public TocViewModel(IEnumerable<TocItemViewModel> items) Parameters Type Name Description IEnumerable < TocItemViewModel > items Methods | Improve this Doc View Source Clone() Declaration public TocViewModel Clone() Returns Type Description TocViewModel Implements System.Collections.Generic.IList<T> System.Collections.Generic.ICollection<T> System.Collections.IList System.Collections.ICollection System.Collections.Generic.IReadOnlyList<T> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.DataContracts.Common.TocRootViewModel.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.Common.TocRootViewModel.html",
    "title": "Class TocRootViewModel | DocFX website",
    "keywords": "Class TocRootViewModel Inheritance Object TocRootViewModel Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.DataContracts.Common Assembly : Microsoft.DocAsCode.DataContracts.Common.dll Syntax [Serializable] public class TocRootViewModel Properties | Improve this Doc View Source Items Declaration [YamlMember(Alias = \"items\")] [JsonProperty(\"items\")] public TocViewModel Items { get; set; } Property Value Type Description TocViewModel | Improve this Doc View Source Metadata Declaration [JsonExtensionData] public Dictionary<string, object> Metadata { get; set; } Property Value Type Description Dictionary < String , Object > (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.DataContracts.Common.TocItemViewModel.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.Common.TocItemViewModel.html",
    "title": "Class TocItemViewModel | DocFX website",
    "keywords": "Class TocItemViewModel Inheritance Object TocItemViewModel Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.DataContracts.Common Assembly : Microsoft.DocAsCode.DataContracts.Common.dll Syntax [Serializable] public class TocItemViewModel Properties | Improve this Doc View Source AggregatedHref Declaration [YamlIgnore] [JsonIgnore] public string AggregatedHref { get; set; } Property Value Type Description String | Improve this Doc View Source AggregatedUid Declaration [YamlIgnore] [JsonIgnore] public string AggregatedUid { get; set; } Property Value Type Description String | Improve this Doc View Source DisplayName Declaration [YamlMember(Alias = \"displayName\")] [JsonProperty(\"displayName\")] public string DisplayName { get; set; } Property Value Type Description String | Improve this Doc View Source Homepage Declaration [YamlMember(Alias = \"homepage\")] [JsonProperty(\"homepage\")] public string Homepage { get; set; } Property Value Type Description String | Improve this Doc View Source HomepageUid Declaration [YamlMember(Alias = \"homepageUid\")] [JsonProperty(\"homepageUid\")] public string HomepageUid { get; set; } Property Value Type Description String | Improve this Doc View Source Href Declaration [YamlMember(Alias = \"href\")] [JsonProperty(\"href\")] public string Href { get; set; } Property Value Type Description String | Improve this Doc View Source IncludedFrom Declaration [YamlMember(Alias = \"includedFrom\")] [JsonProperty(\"includedFrom\")] public string IncludedFrom { get; set; } Property Value Type Description String | Improve this Doc View Source IsHrefUpdated Declaration [YamlIgnore] [JsonIgnore] public bool IsHrefUpdated { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Items Declaration [YamlMember(Alias = \"items\")] [JsonProperty(\"items\")] public TocViewModel Items { get; set; } Property Value Type Description TocViewModel | Improve this Doc View Source Metadata Declaration [JsonIgnore] public Dictionary<string, object> Metadata { get; set; } Property Value Type Description Dictionary < String , Object > | Improve this Doc View Source Name Declaration [YamlMember(Alias = \"name\")] [JsonProperty(\"name\")] public string Name { get; set; } Property Value Type Description String | Improve this Doc View Source NameForCSharp Declaration [YamlIgnore] [JsonIgnore] public string NameForCSharp { get; set; } Property Value Type Description String | Improve this Doc View Source NameForVB Declaration [YamlIgnore] [JsonIgnore] public string NameForVB { get; set; } Property Value Type Description String | Improve this Doc View Source NameInDevLangs Declaration [JsonIgnore] public SortedList<string, string> NameInDevLangs { get; } Property Value Type Description SortedList < String , String > | Improve this Doc View Source OriginalHomepage Declaration [YamlMember(Alias = \"originallHomepage\")] [JsonProperty(\"originallHomepage\")] public string OriginalHomepage { get; set; } Property Value Type Description String | Improve this Doc View Source OriginalHref Declaration [YamlMember(Alias = \"originalHref\")] [JsonProperty(\"originalHref\")] public string OriginalHref { get; set; } Property Value Type Description String | Improve this Doc View Source OriginalTocHref Declaration [YamlMember(Alias = \"originalTocHref\")] [JsonProperty(\"originalTocHref\")] public string OriginalTocHref { get; set; } Property Value Type Description String | Improve this Doc View Source OriginalTopicHref Declaration [YamlMember(Alias = \"originalTopicHref\")] [JsonProperty(\"originalTopicHref\")] public string OriginalTopicHref { get; set; } Property Value Type Description String | Improve this Doc View Source TocHref Declaration [YamlMember(Alias = \"tocHref\")] [JsonProperty(\"tocHref\")] public string TocHref { get; set; } Property Value Type Description String | Improve this Doc View Source TopicHref Declaration [YamlMember(Alias = \"topicHref\")] [JsonProperty(\"topicHref\")] public string TopicHref { get; set; } Property Value Type Description String | Improve this Doc View Source TopicUid Declaration [YamlMember(Alias = \"topicUid\")] [JsonProperty(\"topicUid\")] public string TopicUid { get; set; } Property Value Type Description String | Improve this Doc View Source Uid Declaration [YamlMember(Alias = \"uid\")] [JsonProperty(\"uid\")] public string Uid { get; set; } Property Value Type Description String Methods | Improve this Doc View Source Clone() Declaration public TocItemViewModel Clone() Returns Type Description TocItemViewModel | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.DataContracts.Common.SpecViewModel.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.Common.SpecViewModel.html",
    "title": "Class SpecViewModel | DocFX website",
    "keywords": "Class SpecViewModel Inheritance Object SpecViewModel Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.DataContracts.Common Assembly : Microsoft.DocAsCode.DataContracts.Common.dll Syntax [Serializable] public class SpecViewModel Properties | Improve this Doc View Source FullName Declaration [YamlMember(Alias = \"fullName\")] [JsonProperty(\"fullName\")] public string FullName { get; set; } Property Value Type Description String | Improve this Doc View Source Href Declaration [YamlMember(Alias = \"href\")] [JsonProperty(\"href\")] public string Href { get; set; } Property Value Type Description String | Improve this Doc View Source IsExternal Declaration [YamlMember(Alias = \"isExternal\")] [JsonProperty(\"isExternal\")] public bool IsExternal { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Name Declaration [YamlMember(Alias = \"name\")] [JsonProperty(\"name\")] public string Name { get; set; } Property Value Type Description String | Improve this Doc View Source NameWithType Declaration [YamlMember(Alias = \"nameWithType\")] [JsonProperty(\"nameWithType\")] public string NameWithType { get; set; } Property Value Type Description String | Improve this Doc View Source Uid Declaration [YamlMember(Alias = \"uid\")] [JsonProperty(\"uid\")] public string Uid { get; set; } Property Value Type Description String (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.DataContracts.Common.SourceDetail.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.Common.SourceDetail.html",
    "title": "Class SourceDetail | DocFX website",
    "keywords": "Class SourceDetail Inheritance Object SourceDetail Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.DataContracts.Common Assembly : Microsoft.DocAsCode.DataContracts.Common.dll Syntax [Serializable] public class SourceDetail Properties | Improve this Doc View Source BasePath Declaration [YamlMember(Alias = \"base\")] [JsonProperty(\"base\")] public string BasePath { get; set; } Property Value Type Description String | Improve this Doc View Source Content Declaration [YamlMember(Alias = \"content\")] [JsonProperty(\"content\")] public string Content { get; set; } Property Value Type Description String | Improve this Doc View Source EndLine Declaration [YamlMember(Alias = \"endLine\")] [JsonProperty(\"endLine\")] public int EndLine { get; set; } Property Value Type Description Int32 | Improve this Doc View Source Href The url path for current source, should be resolved at some late stage Declaration [YamlMember(Alias = \"href\")] [JsonProperty(\"href\")] public string Href { get; set; } Property Value Type Description String | Improve this Doc View Source IsExternalPath The external path for current source if it is not locally available Declaration [YamlMember(Alias = \"isExternal\")] [JsonProperty(\"isExternal\")] public bool IsExternalPath { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Name Declaration [YamlMember(Alias = \"id\")] [JsonProperty(\"id\")] public string Name { get; set; } Property Value Type Description String | Improve this Doc View Source Path The local path for current source, should be resolved to be relative path at some late stage Declaration [YamlMember(Alias = \"path\")] [JsonProperty(\"path\")] public string Path { get; set; } Property Value Type Description String | Improve this Doc View Source Remote Declaration [YamlMember(Alias = \"remote\")] [JsonProperty(\"remote\")] public GitDetail Remote { get; set; } Property Value Type Description GitDetail | Improve this Doc View Source StartLine Declaration [YamlMember(Alias = \"startLine\")] [JsonProperty(\"startLine\")] public int StartLine { get; set; } Property Value Type Description Int32 (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.DataContracts.Common.ReferenceViewModel.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.Common.ReferenceViewModel.html",
    "title": "Class ReferenceViewModel | DocFX website",
    "keywords": "Class ReferenceViewModel Inheritance Object ReferenceViewModel Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.DataContracts.Common Assembly : Microsoft.DocAsCode.DataContracts.Common.dll Syntax [Serializable] public class ReferenceViewModel Properties | Improve this Doc View Source Additional Declaration [JsonIgnore] public Dictionary<string, object> Additional { get; } Property Value Type Description Dictionary < String , Object > | Improve this Doc View Source CommentId Declaration [YamlMember(Alias = \"commentId\")] [JsonProperty(\"commentId\")] public string CommentId { get; set; } Property Value Type Description String | Improve this Doc View Source Definition Declaration [YamlMember(Alias = \"definition\")] [JsonProperty(\"definition\")] public string Definition { get; set; } Property Value Type Description String | Improve this Doc View Source FullName Declaration [YamlMember(Alias = \"fullName\")] [JsonProperty(\"fullName\")] public string FullName { get; set; } Property Value Type Description String | Improve this Doc View Source FullNameInDevLangs Declaration [JsonIgnore] public SortedList<string, string> FullNameInDevLangs { get; } Property Value Type Description SortedList < String , String > | Improve this Doc View Source Href Declaration [YamlMember(Alias = \"href\")] [JsonProperty(\"href\")] public string Href { get; set; } Property Value Type Description String | Improve this Doc View Source IsExternal Declaration [JsonProperty(\"isExternal\")] [YamlMember(Alias = \"isExternal\")] public bool? IsExternal { get; set; } Property Value Type Description Nullable < Boolean > | Improve this Doc View Source Name Declaration [YamlMember(Alias = \"name\")] [JsonProperty(\"name\")] public string Name { get; set; } Property Value Type Description String | Improve this Doc View Source NameInDevLangs Declaration [JsonIgnore] public SortedList<string, string> NameInDevLangs { get; } Property Value Type Description SortedList < String , String > | Improve this Doc View Source NameWithType Declaration [YamlMember(Alias = \"nameWithType\")] [JsonProperty(\"nameWithType\")] public string NameWithType { get; set; } Property Value Type Description String | Improve this Doc View Source NameWithTypeInDevLangs Declaration [JsonIgnore] public SortedList<string, string> NameWithTypeInDevLangs { get; } Property Value Type Description SortedList < String , String > | Improve this Doc View Source Parent Declaration [YamlMember(Alias = \"parent\")] [JsonProperty(\"parent\")] public string Parent { get; set; } Property Value Type Description String | Improve this Doc View Source Specs Declaration [JsonIgnore] public SortedList<string, List<SpecViewModel>> Specs { get; } Property Value Type Description SortedList < String , List < SpecViewModel >> | Improve this Doc View Source Uid Declaration [YamlMember(Alias = \"uid\")] [JsonProperty(\"uid\")] public string Uid { get; set; } Property Value Type Description String Methods | Improve this Doc View Source Clone() Declaration public ReferenceViewModel Clone() Returns Type Description ReferenceViewModel (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.DataContracts.Common.MarkdownContentIgnoreAttribute.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.Common.MarkdownContentIgnoreAttribute.html",
    "title": "Class MarkdownContentIgnoreAttribute | DocFX website",
    "keywords": "Class MarkdownContentIgnoreAttribute Inheritance Object Attribute MarkdownContentIgnoreAttribute Implements _Attribute Inherited Members Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.Equals(Object) Attribute.GetHashCode() Attribute.Match(Object) Attribute.IsDefaultAttribute() Attribute._Attribute.GetTypeInfoCount(UInt32) Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr) Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr) Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr) Attribute.TypeId Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.DataContracts.Common Assembly : Microsoft.DocAsCode.DataContracts.Common.dll Syntax [AttributeUsage(AttributeTargets.Property, AllowMultiple = false, Inherited = false)] public class MarkdownContentIgnoreAttribute : Attribute, _Attribute Implements System.Runtime.InteropServices._Attribute (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.DataContracts.Common.MarkdownContentAttribute.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.Common.MarkdownContentAttribute.html",
    "title": "Class MarkdownContentAttribute | DocFX website",
    "keywords": "Class MarkdownContentAttribute Inheritance Object Attribute MarkdownContentAttribute Implements _Attribute Inherited Members Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.Equals(Object) Attribute.GetHashCode() Attribute.Match(Object) Attribute.IsDefaultAttribute() Attribute._Attribute.GetTypeInfoCount(UInt32) Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr) Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr) Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr) Attribute.TypeId Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.DataContracts.Common Assembly : Microsoft.DocAsCode.DataContracts.Common.dll Syntax [AttributeUsage(AttributeTargets.Property, AllowMultiple = false, Inherited = false)] public class MarkdownContentAttribute : Attribute, _Attribute Implements System.Runtime.InteropServices._Attribute (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.DataContracts.Common.JTokenConverter.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.Common.JTokenConverter.html",
    "title": "Class JTokenConverter | DocFX website",
    "keywords": "Class JTokenConverter Inheritance Object JTokenConverter Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.DataContracts.Common Assembly : Microsoft.DocAsCode.DataContracts.Common.dll Syntax public static class JTokenConverter Methods | Improve this Doc View Source Convert<T>(Object) Declaration public static T Convert<T>(object obj) Parameters Type Name Description Object obj Returns Type Description T Type Parameters Name Description T (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.DataContracts.Common.IOverwriteDocumentViewModel.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.Common.IOverwriteDocumentViewModel.html",
    "title": "Interface IOverwriteDocumentViewModel | DocFX website",
    "keywords": "Interface IOverwriteDocumentViewModel Namespace : Microsoft.DocAsCode.DataContracts.Common Assembly : Microsoft.DocAsCode.DataContracts.Common.dll Syntax public interface IOverwriteDocumentViewModel Properties | Improve this Doc View Source Conceptual The markdown content from the overwrite document Declaration string Conceptual { get; set; } Property Value Type Description String | Improve this Doc View Source Documentation The details for current overwrite document, containing the start/end line numbers, file path, and git info. Declaration SourceDetail Documentation { get; set; } Property Value Type Description SourceDetail | Improve this Doc View Source Uid The uid for this overwrite document, as defined in YAML header Declaration string Uid { get; set; } Property Value Type Description String (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.DataContracts.Common.ExternalReferencePackageWriter.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.Common.ExternalReferencePackageWriter.html",
    "title": "Class ExternalReferencePackageWriter | DocFX website",
    "keywords": "Class ExternalReferencePackageWriter Inheritance Object ExternalReferencePackageWriter Implements IDisposable Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.DataContracts.Common Assembly : Microsoft.DocAsCode.DataContracts.Common.dll Syntax public class ExternalReferencePackageWriter : IDisposable Methods | Improve this Doc View Source AddOrUpdateEntry(String, List<ReferenceViewModel>) Declaration public void AddOrUpdateEntry(string entryName, List<ReferenceViewModel> vm) Parameters Type Name Description String entryName List < ReferenceViewModel > vm | Improve this Doc View Source Append(String, Uri) Declaration public static ExternalReferencePackageWriter Append(string packageFile, Uri baseUri) Parameters Type Name Description String packageFile Uri baseUri Returns Type Description ExternalReferencePackageWriter | Improve this Doc View Source Create(String, Uri) Declaration public static ExternalReferencePackageWriter Create(string packageFile, Uri baseUri) Parameters Type Name Description String packageFile Uri baseUri Returns Type Description ExternalReferencePackageWriter | Improve this Doc View Source Dispose() Declaration public void Dispose() Implements System.IDisposable (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.DataContracts.Common.ExternalReferencePackageReader.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.Common.ExternalReferencePackageReader.html",
    "title": "Class ExternalReferencePackageReader | DocFX website",
    "keywords": "Class ExternalReferencePackageReader Inheritance Object ExternalReferencePackageReader Implements IDisposable Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.DataContracts.Common Assembly : Microsoft.DocAsCode.DataContracts.Common.dll Syntax public class ExternalReferencePackageReader : IDisposable Constructors | Improve this Doc View Source ExternalReferencePackageReader(String) Declaration public ExternalReferencePackageReader(string packageFile) Parameters Type Name Description String packageFile Methods | Improve this Doc View Source CreateNoThrow(String) Declaration public static ExternalReferencePackageReader CreateNoThrow(string packageFile) Parameters Type Name Description String packageFile Returns Type Description ExternalReferencePackageReader | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Dispose(Boolean) Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description Boolean disposing | Improve this Doc View Source Finalize() Declaration protected void Finalize() | Improve this Doc View Source SeekUidIndex(String) Declaration protected virtual int SeekUidIndex(string uid) Parameters Type Name Description String uid Returns Type Description Int32 | Improve this Doc View Source TryGetReference(String, out ReferenceViewModel) Declaration public bool TryGetReference(string uid, out ReferenceViewModel vm) Parameters Type Name Description String uid ReferenceViewModel vm Returns Type Description Boolean Implements System.IDisposable (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.DataContracts.Common.ExternalReferencePackageCollection.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.Common.ExternalReferencePackageCollection.html",
    "title": "Class ExternalReferencePackageCollection | DocFX website",
    "keywords": "Class ExternalReferencePackageCollection Inheritance Object ExternalReferencePackageCollection Implements IDisposable Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.DataContracts.Common Assembly : Microsoft.DocAsCode.DataContracts.Common.dll Syntax public class ExternalReferencePackageCollection : IDisposable Constructors | Improve this Doc View Source ExternalReferencePackageCollection(IEnumerable<String>, Int32) Declaration public ExternalReferencePackageCollection(IEnumerable<string> packageFiles, int maxParallelism) Parameters Type Name Description IEnumerable < String > packageFiles Int32 maxParallelism Properties | Improve this Doc View Source Readers Declaration public ImmutableList<ExternalReferencePackageReader> Readers { get; } Property Value Type Description ImmutableList < ExternalReferencePackageReader > Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Dispose(Boolean) Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description Boolean disposing | Improve this Doc View Source Finalize() Declaration protected void Finalize() | Improve this Doc View Source TryGetReference(String, out ReferenceViewModel) Declaration public bool TryGetReference(string uid, out ReferenceViewModel vm) Parameters Type Name Description String uid ReferenceViewModel vm Returns Type Description Boolean Implements System.IDisposable (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.DataContracts.Common.Constants.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.Common.Constants.html",
    "title": "Class Constants | DocFX website",
    "keywords": "Class Constants Inheritance Object Constants Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.DataContracts.Common Assembly : Microsoft.DocAsCode.DataContracts.Common.dll Syntax public static class Constants Fields | Improve this Doc View Source ContentPlaceholder Declaration public const string ContentPlaceholder = \"*content\" Field Value Type Description String | Improve this Doc View Source PrefixSeparator Declaration public const string PrefixSeparator = \".\" Field Value Type Description String | Improve this Doc View Source TocYamlFileName Declaration public const string TocYamlFileName = \"toc.yml\" Field Value Type Description String | Improve this Doc View Source YamlExtension Declaration public const string YamlExtension = \".yml\" Field Value Type Description String (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.DataContracts.Common.Constants.TableOfContents.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.Common.Constants.TableOfContents.html",
    "title": "Class Constants.TableOfContents | DocFX website",
    "keywords": "Class Constants.TableOfContents Inheritance Object Constants.TableOfContents Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.DataContracts.Common Assembly : Microsoft.DocAsCode.DataContracts.Common.dll Syntax public static class TableOfContents Fields | Improve this Doc View Source MarkdownTocFileName Declaration public const string MarkdownTocFileName = \"toc.md\" Field Value Type Description String | Improve this Doc View Source YamlTocFileName Declaration public const string YamlTocFileName = \"toc.yml\" Field Value Type Description String (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.DataContracts.Common.Constants.PropertyName.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.Common.Constants.PropertyName.html",
    "title": "Class Constants.PropertyName | DocFX website",
    "keywords": "Class Constants.PropertyName TODO: add other property name const Inheritance Object Constants.PropertyName Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.DataContracts.Common Assembly : Microsoft.DocAsCode.DataContracts.Common.dll Syntax public static class PropertyName Fields | Improve this Doc View Source AdditionalNotes Declaration public const string AdditionalNotes = \"additionalNotes\" Field Value Type Description String | Improve this Doc View Source Assemblies Declaration public const string Assemblies = \"assemblies\" Field Value Type Description String | Improve this Doc View Source Children Declaration public const string Children = \"children\" Field Value Type Description String | Improve this Doc View Source CommentId Declaration public const string CommentId = \"commentId\" Field Value Type Description String | Improve this Doc View Source Conceptual Declaration public const string Conceptual = \"conceptual\" Field Value Type Description String | Improve this Doc View Source Content Declaration public const string Content = \"content\" Field Value Type Description String | Improve this Doc View Source DerivedClasses Declaration public const string DerivedClasses = \"derivedClasses\" Field Value Type Description String | Improve this Doc View Source DisplayName Declaration public const string DisplayName = \"displayName\" Field Value Type Description String | Improve this Doc View Source Documentation Declaration public const string Documentation = \"documentation\" Field Value Type Description String | Improve this Doc View Source DocumentType Declaration public const string DocumentType = \"documentType\" Field Value Type Description String | Improve this Doc View Source Exceptions Declaration public const string Exceptions = \"exceptions\" Field Value Type Description String | Improve this Doc View Source ExtensionMethods Declaration public const string ExtensionMethods = \"extensionMethods\" Field Value Type Description String | Improve this Doc View Source FullName Declaration public const string FullName = \"fullName\" Field Value Type Description String | Improve this Doc View Source Href Declaration public const string Href = \"href\" Field Value Type Description String | Improve this Doc View Source Id Declaration public const string Id = \"id\" Field Value Type Description String | Improve this Doc View Source Implements Declaration public const string Implements = \"implements\" Field Value Type Description String | Improve this Doc View Source Inheritance Declaration public const string Inheritance = \"inheritance\" Field Value Type Description String | Improve this Doc View Source InheritedMembers Declaration public const string InheritedMembers = \"inheritedMembers\" Field Value Type Description String | Improve this Doc View Source IsEii Declaration public const string IsEii = \"isEii\" Field Value Type Description String | Improve this Doc View Source Name Declaration public const string Name = \"name\" Field Value Type Description String | Improve this Doc View Source Namespace Declaration public const string Namespace = \"namespace\" Field Value Type Description String | Improve this Doc View Source NameWithType Declaration public const string NameWithType = \"nameWithType\" Field Value Type Description String | Improve this Doc View Source OutputFileName Declaration public const string OutputFileName = \"outputFileName\" Field Value Type Description String | Improve this Doc View Source Overload Declaration public const string Overload = \"overload\" Field Value Type Description String | Improve this Doc View Source Overridden Declaration public const string Overridden = \"overridden\" Field Value Type Description String | Improve this Doc View Source Parent Declaration public const string Parent = \"parent\" Field Value Type Description String | Improve this Doc View Source Path Declaration public const string Path = \"path\" Field Value Type Description String | Improve this Doc View Source Platform Declaration public const string Platform = \"platform\" Field Value Type Description String | Improve this Doc View Source Return Declaration public const string Return = \"return\" Field Value Type Description String | Improve this Doc View Source SeeAlsoContent Declaration public const string SeeAlsoContent = \"seealsoContent\" Field Value Type Description String | Improve this Doc View Source Source Declaration public const string Source = \"source\" Field Value Type Description String | Improve this Doc View Source Summary Declaration public const string Summary = \"summary\" Field Value Type Description String | Improve this Doc View Source Syntax Declaration public const string Syntax = \"syntax\" Field Value Type Description String | Improve this Doc View Source SystemKeys Declaration public const string SystemKeys = \"_systemKeys\" Field Value Type Description String | Improve this Doc View Source Title Declaration public const string Title = \"title\" Field Value Type Description String | Improve this Doc View Source TocHref Declaration public const string TocHref = \"tocHref\" Field Value Type Description String | Improve this Doc View Source TopicHref Declaration public const string TopicHref = \"topicHref\" Field Value Type Description String | Improve this Doc View Source TopicUid Declaration public const string TopicUid = \"topicUid\" Field Value Type Description String | Improve this Doc View Source Type Declaration public const string Type = \"type\" Field Value Type Description String | Improve this Doc View Source Uid Declaration public const string Uid = \"uid\" Field Value Type Description String (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.UniversalReference.ApplyOverwriteDocumentForUref.html": {
    "href": "api/Microsoft.DocAsCode.Build.UniversalReference.ApplyOverwriteDocumentForUref.html",
    "title": "Class ApplyOverwriteDocumentForUref | DocFX website",
    "keywords": "Class ApplyOverwriteDocumentForUref Inheritance Object BaseDocumentBuildStep ApplyOverwriteDocument ApplyOverwriteDocumentForUref Inherited Members ApplyOverwriteDocument.GetMerger() ApplyOverwriteDocument.Postbuild(ImmutableList<FileModel>, IHostService) ApplyOverwriteDocument.ApplyOverwrites(ImmutableList<FileModel>, IHostService) ApplyOverwriteDocument.ApplyOverwrite<T>(IHostService, List<FileModel>, String, List<FileModel>, Func<FileModel, String, IHostService, IEnumerable<T>>, Func<FileModel, String, IHostService, IEnumerable<T>>) ApplyOverwriteDocument.Transform<T>(FileModel, String, IHostService) BaseDocumentBuildStep.Prebuild(ImmutableList<FileModel>, IHostService) BaseDocumentBuildStep.Build(FileModel, IHostService) Namespace : Microsoft.DocAsCode.Build.UniversalReference Assembly : Microsoft.DocAsCode.Build.UniversalReference.dll Syntax [Export(\"UniversalReferenceDocumentProcessor\", typeof(IDocumentBuildStep))] public class ApplyOverwriteDocumentForUref : ApplyOverwriteDocument Properties | Improve this Doc View Source BuildOrder Declaration public override int BuildOrder { get; } Property Value Type Description Int32 Overrides BaseDocumentBuildStep.BuildOrder | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description String Overrides BaseDocumentBuildStep.Name Methods | Improve this Doc View Source ApplyOverwrite(IHostService, List<FileModel>, String, List<FileModel>) Declaration protected override void ApplyOverwrite(IHostService host, List<FileModel> overwrites, string uid, List<FileModel> articles) Parameters Type Name Description IHostService host List < FileModel > overwrites String uid List < FileModel > articles | Improve this Doc View Source GetItemsFromOverwriteDocument(FileModel, String, IHostService) Declaration public IEnumerable<ItemViewModel> GetItemsFromOverwriteDocument(FileModel fileModel, string uid, IHostService host) Parameters Type Name Description FileModel fileModel String uid IHostService host Returns Type Description IEnumerable < ItemViewModel > | Improve this Doc View Source GetItemsToOverwrite(FileModel, String, IHostService) Declaration public IEnumerable<ItemViewModel> GetItemsToOverwrite(FileModel fileModel, string uid, IHostService host) Parameters Type Name Description FileModel fileModel String uid IHostService host Returns Type Description IEnumerable < ItemViewModel > (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.UniversalReference.ApiSyntaxBuildOutput.html": {
    "href": "api/Microsoft.DocAsCode.Build.UniversalReference.ApiSyntaxBuildOutput.html",
    "title": "Class ApiSyntaxBuildOutput | DocFX website",
    "keywords": "Class ApiSyntaxBuildOutput Inheritance Object ApiSyntaxBuildOutput Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.UniversalReference Assembly : Microsoft.DocAsCode.Build.UniversalReference.dll Syntax [Serializable] public class ApiSyntaxBuildOutput Properties | Improve this Doc View Source Content Declaration [YamlMember(Alias = \"content\")] [JsonProperty(\"content\")] public List<ApiLanguageValuePair<string>> Content { get; set; } Property Value Type Description List < ApiLanguageValuePair < String >> | Improve this Doc View Source Metadata Declaration [JsonExtensionData] public Dictionary<string, object> Metadata { get; set; } Property Value Type Description Dictionary < String , Object > | Improve this Doc View Source Parameters Declaration [YamlMember(Alias = \"parameters\")] [JsonProperty(\"parameters\")] public List<ApiParameterBuildOutput> Parameters { get; set; } Property Value Type Description List < ApiParameterBuildOutput > | Improve this Doc View Source Return Declaration [YamlMember(Alias = \"return\")] [JsonProperty(\"return\")] public List<ApiLanguageValuePair<ApiParameterBuildOutput>> Return { get; set; } Property Value Type Description List < ApiLanguageValuePair < ApiParameterBuildOutput >> | Improve this Doc View Source TypeParameters Declaration [YamlMember(Alias = \"typeParameters\")] [JsonProperty(\"typeParameters\")] public List<ApiParameterBuildOutput> TypeParameters { get; set; } Property Value Type Description List < ApiParameterBuildOutput > (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.UniversalReference.ApiParameterBuildOutput.html": {
    "href": "api/Microsoft.DocAsCode.Build.UniversalReference.ApiParameterBuildOutput.html",
    "title": "Class ApiParameterBuildOutput | DocFX website",
    "keywords": "Class ApiParameterBuildOutput Inheritance Object ApiParameterBuildOutput Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.UniversalReference Assembly : Microsoft.DocAsCode.Build.UniversalReference.dll Syntax [Serializable] public class ApiParameterBuildOutput Properties | Improve this Doc View Source DefaultValue Declaration [YamlMember(Alias = \"defaultValue\")] [JsonProperty(\"defaultValue\")] public string DefaultValue { get; set; } Property Value Type Description String | Improve this Doc View Source Description Declaration [YamlMember(Alias = \"description\")] [JsonProperty(\"description\")] public string Description { get; set; } Property Value Type Description String | Improve this Doc View Source Metadata Declaration [JsonExtensionData] public Dictionary<string, object> Metadata { get; set; } Property Value Type Description Dictionary < String , Object > | Improve this Doc View Source Name Declaration [YamlMember(Alias = \"id\")] [JsonProperty(\"id\")] public string Name { get; set; } Property Value Type Description String | Improve this Doc View Source Optional Declaration [YamlMember(Alias = \"optional\")] [JsonProperty(\"optional\")] public bool Optional { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Type Declaration [YamlMember(Alias = \"type\")] [JsonProperty(\"type\")] public List<ApiNames> Type { get; set; } Property Value Type Description List < ApiNames > (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.UniversalReference.ApiNamesTypeConverter.html": {
    "href": "api/Microsoft.DocAsCode.Build.UniversalReference.ApiNamesTypeConverter.html",
    "title": "Class ApiNamesTypeConverter | DocFX website",
    "keywords": "Class ApiNamesTypeConverter Inheritance Object ApiNamesTypeConverter Implements AutoMapper.ITypeConverter < String , ApiNames > Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.UniversalReference Assembly : Microsoft.DocAsCode.Build.UniversalReference.dll Syntax public class ApiNamesTypeConverter : ITypeConverter<string, ApiNames> Constructors | Improve this Doc View Source ApiNamesTypeConverter(String[], IReadOnlyDictionary<String, ApiNames>) Declaration public ApiNamesTypeConverter(string[] supportedLanguages, IReadOnlyDictionary<string, ApiNames> references) Parameters Type Name Description String [] supportedLanguages IReadOnlyDictionary < String , ApiNames > references Methods | Improve this Doc View Source Convert(String, ApiNames, ResolutionContext) Declaration public ApiNames Convert(string source, ApiNames destination, ResolutionContext context) Parameters Type Name Description String source ApiNames destination AutoMapper.ResolutionContext context Returns Type Description ApiNames Implements AutoMapper.ITypeConverter<TSource, TDestination> (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.UniversalReference.ApiNamesSpecResolver.html": {
    "href": "api/Microsoft.DocAsCode.Build.UniversalReference.ApiNamesSpecResolver.html",
    "title": "Class ApiNamesSpecResolver | DocFX website",
    "keywords": "Class ApiNamesSpecResolver Inheritance Object ApiNamesSpecResolver Implements AutoMapper.IValueResolver < ReferenceViewModel , ApiNames , List < ApiLanguageValuePair < String >>> Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.UniversalReference Assembly : Microsoft.DocAsCode.Build.UniversalReference.dll Syntax public class ApiNamesSpecResolver : IValueResolver<ReferenceViewModel, ApiNames, List<ApiLanguageValuePair<string>>> Constructors | Improve this Doc View Source ApiNamesSpecResolver(String[]) Declaration public ApiNamesSpecResolver(string[] supportedLanguages) Parameters Type Name Description String [] supportedLanguages Methods | Improve this Doc View Source Resolve(ReferenceViewModel, ApiNames, List<ApiLanguageValuePair<String>>, ResolutionContext) Declaration public List<ApiLanguageValuePair<string>> Resolve(ReferenceViewModel source, ApiNames destination, List<ApiLanguageValuePair<string>> destMember, ResolutionContext context) Parameters Type Name Description ReferenceViewModel source ApiNames destination List < ApiLanguageValuePair < String >> destMember AutoMapper.ResolutionContext context Returns Type Description List < ApiLanguageValuePair < String >> Implements AutoMapper.IValueResolver<TSource, TDestination, TDestMember> (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.UniversalReference.ApiNamesProfile.html": {
    "href": "api/Microsoft.DocAsCode.Build.UniversalReference.ApiNamesProfile.html",
    "title": "Class ApiNamesProfile | DocFX website",
    "keywords": "Class ApiNamesProfile Inheritance Object AutoMapper.Profile ApiNamesProfile Implements AutoMapper.IProfileExpression AutoMapper.Configuration.IProfileConfiguration Inherited Members AutoMapper.Profile.DisableConstructorMapping() AutoMapper.Profile.ForAllMaps(System.Action<AutoMapper.TypeMap, AutoMapper.IMappingExpression>) AutoMapper.Profile.ForAllPropertyMaps(System.Func<AutoMapper.PropertyMap, System.Boolean>, System.Action<AutoMapper.PropertyMap, AutoMapper.IMemberConfigurationExpression>) AutoMapper.Profile.CreateMap<TSource, TDestination>() AutoMapper.Profile.CreateMap<TSource, TDestination>(AutoMapper.MemberList) AutoMapper.Profile.CreateMap(System.Type, System.Type) AutoMapper.Profile.CreateMap(System.Type, System.Type, AutoMapper.MemberList) AutoMapper.Profile.ClearPrefixes() AutoMapper.Profile.RecognizeAlias(System.String, System.String) AutoMapper.Profile.ReplaceMemberName(System.String, System.String) AutoMapper.Profile.RecognizePrefixes(System.String[]) AutoMapper.Profile.RecognizePostfixes(System.String[]) AutoMapper.Profile.RecognizeDestinationPrefixes(System.String[]) AutoMapper.Profile.RecognizeDestinationPostfixes(System.String[]) AutoMapper.Profile.AddGlobalIgnore(System.String) AutoMapper.Profile.AddMemberConfiguration() AutoMapper.Profile.AddConditionalObjectMapper() AutoMapper.Profile.IncludeSourceExtensionMethods(System.Type) AutoMapper.Profile.Configure() AutoMapper.Profile.DefaultMemberConfig AutoMapper.Profile.ConstructorMappingEnabled AutoMapper.Profile.CreateMissingTypeMaps AutoMapper.Profile.AutoMapper.Configuration.IProfileConfiguration.AllPropertyMapActions AutoMapper.Profile.AutoMapper.Configuration.IProfileConfiguration.AllTypeMapActions AutoMapper.Profile.AutoMapper.Configuration.IProfileConfiguration.GlobalIgnores AutoMapper.Profile.AutoMapper.Configuration.IProfileConfiguration.MemberConfigurations AutoMapper.Profile.AutoMapper.Configuration.IProfileConfiguration.SourceExtensionMethods AutoMapper.Profile.AutoMapper.Configuration.IProfileConfiguration.TypeConfigurations AutoMapper.Profile.AutoMapper.Configuration.IProfileConfiguration.TypeMapConfigs AutoMapper.Profile.AutoMapper.Configuration.IProfileConfiguration.OpenTypeMapConfigs AutoMapper.Profile.ProfileName AutoMapper.Profile.AllowNullDestinationValues AutoMapper.Profile.AllowNullCollections AutoMapper.Profile.EnableNullPropagationForQueryMapping AutoMapper.Profile.ShouldMapProperty AutoMapper.Profile.ShouldMapField AutoMapper.Profile.SourceMemberNamingConvention AutoMapper.Profile.DestinationMemberNamingConvention Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.UniversalReference Assembly : Microsoft.DocAsCode.Build.UniversalReference.dll Syntax public class ApiNamesProfile : Profile, IProfileExpression, IProfileConfiguration Constructors | Improve this Doc View Source ApiNamesProfile(String[]) Declaration public ApiNamesProfile(string[] supportedLanguages) Parameters Type Name Description String [] supportedLanguages Implements AutoMapper.IProfileExpression AutoMapper.Configuration.IProfileConfiguration (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.UniversalReference.ApiNames.html": {
    "href": "api/Microsoft.DocAsCode.Build.UniversalReference.ApiNames.html",
    "title": "Class ApiNames | DocFX website",
    "keywords": "Class ApiNames Inheritance Object ApiNames Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.UniversalReference Assembly : Microsoft.DocAsCode.Build.UniversalReference.dll Syntax [Serializable] public class ApiNames Properties | Improve this Doc View Source Definition Declaration [YamlMember(Alias = \"definition\")] [JsonProperty(\"definition\")] public string Definition { get; set; } Property Value Type Description String | Improve this Doc View Source FullName Declaration [YamlMember(Alias = \"fullName\")] [JsonProperty(\"fullName\")] public List<ApiLanguageValuePair<string>> FullName { get; set; } Property Value Type Description List < ApiLanguageValuePair < String >> | Improve this Doc View Source Metadata Declaration [JsonExtensionData] public Dictionary<string, object> Metadata { get; set; } Property Value Type Description Dictionary < String , Object > | Improve this Doc View Source Name Declaration [YamlMember(Alias = \"name\")] [JsonProperty(\"name\")] public List<ApiLanguageValuePair<string>> Name { get; set; } Property Value Type Description List < ApiLanguageValuePair < String >> | Improve this Doc View Source NameWithType Declaration [YamlMember(Alias = \"nameWithType\")] [JsonProperty(\"nameWithType\")] public List<ApiLanguageValuePair<string>> NameWithType { get; set; } Property Value Type Description List < ApiLanguageValuePair < String >> | Improve this Doc View Source Spec Declaration [YamlMember(Alias = \"specName\")] [JsonProperty(\"specName\")] public List<ApiLanguageValuePair<string>> Spec { get; set; } Property Value Type Description List < ApiLanguageValuePair < String >> | Improve this Doc View Source Uid Declaration [YamlMember(Alias = \"uid\")] [JsonProperty(\"uid\")] public string Uid { get; set; } Property Value Type Description String (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.UniversalReference.ApiListInDevLangsOfApiNamesTypeConverter.html": {
    "href": "api/Microsoft.DocAsCode.Build.UniversalReference.ApiListInDevLangsOfApiNamesTypeConverter.html",
    "title": "Class ApiListInDevLangsOfApiNamesTypeConverter | DocFX website",
    "keywords": "Class ApiListInDevLangsOfApiNamesTypeConverter Inheritance Object ApiListInDevLangsOfApiNamesTypeConverter Implements AutoMapper.ITypeConverter < String , List < ApiLanguageValuePair < ApiNames >>> Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.UniversalReference Assembly : Microsoft.DocAsCode.Build.UniversalReference.dll Syntax public class ApiListInDevLangsOfApiNamesTypeConverter : ITypeConverter<string, List<ApiLanguageValuePair<ApiNames>>> Constructors | Improve this Doc View Source ApiListInDevLangsOfApiNamesTypeConverter(String[], IReadOnlyDictionary<String, ApiNames>) Declaration public ApiListInDevLangsOfApiNamesTypeConverter(string[] supportedLanguages, IReadOnlyDictionary<string, ApiNames> references) Parameters Type Name Description String [] supportedLanguages IReadOnlyDictionary < String , ApiNames > references Methods | Improve this Doc View Source Convert(String, List<ApiLanguageValuePair<ApiNames>>, ResolutionContext) Declaration public List<ApiLanguageValuePair<ApiNames>> Convert(string source, List<ApiLanguageValuePair<ApiNames>> destination, ResolutionContext context) Parameters Type Name Description String source List < ApiLanguageValuePair < ApiNames >> destination AutoMapper.ResolutionContext context Returns Type Description List < ApiLanguageValuePair < ApiNames >> Implements AutoMapper.ITypeConverter<TSource, TDestination> (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.UniversalReference.ApiLinkInfoBuildOutput.html": {
    "href": "api/Microsoft.DocAsCode.Build.UniversalReference.ApiLinkInfoBuildOutput.html",
    "title": "Class ApiLinkInfoBuildOutput | DocFX website",
    "keywords": "Class ApiLinkInfoBuildOutput Inheritance Object ApiLinkInfoBuildOutput Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.UniversalReference Assembly : Microsoft.DocAsCode.Build.UniversalReference.dll Syntax [Serializable] public class ApiLinkInfoBuildOutput Properties | Improve this Doc View Source LinkType Declaration [YamlMember(Alias = \"linkType\")] [JsonProperty(\"linkType\")] public LinkType LinkType { get; set; } Property Value Type Description LinkType | Improve this Doc View Source Type Declaration [YamlMember(Alias = \"type\")] [JsonProperty(\"type\")] public ApiNames Type { get; set; } Property Value Type Description ApiNames | Improve this Doc View Source Url Declaration [YamlMember(Alias = \"url\")] [JsonProperty(\"url\")] public string Url { get; set; } Property Value Type Description String (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.UniversalReference.ApiLanguageValuePair-1.html": {
    "href": "api/Microsoft.DocAsCode.Build.UniversalReference.ApiLanguageValuePair-1.html",
    "title": "Class ApiLanguageValuePair<T> | DocFX website",
    "keywords": "Class ApiLanguageValuePair<T> Inheritance Object ApiLanguageValuePair<T> Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.UniversalReference Assembly : Microsoft.DocAsCode.Build.UniversalReference.dll Syntax [Serializable] public class ApiLanguageValuePair<T> Type Parameters Name Description T Properties | Improve this Doc View Source Language Declaration [YamlMember(Alias = \"lang\")] [JsonProperty(\"lang\")] public string Language { get; set; } Property Value Type Description String | Improve this Doc View Source Value Declaration [YamlMember(Alias = \"value\")] [JsonProperty(\"value\")] public T Value { get; set; } Property Value Type Description T (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.UniversalReference.ApiInheritanceTreeBuildOutput.html": {
    "href": "api/Microsoft.DocAsCode.Build.UniversalReference.ApiInheritanceTreeBuildOutput.html",
    "title": "Class ApiInheritanceTreeBuildOutput | DocFX website",
    "keywords": "Class ApiInheritanceTreeBuildOutput Inheritance Object ApiInheritanceTreeBuildOutput Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.UniversalReference Assembly : Microsoft.DocAsCode.Build.UniversalReference.dll Syntax [Serializable] public class ApiInheritanceTreeBuildOutput Properties | Improve this Doc View Source Inheritance Declaration [YamlMember(Alias = \"inheritance\")] [JsonProperty(\"inheritance\")] public List<ApiInheritanceTreeBuildOutput> Inheritance { get; set; } Property Value Type Description List < ApiInheritanceTreeBuildOutput > | Improve this Doc View Source Metadata Declaration [JsonExtensionData] public Dictionary<string, object> Metadata { get; set; } Property Value Type Description Dictionary < String , Object > | Improve this Doc View Source Type Declaration [YamlMember(Alias = \"type\")] [JsonProperty(\"type\")] public ApiNames Type { get; set; } Property Value Type Description ApiNames (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.UniversalReference.ApiHrefLinkInfoBuildOutputUrlResolver.html": {
    "href": "api/Microsoft.DocAsCode.Build.UniversalReference.ApiHrefLinkInfoBuildOutputUrlResolver.html",
    "title": "Class ApiHrefLinkInfoBuildOutputUrlResolver | DocFX website",
    "keywords": "Class ApiHrefLinkInfoBuildOutputUrlResolver Inheritance Object ApiHrefLinkInfoBuildOutputUrlResolver Implements AutoMapper.IValueResolver < LinkInfo , ApiLinkInfoBuildOutput , String > Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.UniversalReference Assembly : Microsoft.DocAsCode.Build.UniversalReference.dll Syntax public class ApiHrefLinkInfoBuildOutputUrlResolver : IValueResolver<LinkInfo, ApiLinkInfoBuildOutput, string> Methods | Improve this Doc View Source Resolve(LinkInfo, ApiLinkInfoBuildOutput, String, ResolutionContext) Declaration public string Resolve(LinkInfo source, ApiLinkInfoBuildOutput destination, string destMember, ResolutionContext context) Parameters Type Name Description LinkInfo source ApiLinkInfoBuildOutput destination String destMember AutoMapper.ResolutionContext context Returns Type Description String Implements AutoMapper.IValueResolver<TSource, TDestination, TDestMember> (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.UniversalReference.ApiExceptionInfoBuildOutput.html": {
    "href": "api/Microsoft.DocAsCode.Build.UniversalReference.ApiExceptionInfoBuildOutput.html",
    "title": "Class ApiExceptionInfoBuildOutput | DocFX website",
    "keywords": "Class ApiExceptionInfoBuildOutput Inheritance Object ApiExceptionInfoBuildOutput Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.UniversalReference Assembly : Microsoft.DocAsCode.Build.UniversalReference.dll Syntax [Serializable] public class ApiExceptionInfoBuildOutput Properties | Improve this Doc View Source Description Declaration [YamlMember(Alias = \"description\")] [JsonProperty(\"description\")] public string Description { get; set; } Property Value Type Description String | Improve this Doc View Source Metadata Declaration [JsonExtensionData] public Dictionary<string, object> Metadata { get; set; } Property Value Type Description Dictionary < String , Object > | Improve this Doc View Source Type Declaration [YamlMember(Alias = \"type\")] [JsonProperty(\"type\")] public ApiNames Type { get; set; } Property Value Type Description ApiNames (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.UniversalReference.ApiBuildOutputProfile.html": {
    "href": "api/Microsoft.DocAsCode.Build.UniversalReference.ApiBuildOutputProfile.html",
    "title": "Class ApiBuildOutputProfile | DocFX website",
    "keywords": "Class ApiBuildOutputProfile Inheritance Object AutoMapper.Profile ApiBuildOutputProfile Implements AutoMapper.IProfileExpression AutoMapper.Configuration.IProfileConfiguration Inherited Members AutoMapper.Profile.DisableConstructorMapping() AutoMapper.Profile.ForAllMaps(System.Action<AutoMapper.TypeMap, AutoMapper.IMappingExpression>) AutoMapper.Profile.ForAllPropertyMaps(System.Func<AutoMapper.PropertyMap, System.Boolean>, System.Action<AutoMapper.PropertyMap, AutoMapper.IMemberConfigurationExpression>) AutoMapper.Profile.CreateMap<TSource, TDestination>() AutoMapper.Profile.CreateMap<TSource, TDestination>(AutoMapper.MemberList) AutoMapper.Profile.CreateMap(System.Type, System.Type) AutoMapper.Profile.CreateMap(System.Type, System.Type, AutoMapper.MemberList) AutoMapper.Profile.ClearPrefixes() AutoMapper.Profile.RecognizeAlias(System.String, System.String) AutoMapper.Profile.ReplaceMemberName(System.String, System.String) AutoMapper.Profile.RecognizePrefixes(System.String[]) AutoMapper.Profile.RecognizePostfixes(System.String[]) AutoMapper.Profile.RecognizeDestinationPrefixes(System.String[]) AutoMapper.Profile.RecognizeDestinationPostfixes(System.String[]) AutoMapper.Profile.AddGlobalIgnore(System.String) AutoMapper.Profile.AddMemberConfiguration() AutoMapper.Profile.AddConditionalObjectMapper() AutoMapper.Profile.IncludeSourceExtensionMethods(System.Type) AutoMapper.Profile.Configure() AutoMapper.Profile.DefaultMemberConfig AutoMapper.Profile.ConstructorMappingEnabled AutoMapper.Profile.CreateMissingTypeMaps AutoMapper.Profile.AutoMapper.Configuration.IProfileConfiguration.AllPropertyMapActions AutoMapper.Profile.AutoMapper.Configuration.IProfileConfiguration.AllTypeMapActions AutoMapper.Profile.AutoMapper.Configuration.IProfileConfiguration.GlobalIgnores AutoMapper.Profile.AutoMapper.Configuration.IProfileConfiguration.MemberConfigurations AutoMapper.Profile.AutoMapper.Configuration.IProfileConfiguration.SourceExtensionMethods AutoMapper.Profile.AutoMapper.Configuration.IProfileConfiguration.TypeConfigurations AutoMapper.Profile.AutoMapper.Configuration.IProfileConfiguration.TypeMapConfigs AutoMapper.Profile.AutoMapper.Configuration.IProfileConfiguration.OpenTypeMapConfigs AutoMapper.Profile.ProfileName AutoMapper.Profile.AllowNullDestinationValues AutoMapper.Profile.AllowNullCollections AutoMapper.Profile.EnableNullPropagationForQueryMapping AutoMapper.Profile.ShouldMapProperty AutoMapper.Profile.ShouldMapField AutoMapper.Profile.SourceMemberNamingConvention AutoMapper.Profile.DestinationMemberNamingConvention Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.UniversalReference Assembly : Microsoft.DocAsCode.Build.UniversalReference.dll Syntax public class ApiBuildOutputProfile : Profile, IProfileExpression, IProfileConfiguration Constructors | Improve this Doc View Source ApiBuildOutputProfile(String[], IReadOnlyDictionary<String, Object>, IReadOnlyDictionary<String, ApiNames>) Declaration public ApiBuildOutputProfile(string[] supportedLanguages, IReadOnlyDictionary<string, object> metadata, IReadOnlyDictionary<string, ApiNames> references) Parameters Type Name Description String [] supportedLanguages IReadOnlyDictionary < String , Object > metadata IReadOnlyDictionary < String , ApiNames > references Implements AutoMapper.IProfileExpression AutoMapper.Configuration.IProfileConfiguration (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.UniversalReference.ApiBuildOutputMetadataResolver.html": {
    "href": "api/Microsoft.DocAsCode.Build.UniversalReference.ApiBuildOutputMetadataResolver.html",
    "title": "Class ApiBuildOutputMetadataResolver | DocFX website",
    "keywords": "Class ApiBuildOutputMetadataResolver Inheritance Object ApiBuildOutputMetadataResolver Implements AutoMapper.IValueResolver < ItemViewModel , ApiBuildOutput , Dictionary < String , Object >> Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.UniversalReference Assembly : Microsoft.DocAsCode.Build.UniversalReference.dll Syntax public class ApiBuildOutputMetadataResolver : IValueResolver<ItemViewModel, ApiBuildOutput, Dictionary<string, object>> Constructors | Improve this Doc View Source ApiBuildOutputMetadataResolver(IReadOnlyDictionary<String, Object>) Declaration public ApiBuildOutputMetadataResolver(IReadOnlyDictionary<string, object> metadata) Parameters Type Name Description IReadOnlyDictionary < String , Object > metadata Methods | Improve this Doc View Source Resolve(ItemViewModel, ApiBuildOutput, Dictionary<String, Object>, ResolutionContext) Declaration public Dictionary<string, object> Resolve(ItemViewModel source, ApiBuildOutput destination, Dictionary<string, object> destMember, ResolutionContext context) Parameters Type Name Description ItemViewModel source ApiBuildOutput destination Dictionary < String , Object > destMember AutoMapper.ResolutionContext context Returns Type Description Dictionary < String , Object > Implements AutoMapper.IValueResolver<TSource, TDestination, TDestMember> (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.UniversalReference.ApiBuildOutput.html": {
    "href": "api/Microsoft.DocAsCode.Build.UniversalReference.ApiBuildOutput.html",
    "title": "Class ApiBuildOutput | DocFX website",
    "keywords": "Class ApiBuildOutput Inheritance Object ApiBuildOutput Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.UniversalReference Assembly : Microsoft.DocAsCode.Build.UniversalReference.dll Syntax [Serializable] public class ApiBuildOutput Properties | Improve this Doc View Source AssemblyNameList Declaration [YamlMember(Alias = \"assemblies\")] [JsonProperty(\"assemblies\")] public List<ApiLanguageValuePair<List<string>>> AssemblyNameList { get; set; } Property Value Type Description List < ApiLanguageValuePair < List < String >>> | Improve this Doc View Source Children Declaration [YamlMember(Alias = \"children\")] [JsonProperty(\"children\")] public List<ApiLanguageValuePair<List<ApiBuildOutput>>> Children { get; set; } Property Value Type Description List < ApiLanguageValuePair < List < ApiBuildOutput >>> | Improve this Doc View Source CommentId Declaration [YamlMember(Alias = \"commentId\")] [JsonProperty(\"commentId\")] public string CommentId { get; set; } Property Value Type Description String | Improve this Doc View Source Conceptual Declaration [YamlMember(Alias = \"conceptual\")] [JsonProperty(\"conceptual\")] public string Conceptual { get; set; } Property Value Type Description String | Improve this Doc View Source DerivedClasses Declaration [YamlMember(Alias = \"derivedClasses\")] [JsonProperty(\"derivedClasses\")] public List<ApiLanguageValuePair<List<ApiNames>>> DerivedClasses { get; set; } Property Value Type Description List < ApiLanguageValuePair < List < ApiNames >>> | Improve this Doc View Source Documentation Declaration [YamlMember(Alias = \"documentation\")] [JsonProperty(\"documentation\")] public SourceDetail Documentation { get; set; } Property Value Type Description SourceDetail | Improve this Doc View Source Examples Declaration [YamlMember(Alias = \"example\")] [JsonProperty(\"example\")] public List<string> Examples { get; set; } Property Value Type Description List < String > | Improve this Doc View Source Exceptions Declaration [YamlMember(Alias = \"exceptions\")] [JsonProperty(\"exceptions\")] public List<ApiLanguageValuePair<List<ApiExceptionInfoBuildOutput>>> Exceptions { get; set; } Property Value Type Description List < ApiLanguageValuePair < List < ApiExceptionInfoBuildOutput >>> | Improve this Doc View Source ExtensionMethods Declaration [YamlMember(Alias = \"extensionMethods\")] [JsonProperty(\"extensionMethods\")] public List<ApiLanguageValuePair<List<ApiNames>>> ExtensionMethods { get; set; } Property Value Type Description List < ApiLanguageValuePair < List < ApiNames >>> | Improve this Doc View Source FullName Declaration [YamlMember(Alias = \"fullName\")] [JsonProperty(\"fullName\")] public List<ApiLanguageValuePair<string>> FullName { get; set; } Property Value Type Description List < ApiLanguageValuePair < String >> | Improve this Doc View Source Href Declaration [YamlMember(Alias = \"href\")] [JsonProperty(\"href\")] public string Href { get; set; } Property Value Type Description String | Improve this Doc View Source Implements Declaration [YamlMember(Alias = \"implements\")] [JsonProperty(\"implements\")] public List<ApiLanguageValuePair<List<ApiNames>>> Implements { get; set; } Property Value Type Description List < ApiLanguageValuePair < List < ApiNames >>> | Improve this Doc View Source Inheritance Declaration [YamlMember(Alias = \"inheritance\")] [JsonProperty(\"inheritance\")] public List<ApiLanguageValuePair<List<ApiInheritanceTreeBuildOutput>>> Inheritance { get; set; } Property Value Type Description List < ApiLanguageValuePair < List < ApiInheritanceTreeBuildOutput >>> | Improve this Doc View Source InheritedMembers Declaration [YamlMember(Alias = \"inheritedMembers\")] [JsonProperty(\"inheritedMembers\")] public List<ApiLanguageValuePair<List<ApiNames>>> InheritedMembers { get; set; } Property Value Type Description List < ApiLanguageValuePair < List < ApiNames >>> | Improve this Doc View Source Metadata Declaration [JsonExtensionData] public Dictionary<string, object> Metadata { get; set; } Property Value Type Description Dictionary < String , Object > | Improve this Doc View Source Name Declaration [YamlMember(Alias = \"name\")] [JsonProperty(\"name\")] public List<ApiLanguageValuePair<string>> Name { get; set; } Property Value Type Description List < ApiLanguageValuePair < String >> | Improve this Doc View Source NamespaceName Declaration [YamlMember(Alias = \"namespace\")] [JsonProperty(\"namespace\")] public List<ApiLanguageValuePair<ApiNames>> NamespaceName { get; set; } Property Value Type Description List < ApiLanguageValuePair < ApiNames >> | Improve this Doc View Source NameWithType Declaration [YamlMember(Alias = \"nameWithType\")] [JsonProperty(\"nameWithType\")] public List<ApiLanguageValuePair<string>> NameWithType { get; set; } Property Value Type Description List < ApiLanguageValuePair < String >> | Improve this Doc View Source Overload Declaration [YamlMember(Alias = \"overload\")] [JsonProperty(\"overload\")] public List<ApiLanguageValuePair<ApiNames>> Overload { get; set; } Property Value Type Description List < ApiLanguageValuePair < ApiNames >> | Improve this Doc View Source Overridden Declaration [YamlMember(Alias = \"overridden\")] [JsonProperty(\"overridden\")] public List<ApiLanguageValuePair<ApiNames>> Overridden { get; set; } Property Value Type Description List < ApiLanguageValuePair < ApiNames >> | Improve this Doc View Source Parent Declaration [YamlMember(Alias = \"parent\")] [JsonProperty(\"parent\")] public List<ApiLanguageValuePair<ApiNames>> Parent { get; set; } Property Value Type Description List < ApiLanguageValuePair < ApiNames >> | Improve this Doc View Source Platform Declaration [YamlMember(Alias = \"platform\")] [JsonProperty(\"platform\")] public List<ApiLanguageValuePair<List<string>>> Platform { get; set; } Property Value Type Description List < ApiLanguageValuePair < List < String >>> | Improve this Doc View Source Remarks Declaration [YamlMember(Alias = \"remarks\")] [JsonProperty(\"remarks\")] public string Remarks { get; set; } Property Value Type Description String | Improve this Doc View Source SeeAlsoContent Declaration [YamlMember(Alias = \"seealsoContent\")] [JsonProperty(\"seealsoContent\")] public string SeeAlsoContent { get; set; } Property Value Type Description String | Improve this Doc View Source SeeAlsos Declaration [YamlMember(Alias = \"seealso\")] [JsonProperty(\"seealso\")] public List<ApiLinkInfoBuildOutput> SeeAlsos { get; set; } Property Value Type Description List < ApiLinkInfoBuildOutput > | Improve this Doc View Source Sees Declaration [YamlMember(Alias = \"see\")] [JsonProperty(\"see\")] public List<ApiLinkInfoBuildOutput> Sees { get; set; } Property Value Type Description List < ApiLinkInfoBuildOutput > | Improve this Doc View Source Source Declaration [YamlMember(Alias = \"source\")] [JsonProperty(\"source\")] public List<ApiLanguageValuePair<SourceDetail>> Source { get; set; } Property Value Type Description List < ApiLanguageValuePair < SourceDetail >> | Improve this Doc View Source Summary Declaration [YamlMember(Alias = \"summary\")] [JsonProperty(\"summary\")] public string Summary { get; set; } Property Value Type Description String | Improve this Doc View Source SupportedLanguages Declaration [YamlMember(Alias = \"langs\")] [JsonProperty(\"langs\")] public string[] SupportedLanguages { get; set; } Property Value Type Description String [] | Improve this Doc View Source Syntax Declaration [YamlMember(Alias = \"syntax\")] [JsonProperty(\"syntax\")] public ApiSyntaxBuildOutput Syntax { get; set; } Property Value Type Description ApiSyntaxBuildOutput | Improve this Doc View Source Type Declaration [YamlMember(Alias = \"type\")] [JsonProperty(\"type\")] public string Type { get; set; } Property Value Type Description String | Improve this Doc View Source Uid Declaration [YamlMember(Alias = \"uid\")] [JsonProperty(\"uid\")] public string Uid { get; set; } Property Value Type Description String (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.SchemaDriven.Processors.XrefPropertiesInterpreter.html": {
    "href": "api/Microsoft.DocAsCode.Build.SchemaDriven.Processors.XrefPropertiesInterpreter.html",
    "title": "Class XrefPropertiesInterpreter | DocFX website",
    "keywords": "Class XrefPropertiesInterpreter Inheritance Object XrefPropertiesInterpreter Implements IInterpreter Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.SchemaDriven.Processors Assembly : Microsoft.DocAsCode.Build.SchemaDriven.dll Syntax public class XrefPropertiesInterpreter : IInterpreter Methods | Improve this Doc View Source CanInterpret(BaseSchema) Report xrefSpec when ContentType = uid is defined => xref spec to be exported to xrefspec.yml Or 2. XrefResolver is defined => external xref spec Declaration public bool CanInterpret(BaseSchema schema) Parameters Type Name Description BaseSchema schema Returns Type Description Boolean | Improve this Doc View Source Interpret(BaseSchema, Object, IProcessContext, String) Declaration public object Interpret(BaseSchema schema, object value, IProcessContext context, string path) Parameters Type Name Description BaseSchema schema Object value IProcessContext context String path Returns Type Description Object Implements IInterpreter (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.SchemaDriven.Processors.XrefInterpreter.html": {
    "href": "api/Microsoft.DocAsCode.Build.SchemaDriven.Processors.XrefInterpreter.html",
    "title": "Class XrefInterpreter | DocFX website",
    "keywords": "Class XrefInterpreter Inheritance Object XrefInterpreter Implements IInterpreter Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.SchemaDriven.Processors Assembly : Microsoft.DocAsCode.Build.SchemaDriven.dll Syntax public class XrefInterpreter : IInterpreter Constructors | Improve this Doc View Source XrefInterpreter(Boolean, Boolean) Declaration public XrefInterpreter(bool aggregateXrefs, bool resolveXref) Parameters Type Name Description Boolean aggregateXrefs Boolean resolveXref Methods | Improve this Doc View Source CanInterpret(BaseSchema) Declaration public bool CanInterpret(BaseSchema schema) Parameters Type Name Description BaseSchema schema Returns Type Description Boolean | Improve this Doc View Source Interpret(BaseSchema, Object, IProcessContext, String) Declaration public object Interpret(BaseSchema schema, object value, IProcessContext context, string path) Parameters Type Name Description BaseSchema schema Object value IProcessContext context String path Returns Type Description Object Implements IInterpreter (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.SchemaDriven.Processors.TagsInterpreter.html": {
    "href": "api/Microsoft.DocAsCode.Build.SchemaDriven.Processors.TagsInterpreter.html",
    "title": "Class TagsInterpreter | DocFX website",
    "keywords": "Class TagsInterpreter Inheritance Object TagsInterpreter Implements IInterpreter Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.SchemaDriven.Processors Assembly : Microsoft.DocAsCode.Build.SchemaDriven.dll Syntax public class TagsInterpreter : IInterpreter Constructors | Improve this Doc View Source TagsInterpreter(IList<ITagInterpreter>) Declaration public TagsInterpreter(IList<ITagInterpreter> tagInterpreters) Parameters Type Name Description IList < ITagInterpreter > tagInterpreters Properties | Improve this Doc View Source Order Declaration public int Order { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source CanInterpret(BaseSchema) Declaration public bool CanInterpret(BaseSchema schema) Parameters Type Name Description BaseSchema schema Returns Type Description Boolean | Improve this Doc View Source Interpret(BaseSchema, Object, IProcessContext, String) Declaration public object Interpret(BaseSchema schema, object value, IProcessContext context, string path) Parameters Type Name Description BaseSchema schema Object value IProcessContext context String path Returns Type Description Object Implements IInterpreter (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.SchemaDriven.Processors.SchemaProcessor.html": {
    "href": "api/Microsoft.DocAsCode.Build.SchemaDriven.Processors.SchemaProcessor.html",
    "title": "Class SchemaProcessor | DocFX website",
    "keywords": "Class SchemaProcessor Inheritance Object SchemaProcessor Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.SchemaDriven.Processors Assembly : Microsoft.DocAsCode.Build.SchemaDriven.dll Syntax public class SchemaProcessor Constructors | Improve this Doc View Source SchemaProcessor(IInterpreter[]) Declaration public SchemaProcessor(params IInterpreter[] interpreters) Parameters Type Name Description IInterpreter [] interpreters Methods | Improve this Doc View Source Process(Object, BaseSchema, IProcessContext) Declaration public object Process(object raw, BaseSchema schema, IProcessContext context) Parameters Type Name Description Object raw BaseSchema schema IProcessContext context Returns Type Description Object (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.SchemaDriven.Processors.ProcessContext.html": {
    "href": "api/Microsoft.DocAsCode.Build.SchemaDriven.Processors.ProcessContext.html",
    "title": "Class ProcessContext | DocFX website",
    "keywords": "Class ProcessContext Inheritance Object ProcessContext Implements IProcessContext Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.SchemaDriven.Processors Assembly : Microsoft.DocAsCode.Build.SchemaDriven.dll Syntax public class ProcessContext : IProcessContext Constructors | Improve this Doc View Source ProcessContext(IHostService, FileModel, IDocumentBuildContext) Declaration public ProcessContext(IHostService hs, FileModel fm, IDocumentBuildContext bc = null) Parameters Type Name Description IHostService hs FileModel fm IDocumentBuildContext bc | Improve this Doc View Source ProcessContext(IHostService, FileModel, IDocumentBuildContext, MarkdigMarkdownService) Declaration public ProcessContext(IHostService hs, FileModel fm, IDocumentBuildContext bc, MarkdigMarkdownService markdigMarkdownService = null) Parameters Type Name Description IHostService hs FileModel fm IDocumentBuildContext bc MarkdigMarkdownService markdigMarkdownService Properties | Improve this Doc View Source BuildContext Declaration public IDocumentBuildContext BuildContext { get; } Property Value Type Description IDocumentBuildContext | Improve this Doc View Source ContentAnchorParser Declaration public IContentAnchorParser ContentAnchorParser { get; set; } Property Value Type Description IContentAnchorParser | Improve this Doc View Source Dependency Declaration public HashSet<string> Dependency { get; } Property Value Type Description HashSet < String > | Improve this Doc View Source ExternalXRefSpecs Declaration public List<XRefSpec> ExternalXRefSpecs { get; } Property Value Type Description List < XRefSpec > | Improve this Doc View Source FileAndType Declaration public FileAndType FileAndType { get; } Property Value Type Description FileAndType | Improve this Doc View Source FileLinkSources Declaration public Dictionary<string, List<LinkSourceInfo>> FileLinkSources { get; } Property Value Type Description Dictionary < String , List < LinkSourceInfo >> | Improve this Doc View Source Host Declaration public IHostService Host { get; } Property Value Type Description IHostService | Improve this Doc View Source MarkdigMarkdownService Declaration public MarkdigMarkdownService MarkdigMarkdownService { get; set; } Property Value Type Description MarkdigMarkdownService | Improve this Doc View Source Metadata Declaration public IDictionary<string, object> Metadata { get; } Property Value Type Description IDictionary < String , Object > | Improve this Doc View Source OriginalFileAndType Declaration public FileAndType OriginalFileAndType { get; } Property Value Type Description FileAndType | Improve this Doc View Source PathProperties Declaration public Dictionary<string, Dictionary<string, object>> PathProperties { get; } Property Value Type Description Dictionary < String , Dictionary < String , Object >> | Improve this Doc View Source UidLinkSources Declaration public Dictionary<string, List<LinkSourceInfo>> UidLinkSources { get; } Property Value Type Description Dictionary < String , List < LinkSourceInfo >> | Improve this Doc View Source Uids Declaration public List<UidDefinition> Uids { get; } Property Value Type Description List < UidDefinition > | Improve this Doc View Source XRefSpecs Declaration public List<XRefSpec> XRefSpecs { get; } Property Value Type Description List < XRefSpec > Methods | Improve this Doc View Source GetModel<T>() Declaration public T GetModel<T>() Returns Type Description T Type Parameters Name Description T Implements IProcessContext (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.SchemaDriven.Processors.MergeTypeInterpreter.html": {
    "href": "api/Microsoft.DocAsCode.Build.SchemaDriven.Processors.MergeTypeInterpreter.html",
    "title": "Class MergeTypeInterpreter | DocFX website",
    "keywords": "Class MergeTypeInterpreter Inheritance Object MergeTypeInterpreter Implements IInterpreter Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.SchemaDriven.Processors Assembly : Microsoft.DocAsCode.Build.SchemaDriven.dll Syntax public class MergeTypeInterpreter : IInterpreter Properties | Improve this Doc View Source Order Declaration public int Order { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source CanInterpret(BaseSchema) Declaration public bool CanInterpret(BaseSchema schema) Parameters Type Name Description BaseSchema schema Returns Type Description Boolean | Improve this Doc View Source Interpret(BaseSchema, Object, IProcessContext, String) Declaration public object Interpret(BaseSchema schema, object value, IProcessContext context, string path) Parameters Type Name Description BaseSchema schema Object value IProcessContext context String path Returns Type Description Object Implements IInterpreter (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.SchemaDriven.Processors.MarkdownWithContentAnchorInterpreter.html": {
    "href": "api/Microsoft.DocAsCode.Build.SchemaDriven.Processors.MarkdownWithContentAnchorInterpreter.html",
    "title": "Class MarkdownWithContentAnchorInterpreter | DocFX website",
    "keywords": "Class MarkdownWithContentAnchorInterpreter Inheritance Object MarkdownWithContentAnchorInterpreter Implements IInterpreter Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.SchemaDriven.Processors Assembly : Microsoft.DocAsCode.Build.SchemaDriven.dll Syntax public class MarkdownWithContentAnchorInterpreter : IInterpreter Constructors | Improve this Doc View Source MarkdownWithContentAnchorInterpreter(IInterpreter) Declaration public MarkdownWithContentAnchorInterpreter(IInterpreter inner) Parameters Type Name Description IInterpreter inner Methods | Improve this Doc View Source CanInterpret(BaseSchema) Declaration public bool CanInterpret(BaseSchema schema) Parameters Type Name Description BaseSchema schema Returns Type Description Boolean | Improve this Doc View Source Interpret(BaseSchema, Object, IProcessContext, String) Declaration public object Interpret(BaseSchema schema, object value, IProcessContext context, string path) Parameters Type Name Description BaseSchema schema Object value IProcessContext context String path Returns Type Description Object Implements IInterpreter (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.SchemaDriven.Processors.MarkdownInterpreter.html": {
    "href": "api/Microsoft.DocAsCode.Build.SchemaDriven.Processors.MarkdownInterpreter.html",
    "title": "Class MarkdownInterpreter | DocFX website",
    "keywords": "Class MarkdownInterpreter Inheritance Object MarkdownInterpreter Implements IInterpreter Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.SchemaDriven.Processors Assembly : Microsoft.DocAsCode.Build.SchemaDriven.dll Syntax public class MarkdownInterpreter : IInterpreter Methods | Improve this Doc View Source CanInterpret(BaseSchema) Declaration public bool CanInterpret(BaseSchema schema) Parameters Type Name Description BaseSchema schema Returns Type Description Boolean | Improve this Doc View Source Interpret(BaseSchema, Object, IProcessContext, String) Declaration public object Interpret(BaseSchema schema, object value, IProcessContext context, string path) Parameters Type Name Description BaseSchema schema Object value IProcessContext context String path Returns Type Description Object Implements IInterpreter (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.SchemaDriven.Processors.MarkdownAstInterpreter.html": {
    "href": "api/Microsoft.DocAsCode.Build.SchemaDriven.Processors.MarkdownAstInterpreter.html",
    "title": "Class MarkdownAstInterpreter | DocFX website",
    "keywords": "Class MarkdownAstInterpreter Inheritance Object MarkdownAstInterpreter Implements IInterpreter Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.SchemaDriven.Processors Assembly : Microsoft.DocAsCode.Build.SchemaDriven.dll Syntax public class MarkdownAstInterpreter : IInterpreter Constructors | Improve this Doc View Source MarkdownAstInterpreter(IInterpreter) Declaration public MarkdownAstInterpreter(IInterpreter inner) Parameters Type Name Description IInterpreter inner Methods | Improve this Doc View Source CanInterpret(BaseSchema) Declaration public bool CanInterpret(BaseSchema schema) Parameters Type Name Description BaseSchema schema Returns Type Description Boolean | Improve this Doc View Source Interpret(BaseSchema, Object, IProcessContext, String) Declaration public object Interpret(BaseSchema schema, object value, IProcessContext context, string path) Parameters Type Name Description BaseSchema schema Object value IProcessContext context String path Returns Type Description Object Implements IInterpreter (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.SchemaDriven.Processors.ITagInterpreter.html": {
    "href": "api/Microsoft.DocAsCode.Build.SchemaDriven.Processors.ITagInterpreter.html",
    "title": "Interface ITagInterpreter | DocFX website",
    "keywords": "Interface ITagInterpreter Namespace : Microsoft.DocAsCode.Build.SchemaDriven.Processors Assembly : Microsoft.DocAsCode.Build.SchemaDriven.dll Syntax public interface ITagInterpreter Properties | Improve this Doc View Source Order Declaration int Order { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source Interpret(String, BaseSchema, Object, IProcessContext, String) Declaration object Interpret(string tagName, BaseSchema schema, object value, IProcessContext context, string path) Parameters Type Name Description String tagName BaseSchema schema Object value IProcessContext context String path Returns Type Description Object | Improve this Doc View Source Matches(String) Declaration bool Matches(string tagName) Parameters Type Name Description String tagName Returns Type Description Boolean (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.SchemaDriven.Processors.IProcessContext.html": {
    "href": "api/Microsoft.DocAsCode.Build.SchemaDriven.Processors.IProcessContext.html",
    "title": "Interface IProcessContext | DocFX website",
    "keywords": "Interface IProcessContext Namespace : Microsoft.DocAsCode.Build.SchemaDriven.Processors Assembly : Microsoft.DocAsCode.Build.SchemaDriven.dll Syntax public interface IProcessContext Properties | Improve this Doc View Source BuildContext Declaration IDocumentBuildContext BuildContext { get; } Property Value Type Description IDocumentBuildContext | Improve this Doc View Source ContentAnchorParser Declaration IContentAnchorParser ContentAnchorParser { get; } Property Value Type Description IContentAnchorParser | Improve this Doc View Source Dependency Declaration HashSet<string> Dependency { get; } Property Value Type Description HashSet < String > | Improve this Doc View Source ExternalXRefSpecs Declaration List<XRefSpec> ExternalXRefSpecs { get; } Property Value Type Description List < XRefSpec > | Improve this Doc View Source FileAndType Declaration FileAndType FileAndType { get; } Property Value Type Description FileAndType | Improve this Doc View Source FileLinkSources Declaration Dictionary<string, List<LinkSourceInfo>> FileLinkSources { get; } Property Value Type Description Dictionary < String , List < LinkSourceInfo >> | Improve this Doc View Source Host Declaration IHostService Host { get; } Property Value Type Description IHostService | Improve this Doc View Source MarkdigMarkdownService Declaration MarkdigMarkdownService MarkdigMarkdownService { get; } Property Value Type Description MarkdigMarkdownService | Improve this Doc View Source Metadata Declaration IDictionary<string, object> Metadata { get; } Property Value Type Description IDictionary < String , Object > | Improve this Doc View Source OriginalFileAndType Declaration FileAndType OriginalFileAndType { get; } Property Value Type Description FileAndType | Improve this Doc View Source PathProperties Declaration Dictionary<string, Dictionary<string, object>> PathProperties { get; } Property Value Type Description Dictionary < String , Dictionary < String , Object >> | Improve this Doc View Source UidLinkSources Declaration Dictionary<string, List<LinkSourceInfo>> UidLinkSources { get; } Property Value Type Description Dictionary < String , List < LinkSourceInfo >> | Improve this Doc View Source Uids Declaration List<UidDefinition> Uids { get; } Property Value Type Description List < UidDefinition > | Improve this Doc View Source XRefSpecs Declaration List<XRefSpec> XRefSpecs { get; } Property Value Type Description List < XRefSpec > Methods | Improve this Doc View Source GetModel<T>() Declaration T GetModel<T>() Returns Type Description T Type Parameters Name Description T (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.SchemaDriven.Processors.IInterpreter.html": {
    "href": "api/Microsoft.DocAsCode.Build.SchemaDriven.Processors.IInterpreter.html",
    "title": "Interface IInterpreter | DocFX website",
    "keywords": "Interface IInterpreter Namespace : Microsoft.DocAsCode.Build.SchemaDriven.Processors Assembly : Microsoft.DocAsCode.Build.SchemaDriven.dll Syntax public interface IInterpreter Methods | Improve this Doc View Source CanInterpret(BaseSchema) Declaration bool CanInterpret(BaseSchema schema) Parameters Type Name Description BaseSchema schema Returns Type Description Boolean | Improve this Doc View Source Interpret(BaseSchema, Object, IProcessContext, String) Declaration object Interpret(BaseSchema schema, object value, IProcessContext context, string path) Parameters Type Name Description BaseSchema schema Object value IProcessContext context String path Returns Type Description Object (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.SchemaDriven.Processors.HrefInterpreter.html": {
    "href": "api/Microsoft.DocAsCode.Build.SchemaDriven.Processors.HrefInterpreter.html",
    "title": "Class HrefInterpreter | DocFX website",
    "keywords": "Class HrefInterpreter Inheritance Object HrefInterpreter Implements IInterpreter Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.SchemaDriven.Processors Assembly : Microsoft.DocAsCode.Build.SchemaDriven.dll Syntax public class HrefInterpreter : IInterpreter Constructors | Improve this Doc View Source HrefInterpreter(Boolean, Boolean) Declaration public HrefInterpreter(bool exportFileLink, bool updateValue) Parameters Type Name Description Boolean exportFileLink Boolean updateValue Methods | Improve this Doc View Source CanInterpret(BaseSchema) Declaration public bool CanInterpret(BaseSchema schema) Parameters Type Name Description BaseSchema schema Returns Type Description Boolean | Improve this Doc View Source Interpret(BaseSchema, Object, IProcessContext, String) Declaration public object Interpret(BaseSchema schema, object value, IProcessContext context, string path) Parameters Type Name Description BaseSchema schema Object value IProcessContext context String path Returns Type Description Object Implements IInterpreter (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.SchemaDriven.Processors.FragmentsValidationInterpreter.html": {
    "href": "api/Microsoft.DocAsCode.Build.SchemaDriven.Processors.FragmentsValidationInterpreter.html",
    "title": "Class FragmentsValidationInterpreter | DocFX website",
    "keywords": "Class FragmentsValidationInterpreter Inheritance Object FragmentsValidationInterpreter Implements IInterpreter Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.SchemaDriven.Processors Assembly : Microsoft.DocAsCode.Build.SchemaDriven.dll Syntax public class FragmentsValidationInterpreter : IInterpreter Methods | Improve this Doc View Source CanInterpret(BaseSchema) Declaration public bool CanInterpret(BaseSchema schema) Parameters Type Name Description BaseSchema schema Returns Type Description Boolean | Improve this Doc View Source Interpret(BaseSchema, Object, IProcessContext, String) Declaration public object Interpret(BaseSchema schema, object value, IProcessContext context, string path) Parameters Type Name Description BaseSchema schema Object value IProcessContext context String path Returns Type Description Object Implements IInterpreter (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.SchemaDriven.Processors.FileInterpreter.html": {
    "href": "api/Microsoft.DocAsCode.Build.SchemaDriven.Processors.FileInterpreter.html",
    "title": "Class FileInterpreter | DocFX website",
    "keywords": "Class FileInterpreter Inheritance Object FileInterpreter Implements IInterpreter Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.SchemaDriven.Processors Assembly : Microsoft.DocAsCode.Build.SchemaDriven.dll Syntax public class FileInterpreter : IInterpreter Constructors | Improve this Doc View Source FileInterpreter(Boolean, Boolean) Declaration public FileInterpreter(bool exportFileLink, bool updateValue) Parameters Type Name Description Boolean exportFileLink Boolean updateValue Methods | Improve this Doc View Source CanInterpret(BaseSchema) Declaration public bool CanInterpret(BaseSchema schema) Parameters Type Name Description BaseSchema schema Returns Type Description Boolean | Improve this Doc View Source Interpret(BaseSchema, Object, IProcessContext, String) Declaration public object Interpret(BaseSchema schema, object value, IProcessContext context, string path) Parameters Type Name Description BaseSchema schema Object value IProcessContext context String path Returns Type Description Object Implements IInterpreter (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.SchemaDriven.Processors.FileIncludeInterpreter.html": {
    "href": "api/Microsoft.DocAsCode.Build.SchemaDriven.Processors.FileIncludeInterpreter.html",
    "title": "Class FileIncludeInterpreter | DocFX website",
    "keywords": "Class FileIncludeInterpreter Inheritance Object FileIncludeInterpreter Implements IInterpreter Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.SchemaDriven.Processors Assembly : Microsoft.DocAsCode.Build.SchemaDriven.dll Syntax public class FileIncludeInterpreter : IInterpreter Methods | Improve this Doc View Source CanInterpret(BaseSchema) Declaration public bool CanInterpret(BaseSchema schema) Parameters Type Name Description BaseSchema schema Returns Type Description Boolean | Improve this Doc View Source Interpret(BaseSchema, Object, IProcessContext, String) Declaration public object Interpret(BaseSchema schema, object value, IProcessContext context, string path) Parameters Type Name Description BaseSchema schema Object value IProcessContext context String path Returns Type Description Object Implements IInterpreter (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.RestApi.SwaggerModelConverter.html": {
    "href": "api/Microsoft.DocAsCode.Build.RestApi.SwaggerModelConverter.html",
    "title": "Class SwaggerModelConverter | DocFX website",
    "keywords": "Class SwaggerModelConverter Inheritance Object SwaggerModelConverter Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.RestApi Assembly : Microsoft.DocAsCode.Build.RestApi.dll Syntax public static class SwaggerModelConverter Methods | Improve this Doc View Source FromSwaggerModel(SwaggerModel) Declaration public static RestApiRootItemViewModel FromSwaggerModel(SwaggerModel swagger) Parameters Type Name Description SwaggerModel swagger Returns Type Description RestApiRootItemViewModel (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.RestApi.Swagger.html": {
    "href": "api/Microsoft.DocAsCode.Build.RestApi.Swagger.html",
    "title": "Namespace Microsoft.DocAsCode.Build.RestApi.Swagger | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.Build.RestApi.Swagger Classes InfoObject Info object OperationObject ParameterObject PathItemObject TODO: need a converter PathsObject ResponseObject SwaggerJsonParser SwaggerModel TagItemObject (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.RestApi.Swagger.TagItemObject.html": {
    "href": "api/Microsoft.DocAsCode.Build.RestApi.Swagger.TagItemObject.html",
    "title": "Class TagItemObject | DocFX website",
    "keywords": "Class TagItemObject Inheritance Object TagItemObject Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.RestApi.Swagger Assembly : Microsoft.DocAsCode.Build.RestApi.dll Syntax [Serializable] public class TagItemObject Properties | Improve this Doc View Source BookmarkId Define the bookmark id for the tag. It's extensions to the Swagger Schema, which MUST begin with 'x-'. Declaration [YamlMember(Alias = \"x-bookmark-id\")] [JsonProperty(\"x-bookmark-id\")] public string BookmarkId { get; set; } Property Value Type Description String | Improve this Doc View Source Description A short description for the tag. GFM syntax can be used for rich text representation. Declaration [YamlMember(Alias = \"description\")] [JsonProperty(\"description\")] public string Description { get; set; } Property Value Type Description String | Improve this Doc View Source Metadata Declaration [JsonExtensionData] public Dictionary<string, object> Metadata { get; set; } Property Value Type Description Dictionary < String , Object > | Improve this Doc View Source Name Required. The name of the tag. Declaration [YamlMember(Alias = \"name\")] [JsonProperty(\"name\")] public string Name { get; set; } Property Value Type Description String (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.RestApi.Swagger.SwaggerModel.html": {
    "href": "api/Microsoft.DocAsCode.Build.RestApi.Swagger.SwaggerModel.html",
    "title": "Class SwaggerModel | DocFX website",
    "keywords": "Class SwaggerModel Inheritance Object SwaggerModel Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.RestApi.Swagger Assembly : Microsoft.DocAsCode.Build.RestApi.dll Syntax [Serializable] public class SwaggerModel Properties | Improve this Doc View Source BasePath The base path on which the API is served, which is relative to the host. If it is not included, the API is served directly under the host. The value MUST start with a leading slash (/). The basePath does not support path templating. Declaration [YamlMember(Alias = \"basePath\")] [JsonProperty(\"basePath\")] public string BasePath { get; set; } Property Value Type Description String | Improve this Doc View Source Definitions An object to hold data types produced and consumed by operations. Declaration [YamlMember(Alias = \"definitions\")] [JsonProperty(\"definitions\")] public object Definitions { get; set; } Property Value Type Description Object | Improve this Doc View Source Description Declaration [YamlMember(Alias = \"description\")] [JsonProperty(\"description\")] public string Description { get; set; } Property Value Type Description String | Improve this Doc View Source Host The host (name or ip) serving the API. This MUST be the host only and does not include the scheme nor sub-paths. It MAY include a port. If the host is not included, the host serving the documentation is to be used (including the port). The host does not support path templating. Declaration [YamlMember(Alias = \"host\")] [JsonProperty(\"host\")] public string Host { get; set; } Property Value Type Description String | Improve this Doc View Source Info Required. Provides metadata about the API. The metadata can be used by the clients if needed. Declaration [YamlMember(Alias = \"info\")] [JsonProperty(\"info\")] public InfoObject Info { get; set; } Property Value Type Description InfoObject | Improve this Doc View Source Metadata Declaration [JsonExtensionData] public Dictionary<string, object> Metadata { get; set; } Property Value Type Description Dictionary < String , Object > | Improve this Doc View Source Parameters An object to hold parameters that can be used across operations. This property does not define global parameters for all operations Declaration [YamlMember(Alias = \"parameters\")] [JsonProperty(\"parameters\")] public object Parameters { get; set; } Property Value Type Description Object | Improve this Doc View Source Paths Required. The available paths and operations for the API. Declaration [YamlMember(Alias = \"paths\")] [JsonProperty(\"paths\")] public PathsObject Paths { get; set; } Property Value Type Description PathsObject | Improve this Doc View Source Raw The original swagger.json content Declaration [YamlIgnore] [JsonIgnore] public string Raw { get; set; } Property Value Type Description String | Improve this Doc View Source Responses An object to hold responses that can be used across operations. This property does not define global responses for all operations. Declaration [YamlMember(Alias = \"responses\")] [JsonProperty(\"responses\")] public object Responses { get; set; } Property Value Type Description Object | Improve this Doc View Source Summary Declaration [YamlMember(Alias = \"summary\")] [JsonProperty(\"summary\")] public string Summary { get; set; } Property Value Type Description String | Improve this Doc View Source Tags A list of tags used by the specification with additional metadata. The order of the tags can be used to reflect on their order by the parsing tools. Declaration [YamlMember(Alias = \"tags\")] [JsonProperty(\"tags\")] public List<TagItemObject> Tags { get; set; } Property Value Type Description List < TagItemObject > (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.RestApi.Swagger.SwaggerJsonParser.html": {
    "href": "api/Microsoft.DocAsCode.Build.RestApi.Swagger.SwaggerJsonParser.html",
    "title": "Class SwaggerJsonParser | DocFX website",
    "keywords": "Class SwaggerJsonParser Inheritance Object SwaggerJsonParser Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.RestApi.Swagger Assembly : Microsoft.DocAsCode.Build.RestApi.dll Syntax public class SwaggerJsonParser Methods | Improve this Doc View Source Parse(String) Declaration public static SwaggerModel Parse(string swaggerFilePath) Parameters Type Name Description String swaggerFilePath Returns Type Description SwaggerModel (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.RestApi.Swagger.ResponseObject.html": {
    "href": "api/Microsoft.DocAsCode.Build.RestApi.Swagger.ResponseObject.html",
    "title": "Class ResponseObject | DocFX website",
    "keywords": "Class ResponseObject Inheritance Object ResponseObject Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.RestApi.Swagger Assembly : Microsoft.DocAsCode.Build.RestApi.dll Syntax [Serializable] public class ResponseObject Properties | Improve this Doc View Source Description Declaration [YamlMember(Alias = \"description\")] [JsonProperty(\"description\")] public string Description { get; set; } Property Value Type Description String | Improve this Doc View Source Examples Key is the mime type Declaration [YamlMember(Alias = \"examples\")] [JsonProperty(\"examples\")] public Dictionary<string, object> Examples { get; set; } Property Value Type Description Dictionary < String , Object > | Improve this Doc View Source Metadata Declaration [JsonExtensionData] public Dictionary<string, object> Metadata { get; set; } Property Value Type Description Dictionary < String , Object > | Improve this Doc View Source Summary Declaration [YamlMember(Alias = \"summary\")] [JsonProperty(\"summary\")] public string Summary { get; set; } Property Value Type Description String (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureBlockquoteBlockToken.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureBlockquoteBlockToken.html",
    "title": "Class AzureBlockquoteBlockToken | DocFX website",
    "keywords": "Class AzureBlockquoteBlockToken Inheritance Object AzureBlockquoteBlockToken Namespace : Microsoft.DocAsCode.AzureMarkdownRewriters Assembly : Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureBlockquoteBlockToken : MarkdownBlockquoteBlockToken Constructors | Improve this Doc View Source AzureBlockquoteBlockToken(IMarkdownRule, IMarkdownContext, ImmutableArray<IMarkdownToken>, SourceInfo) Declaration public AzureBlockquoteBlockToken(IMarkdownRule rule, IMarkdownContext context, ImmutableArray<IMarkdownToken> tokens, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context ImmutableArray < IMarkdownToken > tokens SourceInfo sourceInfo (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.AssemblyUsageAttribute.html": {
    "href": "api/Microsoft.DocAsCode.AssemblyUsageAttribute.html",
    "title": "Class AssemblyUsageAttribute | DocFX website",
    "keywords": "Class AssemblyUsageAttribute Inheritance Object Attribute CustomAssemblyTextAttribute AssemblyUsageAttribute Implements _Attribute Inherited Members CustomAssemblyTextAttribute.Value Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.Equals(Object) Attribute.GetHashCode() Attribute.Match(Object) Attribute.IsDefaultAttribute() Attribute._Attribute.GetTypeInfoCount(UInt32) Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr) Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr) Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr) Attribute.TypeId Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode Assembly : docfx.dll Syntax public class AssemblyUsageAttribute : CustomAssemblyTextAttribute, _Attribute Constructors | Improve this Doc View Source AssemblyUsageAttribute(String[]) Declaration public AssemblyUsageAttribute(params string[] lines) Parameters Type Name Description String [] lines Implements System.Runtime.InteropServices._Attribute (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.SubCommands.MetadataMerger.html": {
    "href": "api/Microsoft.DocAsCode.SubCommands.MetadataMerger.html",
    "title": "Class MetadataMerger | DocFX website",
    "keywords": "Class MetadataMerger Inheritance Object MetadataMerger Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.SubCommands Assembly : docfx.dll Syntax public class MetadataMerger Fields | Improve this Doc View Source PhaseName Declaration public const string PhaseName = \"Merge Metadata\" Field Value Type Description String Methods | Improve this Doc View Source Merge(MetadataMergeParameters) Declaration public void Merge(MetadataMergeParameters parameters) Parameters Type Name Description MetadataMergeParameters parameters (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.SubCommands.MetadataMergeParameters.html": {
    "href": "api/Microsoft.DocAsCode.SubCommands.MetadataMergeParameters.html",
    "title": "Class MetadataMergeParameters | DocFX website",
    "keywords": "Class MetadataMergeParameters Inheritance Object MetadataMergeParameters Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.SubCommands Assembly : docfx.dll Syntax public class MetadataMergeParameters Properties | Improve this Doc View Source FileMetadata Declaration public FileMetadata FileMetadata { get; set; } Property Value Type Description FileMetadata | Improve this Doc View Source Files Declaration public FileCollection Files { get; set; } Property Value Type Description FileCollection | Improve this Doc View Source Metadata Declaration public ImmutableDictionary<string, object> Metadata { get; set; } Property Value Type Description ImmutableDictionary < String , Object > | Improve this Doc View Source OutputBaseDir Declaration public string OutputBaseDir { get; set; } Property Value Type Description String | Improve this Doc View Source TocMetadata Declaration public ImmutableList<string> TocMetadata { get; set; } Property Value Type Description ImmutableList < String > (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.SubCommands.CommandOptionAttribute.html": {
    "href": "api/Microsoft.DocAsCode.SubCommands.CommandOptionAttribute.html",
    "title": "Class CommandOptionAttribute | DocFX website",
    "keywords": "Class CommandOptionAttribute Inheritance Object Attribute ExportAttribute CommandOptionAttribute Implements _Attribute Inherited Members ExportAttribute.ContractName ExportAttribute.ContractType Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.Equals(Object) Attribute.GetHashCode() Attribute.Match(Object) Attribute.IsDefaultAttribute() Attribute._Attribute.GetTypeInfoCount(UInt32) Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr) Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr) Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr) Attribute.TypeId Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.SubCommands Assembly : docfx.dll Syntax [MetadataAttribute] [AttributeUsage(AttributeTargets.Class, AllowMultiple = true)] public class CommandOptionAttribute : ExportAttribute, _Attribute Constructors | Improve this Doc View Source CommandOptionAttribute(String, String) Declaration public CommandOptionAttribute(string name, string helpText) Parameters Type Name Description String name String helpText Properties | Improve this Doc View Source HelpText Declaration public string HelpText { get; } Property Value Type Description String | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description String Implements System.Runtime.InteropServices._Attribute (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.PdfJsonConfig.html": {
    "href": "api/Microsoft.DocAsCode.PdfJsonConfig.html",
    "title": "Class PdfJsonConfig | DocFX website",
    "keywords": "Class PdfJsonConfig Inheritance Object BuildJsonConfig PdfJsonConfig Inherited Members BuildJsonConfig.BaseDirectory BuildJsonConfig.OutputFolder BuildJsonConfig.Content BuildJsonConfig.Resource BuildJsonConfig.Overwrite BuildJsonConfig.Pairing BuildJsonConfig.XrefTags BuildJsonConfig.XRefMaps BuildJsonConfig.XRefServiceUrls BuildJsonConfig.Destination BuildJsonConfig.GlobalMetadata BuildJsonConfig.GlobalMetadataFilePaths BuildJsonConfig.FileMetadata BuildJsonConfig.TagParameters BuildJsonConfig.FileMetadataFilePaths BuildJsonConfig.Templates BuildJsonConfig.Themes BuildJsonConfig.PostProcessors BuildJsonConfig.Serve BuildJsonConfig.Force BuildJsonConfig.EnableDebugMode BuildJsonConfig.OutputFolderForDebugFiles BuildJsonConfig.ForcePostProcess BuildJsonConfig.Port BuildJsonConfig.ExportRawModel BuildJsonConfig.RawModelOutputFolder BuildJsonConfig.ExportViewModel BuildJsonConfig.ViewModelOutputFolder BuildJsonConfig.DryRun BuildJsonConfig.MaxParallelism BuildJsonConfig.MarkdownEngineName BuildJsonConfig.MarkdownEngineProperties BuildJsonConfig.NoLangKeyword BuildJsonConfig.IntermediateFolder BuildJsonConfig.ChangesFile BuildJsonConfig.CustomLinkResolver BuildJsonConfig.Versions BuildJsonConfig.Groups BuildJsonConfig.LruSize BuildJsonConfig.KeepFileLink BuildJsonConfig.CleanupCacheHistory BuildJsonConfig.SitemapOptions BuildJsonConfig.FALName BuildJsonConfig.DisableGitFeatures BuildJsonConfig.SchemaLicense Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode Assembly : docfx.dll Syntax [Serializable] public class PdfJsonConfig : BuildJsonConfig Properties | Improve this Doc View Source BasePath Declaration [JsonProperty(\"base\")] public string BasePath { get; set; } Property Value Type Description String | Improve this Doc View Source CssFilePath Declaration [JsonProperty(\"css\")] public string CssFilePath { get; set; } Property Value Type Description String | Improve this Doc View Source ExcludedTocs Declaration [JsonProperty(\"excludedTocs\")] public List<string> ExcludedTocs { get; set; } Property Value Type Description List < String > | Improve this Doc View Source GeneratesAppendices Declaration [JsonProperty(\"generatesAppendices\")] public bool GeneratesAppendices { get; set; } Property Value Type Description Boolean | Improve this Doc View Source GeneratesExternalLink Declaration [JsonProperty(\"generatesExternalLink\")] public bool GeneratesExternalLink { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Host Declaration [JsonProperty(\"host\")] public string Host { get; set; } Property Value Type Description String | Improve this Doc View Source KeepRawFiles Declaration [JsonProperty(\"keepRawFiles\")] public bool KeepRawFiles { get; set; } Property Value Type Description Boolean | Improve this Doc View Source LoadErrorHandling Specify how to handle pages that fail to load: abort, ignore or skip(default abort) Declaration [JsonProperty(\"errorHandling\")] public string LoadErrorHandling { get; set; } Property Value Type Description String | Improve this Doc View Source Locale Declaration [JsonProperty(\"locale\")] public string Locale { get; set; } Property Value Type Description String | Improve this Doc View Source Name Declaration [JsonProperty(\"name\")] public string Name { get; set; } Property Value Type Description String | Improve this Doc View Source RawOutputFolder Declaration [JsonProperty(\"rawOutputFolder\")] public string RawOutputFolder { get; set; } Property Value Type Description String | Improve this Doc View Source Wkhtmltopdf Specify options specific to the wkhtmltopdf tooling used by the pdf command. Declaration [JsonProperty(\"wkhtmltopdf\")] public WkhtmltopdfJsonConfig Wkhtmltopdf { get; set; } Property Value Type Description WkhtmltopdfJsonConfig (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.OptionUsageAttribute.html": {
    "href": "api/Microsoft.DocAsCode.OptionUsageAttribute.html",
    "title": "Class OptionUsageAttribute | DocFX website",
    "keywords": "Class OptionUsageAttribute Inheritance Object Attribute OptionUsageAttribute Implements _Attribute Inherited Members Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.Equals(Object) Attribute.GetHashCode() Attribute.Match(Object) Attribute.IsDefaultAttribute() Attribute._Attribute.GetTypeInfoCount(UInt32) Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr) Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr) Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr) Attribute.TypeId Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode Assembly : docfx.dll Syntax [AttributeUsage(AttributeTargets.Class, AllowMultiple = true, Inherited = false)] public class OptionUsageAttribute : Attribute, _Attribute Constructors | Improve this Doc View Source OptionUsageAttribute(String) Declaration public OptionUsageAttribute(string name) Parameters Type Name Description String name Properties | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description String Implements System.Runtime.InteropServices._Attribute (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.MetadataJsonItemConfig.html": {
    "href": "api/Microsoft.DocAsCode.MetadataJsonItemConfig.html",
    "title": "Class MetadataJsonItemConfig | DocFX website",
    "keywords": "Class MetadataJsonItemConfig Inheritance Object MetadataJsonItemConfig Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode Assembly : docfx.dll Syntax public class MetadataJsonItemConfig Properties | Improve this Doc View Source CodeSourceBasePath Declaration [JsonProperty(\"codeSourceBasePath\")] public string CodeSourceBasePath { get; set; } Property Value Type Description String | Improve this Doc View Source Destination Declaration [JsonProperty(\"dest\")] public string Destination { get; set; } Property Value Type Description String | Improve this Doc View Source DisableDefaultFilter Declaration [JsonProperty(\"disableDefaultFilter\")] public bool DisableDefaultFilter { get; set; } Property Value Type Description Boolean | Improve this Doc View Source DisableGitFeatures Declaration [JsonProperty(\"disableGitFeatures\")] public bool DisableGitFeatures { get; set; } Property Value Type Description Boolean | Improve this Doc View Source FilterConfigFile Declaration [JsonProperty(\"filter\")] public string FilterConfigFile { get; set; } Property Value Type Description String | Improve this Doc View Source Force Declaration [JsonProperty(\"force\")] public bool? Force { get; set; } Property Value Type Description Nullable < Boolean > | Improve this Doc View Source GlobalNamespaceId Declaration [JsonProperty(\"globalNamespaceId\")] public string GlobalNamespaceId { get; set; } Property Value Type Description String | Improve this Doc View Source MSBuildProperties An optional set of MSBuild properties used when interpreting project files. These are the same properties that are passed to msbuild via the /property:<n>=<v> command line argument. Declaration [JsonProperty(\"properties\")] public Dictionary<string, string> MSBuildProperties { get; set; } Property Value Type Description Dictionary < String , String > | Improve this Doc View Source Raw Declaration [JsonProperty(\"raw\")] public bool? Raw { get; set; } Property Value Type Description Nullable < Boolean > | Improve this Doc View Source References Declaration [JsonProperty(\"references\")] public FileMapping References { get; set; } Property Value Type Description FileMapping | Improve this Doc View Source ShouldSkipMarkup Declaration [JsonProperty(\"shouldSkipMarkup\")] public bool? ShouldSkipMarkup { get; set; } Property Value Type Description Nullable < Boolean > | Improve this Doc View Source Source Declaration [JsonProperty(\"src\")] public FileMapping Source { get; set; } Property Value Type Description FileMapping | Improve this Doc View Source UseCompatibilityFileName Declaration [JsonProperty(\"useCompatibilityFileName\")] public bool? UseCompatibilityFileName { get; set; } Property Value Type Description Nullable < Boolean > (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.MetadataJsonConfig.html": {
    "href": "api/Microsoft.DocAsCode.MetadataJsonConfig.html",
    "title": "Class MetadataJsonConfig | DocFX website",
    "keywords": "Class MetadataJsonConfig Inheritance Object List < MetadataJsonItemConfig > MetadataJsonConfig Implements IList < MetadataJsonItemConfig > ICollection < MetadataJsonItemConfig > IList ICollection IReadOnlyList < MetadataJsonItemConfig > IReadOnlyCollection < MetadataJsonItemConfig > IEnumerable < MetadataJsonItemConfig > IEnumerable Inherited Members System.Collections.Generic.List<Microsoft.DocAsCode.MetadataJsonItemConfig>.System.Collections.IList.get_Item(System.Int32) System.Collections.Generic.List<Microsoft.DocAsCode.MetadataJsonItemConfig>.System.Collections.IList.set_Item(System.Int32, System.Object) List<MetadataJsonItemConfig>.Add(MetadataJsonItemConfig) List<MetadataJsonItemConfig>.IList.Add(Object) List<MetadataJsonItemConfig>.AddRange(IEnumerable<MetadataJsonItemConfig>) List<MetadataJsonItemConfig>.AsReadOnly() List<MetadataJsonItemConfig>.BinarySearch(Int32, Int32, MetadataJsonItemConfig, IComparer<MetadataJsonItemConfig>) List<MetadataJsonItemConfig>.BinarySearch(MetadataJsonItemConfig) List<MetadataJsonItemConfig>.BinarySearch(MetadataJsonItemConfig, IComparer<MetadataJsonItemConfig>) List<MetadataJsonItemConfig>.Clear() List<MetadataJsonItemConfig>.Contains(MetadataJsonItemConfig) List<MetadataJsonItemConfig>.IList.Contains(Object) List<MetadataJsonItemConfig>.ConvertAll<TOutput>(Converter<MetadataJsonItemConfig, TOutput>) List<MetadataJsonItemConfig>.CopyTo(MetadataJsonItemConfig[]) List<MetadataJsonItemConfig>.ICollection.CopyTo(Array, Int32) List<MetadataJsonItemConfig>.CopyTo(Int32, MetadataJsonItemConfig[], Int32, Int32) List<MetadataJsonItemConfig>.CopyTo(MetadataJsonItemConfig[], Int32) List<MetadataJsonItemConfig>.Exists(Predicate<MetadataJsonItemConfig>) List<MetadataJsonItemConfig>.Find(Predicate<MetadataJsonItemConfig>) List<MetadataJsonItemConfig>.FindAll(Predicate<MetadataJsonItemConfig>) List<MetadataJsonItemConfig>.FindIndex(Predicate<MetadataJsonItemConfig>) List<MetadataJsonItemConfig>.FindIndex(Int32, Predicate<MetadataJsonItemConfig>) List<MetadataJsonItemConfig>.FindIndex(Int32, Int32, Predicate<MetadataJsonItemConfig>) List<MetadataJsonItemConfig>.FindLast(Predicate<MetadataJsonItemConfig>) List<MetadataJsonItemConfig>.FindLastIndex(Predicate<MetadataJsonItemConfig>) List<MetadataJsonItemConfig>.FindLastIndex(Int32, Predicate<MetadataJsonItemConfig>) List<MetadataJsonItemConfig>.FindLastIndex(Int32, Int32, Predicate<MetadataJsonItemConfig>) List<MetadataJsonItemConfig>.ForEach(Action<MetadataJsonItemConfig>) List<MetadataJsonItemConfig>.GetEnumerator() List<MetadataJsonItemConfig>.IEnumerable<MetadataJsonItemConfig>.GetEnumerator() List<MetadataJsonItemConfig>.IEnumerable.GetEnumerator() List<MetadataJsonItemConfig>.GetRange(Int32, Int32) List<MetadataJsonItemConfig>.IndexOf(MetadataJsonItemConfig) List<MetadataJsonItemConfig>.IList.IndexOf(Object) List<MetadataJsonItemConfig>.IndexOf(MetadataJsonItemConfig, Int32) List<MetadataJsonItemConfig>.IndexOf(MetadataJsonItemConfig, Int32, Int32) List<MetadataJsonItemConfig>.Insert(Int32, MetadataJsonItemConfig) List<MetadataJsonItemConfig>.IList.Insert(Int32, Object) List<MetadataJsonItemConfig>.InsertRange(Int32, IEnumerable<MetadataJsonItemConfig>) List<MetadataJsonItemConfig>.LastIndexOf(MetadataJsonItemConfig) List<MetadataJsonItemConfig>.LastIndexOf(MetadataJsonItemConfig, Int32) List<MetadataJsonItemConfig>.LastIndexOf(MetadataJsonItemConfig, Int32, Int32) List<MetadataJsonItemConfig>.Remove(MetadataJsonItemConfig) List<MetadataJsonItemConfig>.IList.Remove(Object) List<MetadataJsonItemConfig>.RemoveAll(Predicate<MetadataJsonItemConfig>) List<MetadataJsonItemConfig>.RemoveAt(Int32) List<MetadataJsonItemConfig>.RemoveRange(Int32, Int32) List<MetadataJsonItemConfig>.Reverse() List<MetadataJsonItemConfig>.Reverse(Int32, Int32) List<MetadataJsonItemConfig>.Sort() List<MetadataJsonItemConfig>.Sort(IComparer<MetadataJsonItemConfig>) List<MetadataJsonItemConfig>.Sort(Int32, Int32, IComparer<MetadataJsonItemConfig>) List<MetadataJsonItemConfig>.Sort(Comparison<MetadataJsonItemConfig>) List<MetadataJsonItemConfig>.ToArray() List<MetadataJsonItemConfig>.TrimExcess() List<MetadataJsonItemConfig>.TrueForAll(Predicate<MetadataJsonItemConfig>) List<MetadataJsonItemConfig>.Capacity List<MetadataJsonItemConfig>.Count List<MetadataJsonItemConfig>.IList.IsFixedSize List<MetadataJsonItemConfig>.ICollection<MetadataJsonItemConfig>.IsReadOnly List<MetadataJsonItemConfig>.IList.IsReadOnly List<MetadataJsonItemConfig>.ICollection.IsSynchronized List<MetadataJsonItemConfig>.ICollection.SyncRoot List<MetadataJsonItemConfig>.Item[Int32] List<MetadataJsonItemConfig>.IList.Item[Int32] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode Assembly : docfx.dll Syntax public class MetadataJsonConfig : List<MetadataJsonItemConfig>, IList<MetadataJsonItemConfig>, ICollection<MetadataJsonItemConfig>, IList, ICollection, IReadOnlyList<MetadataJsonItemConfig>, IReadOnlyCollection<MetadataJsonItemConfig>, IEnumerable<MetadataJsonItemConfig>, IEnumerable Constructors | Improve this Doc View Source MetadataJsonConfig(MetadataJsonItemConfig[]) Declaration public MetadataJsonConfig(params MetadataJsonItemConfig[] configs) Parameters Type Name Description MetadataJsonItemConfig [] configs | Improve this Doc View Source MetadataJsonConfig(IEnumerable<MetadataJsonItemConfig>) Declaration public MetadataJsonConfig(IEnumerable<MetadataJsonItemConfig> configs) Parameters Type Name Description IEnumerable < MetadataJsonItemConfig > configs Implements System.Collections.Generic.IList<T> System.Collections.Generic.ICollection<T> System.Collections.IList System.Collections.ICollection System.Collections.Generic.IReadOnlyList<T> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.html",
    "title": "Namespace Microsoft.DocAsCode.Metadata.ManagedReference | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.Metadata.ManagedReference Classes AbstractCompilation AbstractDocument AbstractProject AbstractProjectLoader AllMemberFilterVisitor ApplicationLevelCache AssemblyFileInputParameters AttributeFilterData AttributeFilterInfo BuildInfo BuildMembers BuildToc CacheBase CachedFilterVisitor CompositeYamlModelGenerator ConfigFilterRule ConfigFilterRuleExcludeItem ConfigFilterRuleIncludeItem ConfigFilterRuleItem ConfigFilterRuleItemUnion ConfigFilterVisitor CopyInherited Copies doc comments to items marked with 'inheritdoc' from interfaces and base classes. CRefTarget CSharpNameVisitorCreator CSReferenceItemVisitor CSYamlModelGenerator DefaultFilterVisitor DelegatingFilterVisitor EnvironmentScope ExtendedSymbolKindHelper ExtractMetadataInputModel ExtractMetadataOptions ExtractMetadataWorker FilterVisitorExtensions IncrementalCheck LayoutCheckAndCleanup LinkItem MergeCommentsHelper MetadataItem MetadataModel MSBuildEnvironmentScope NameVisitor NameVisitorCreator NormalizeSyntax ProjectFileInputParameters ProjectLevelCache ReferenceItem ReferenceItemVisitor ResolverContext ResolveReference RoslynCompilation RoslynDocument RoslynIntermediateMetadataExtractor RoslynProject RoslynProjectLoader RoslynSourceFileBuildController SetDerivedClass SetParent SimpleYamlModelGenerator SourceFileInputParameters SymbolFilterData SymbolVisitorAdapter SyntaxDetail TripleSlashCommentModel TripleSlashCommentParserContext TripleSlashCommentTransformer VBNameVisitorCreator VBReferenceItemVisitor VBYamlModelGenerator VisitorHelper YamlMetadataResolver YamlModelGenerator YamlViewModelExtensions Interfaces IBuildController IExtractor IFilterVisitor IInputParameters IProjectLoader IResolverPipeline IRoslynBuildController ITripleSlashCommentParserContext Enums ExtendedSymbolKind LayoutItem Defines the layout for an API page NameOptions (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.YamlViewModelExtensions.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.YamlViewModelExtensions.html",
    "title": "Class YamlViewModelExtensions | DocFX website",
    "keywords": "Class YamlViewModelExtensions Inheritance Object YamlViewModelExtensions Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public static class YamlViewModelExtensions Methods | Improve this Doc View Source AllowMultipleItems(MemberType) Allow multiple items in one yml file Declaration public static bool AllowMultipleItems(this MemberType type) Parameters Type Name Description MemberType type Returns Type Description Boolean | Improve this Doc View Source GetLanguageProperty<TValue>(SortedList<SyntaxLanguage, TValue>, SyntaxLanguage, TValue) Declaration public static TValue GetLanguageProperty<TValue>(this SortedList<SyntaxLanguage, TValue> dict, SyntaxLanguage language, TValue defaultValue = null) where TValue : class Parameters Type Name Description SortedList < SyntaxLanguage , TValue> dict SyntaxLanguage language TValue defaultValue Returns Type Description TValue Type Parameters Name Description TValue | Improve this Doc View Source IsPageLevel(MemberType) Declaration public static bool IsPageLevel(this MemberType type) Parameters Type Name Description MemberType type Returns Type Description Boolean | Improve this Doc View Source ShrinkToSimpleToc(MetadataItem) Declaration public static MetadataItem ShrinkToSimpleToc(this MetadataItem item) Parameters Type Name Description MetadataItem item Returns Type Description MetadataItem | Improve this Doc View Source ShrinkToSimpleTocWithNamespaceNotEmpty(MetadataItem) Only when Namespace is not empty, return it Declaration public static MetadataItem ShrinkToSimpleTocWithNamespaceNotEmpty(this MetadataItem item) Parameters Type Name Description MetadataItem item Returns Type Description MetadataItem | Improve this Doc View Source ToItemViewModel(MetadataItem) Declaration public static ItemViewModel ToItemViewModel(this MetadataItem model) Parameters Type Name Description MetadataItem model Returns Type Description ItemViewModel | Improve this Doc View Source ToPageViewModel(MetadataItem) Declaration public static PageViewModel ToPageViewModel(this MetadataItem model) Parameters Type Name Description MetadataItem model Returns Type Description PageViewModel | Improve this Doc View Source ToSpecViewModel(LinkItem) Declaration public static SpecViewModel ToSpecViewModel(this LinkItem model) Parameters Type Name Description LinkItem model Returns Type Description SpecViewModel | Improve this Doc View Source ToSyntaxDetailViewModel(SyntaxDetail) Declaration public static SyntaxDetailViewModel ToSyntaxDetailViewModel(this SyntaxDetail model) Parameters Type Name Description SyntaxDetail model Returns Type Description SyntaxDetailViewModel | Improve this Doc View Source ToTocItemViewModel(MetadataItem) Declaration public static TocItemViewModel ToTocItemViewModel(this MetadataItem item) Parameters Type Name Description MetadataItem item Returns Type Description TocItemViewModel | Improve this Doc View Source ToTocViewModel(MetadataItem) Declaration public static TocViewModel ToTocViewModel(this MetadataItem item) Parameters Type Name Description MetadataItem item Returns Type Description TocViewModel (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.YamlModelGenerator.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.YamlModelGenerator.html",
    "title": "Class YamlModelGenerator | DocFX website",
    "keywords": "Class YamlModelGenerator Inheritance Object YamlModelGenerator CompositeYamlModelGenerator SimpleYamlModelGenerator Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.Roslyn.dll Syntax public abstract class YamlModelGenerator Methods | Improve this Doc View Source DefaultVisit(ISymbol, MetadataItem, SymbolVisitorAdapter) Declaration public virtual void DefaultVisit(ISymbol symbol, MetadataItem item, SymbolVisitorAdapter adapter) Parameters Type Name Description ISymbol symbol MetadataItem item SymbolVisitorAdapter adapter | Improve this Doc View Source GenerateEvent(IEventSymbol, MetadataItem, SymbolVisitorAdapter) Declaration public virtual void GenerateEvent(IEventSymbol symbol, MetadataItem item, SymbolVisitorAdapter adapter) Parameters Type Name Description IEventSymbol symbol MetadataItem item SymbolVisitorAdapter adapter | Improve this Doc View Source GenerateField(IFieldSymbol, MetadataItem, SymbolVisitorAdapter) Declaration public virtual void GenerateField(IFieldSymbol symbol, MetadataItem item, SymbolVisitorAdapter adapter) Parameters Type Name Description IFieldSymbol symbol MetadataItem item SymbolVisitorAdapter adapter | Improve this Doc View Source GenerateMethod(IMethodSymbol, MetadataItem, SymbolVisitorAdapter) Declaration public virtual void GenerateMethod(IMethodSymbol symbol, MetadataItem item, SymbolVisitorAdapter adapter) Parameters Type Name Description IMethodSymbol symbol MetadataItem item SymbolVisitorAdapter adapter | Improve this Doc View Source GenerateNamedType(INamedTypeSymbol, MetadataItem, SymbolVisitorAdapter) Declaration public virtual void GenerateNamedType(INamedTypeSymbol symbol, MetadataItem item, SymbolVisitorAdapter adapter) Parameters Type Name Description INamedTypeSymbol symbol MetadataItem item SymbolVisitorAdapter adapter | Improve this Doc View Source GenerateProperty(IPropertySymbol, MetadataItem, SymbolVisitorAdapter) Declaration public virtual void GenerateProperty(IPropertySymbol symbol, MetadataItem item, SymbolVisitorAdapter adapter) Parameters Type Name Description IPropertySymbol symbol MetadataItem item SymbolVisitorAdapter adapter (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.YamlMetadataResolver.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.YamlMetadataResolver.html",
    "title": "Class YamlMetadataResolver | DocFX website",
    "keywords": "Class YamlMetadataResolver Inheritance Object YamlMetadataResolver Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public static class YamlMetadataResolver Methods | Improve this Doc View Source ExecutePipeline(MetadataModel, ResolverContext) Declaration public static void ExecutePipeline(MetadataModel yaml, ResolverContext context) Parameters Type Name Description MetadataModel yaml ResolverContext context | Improve this Doc View Source ResolveMetadata(Dictionary<String, MetadataItem>, Dictionary<String, ReferenceItem>, Boolean) TODO: input Namespace list instead; TODO: Save to ...yml.map Declaration public static MetadataModel ResolveMetadata(Dictionary<string, MetadataItem> allMembers, Dictionary<string, ReferenceItem> allReferences, bool preserveRawInlineComments) Parameters Type Name Description Dictionary < String , MetadataItem > allMembers Dictionary < String , ReferenceItem > allReferences Boolean preserveRawInlineComments Returns Type Description MetadataModel (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.VisitorHelper.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.VisitorHelper.html",
    "title": "Class VisitorHelper | DocFX website",
    "keywords": "Class VisitorHelper Inheritance Object VisitorHelper Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.Roslyn.dll Syntax public static class VisitorHelper Properties | Improve this Doc View Source GlobalNamespaceId Declaration public static string GlobalNamespaceId { get; set; } Property Value Type Description String Methods | Improve this Doc View Source FeedComments(MetadataItem, ITripleSlashCommentParserContext) Declaration public static void FeedComments(MetadataItem item, ITripleSlashCommentParserContext context) Parameters Type Name Description MetadataItem item ITripleSlashCommentParserContext context | Improve this Doc View Source GetCommentId(ISymbol) Declaration public static string GetCommentId(ISymbol symbol) Parameters Type Name Description ISymbol symbol Returns Type Description String | Improve this Doc View Source GetId(ISymbol) Declaration public static string GetId(ISymbol symbol) Parameters Type Name Description ISymbol symbol Returns Type Description String | Improve this Doc View Source GetMemberTypeFromTypeKind(TypeKind) Declaration public static MemberType GetMemberTypeFromTypeKind(TypeKind typeKind) Parameters Type Name Description TypeKind typeKind Returns Type Description MemberType | Improve this Doc View Source GetOverloadId(ISymbol) Declaration public static string GetOverloadId(ISymbol symbol) Parameters Type Name Description ISymbol symbol Returns Type Description String | Improve this Doc View Source GetOverloadIdBody(ISymbol) Declaration public static string GetOverloadIdBody(ISymbol symbol) Parameters Type Name Description ISymbol symbol Returns Type Description String | Improve this Doc View Source GetParameterDescription(ISymbol, MetadataItem, String, Boolean, ITripleSlashCommentParserContext) Declaration public static ApiParameter GetParameterDescription(ISymbol symbol, MetadataItem item, string id, bool isReturn, ITripleSlashCommentParserContext context) Parameters Type Name Description ISymbol symbol MetadataItem item String id Boolean isReturn ITripleSlashCommentParserContext context Returns Type Description ApiParameter | Improve this Doc View Source GetSourceDetail(ISymbol) Declaration public static SourceDetail GetSourceDetail(ISymbol symbol) Parameters Type Name Description ISymbol symbol Returns Type Description SourceDetail | Improve this Doc View Source GetTypeParameterDescription(ITypeParameterSymbol, MetadataItem, ITripleSlashCommentParserContext) Declaration public static ApiParameter GetTypeParameterDescription(ITypeParameterSymbol symbol, MetadataItem item, ITripleSlashCommentParserContext context) Parameters Type Name Description ITypeParameterSymbol symbol MetadataItem item ITripleSlashCommentParserContext context Returns Type Description ApiParameter (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.VBYamlModelGenerator.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.VBYamlModelGenerator.html",
    "title": "Class VBYamlModelGenerator | DocFX website",
    "keywords": "Class VBYamlModelGenerator Inheritance Object YamlModelGenerator SimpleYamlModelGenerator VBYamlModelGenerator Inherited Members SimpleYamlModelGenerator.ShortFormat SimpleYamlModelGenerator.QualifiedFormat SimpleYamlModelGenerator.Language Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.Roslyn.dll Syntax public class VBYamlModelGenerator : SimpleYamlModelGenerator Constructors | Improve this Doc View Source VBYamlModelGenerator() Declaration public VBYamlModelGenerator() Methods | Improve this Doc View Source DefaultVisit(ISymbol, MetadataItem, SymbolVisitorAdapter) Declaration public override void DefaultVisit(ISymbol symbol, MetadataItem item, SymbolVisitorAdapter adapter) Parameters Type Name Description ISymbol symbol MetadataItem item SymbolVisitorAdapter adapter Overrides YamlModelGenerator.DefaultVisit(ISymbol, MetadataItem, SymbolVisitorAdapter) | Improve this Doc View Source GenerateEvent(IEventSymbol, MetadataItem, SymbolVisitorAdapter) Declaration public override void GenerateEvent(IEventSymbol symbol, MetadataItem item, SymbolVisitorAdapter adapter) Parameters Type Name Description IEventSymbol symbol MetadataItem item SymbolVisitorAdapter adapter Overrides YamlModelGenerator.GenerateEvent(IEventSymbol, MetadataItem, SymbolVisitorAdapter) | Improve this Doc View Source GenerateField(IFieldSymbol, MetadataItem, SymbolVisitorAdapter) Declaration public override void GenerateField(IFieldSymbol symbol, MetadataItem item, SymbolVisitorAdapter adapter) Parameters Type Name Description IFieldSymbol symbol MetadataItem item SymbolVisitorAdapter adapter Overrides YamlModelGenerator.GenerateField(IFieldSymbol, MetadataItem, SymbolVisitorAdapter) | Improve this Doc View Source GenerateMethod(IMethodSymbol, MetadataItem, SymbolVisitorAdapter) Declaration public override void GenerateMethod(IMethodSymbol symbol, MetadataItem item, SymbolVisitorAdapter adapter) Parameters Type Name Description IMethodSymbol symbol MetadataItem item SymbolVisitorAdapter adapter Overrides YamlModelGenerator.GenerateMethod(IMethodSymbol, MetadataItem, SymbolVisitorAdapter) | Improve this Doc View Source GenerateNamedType(INamedTypeSymbol, MetadataItem, SymbolVisitorAdapter) Declaration public override void GenerateNamedType(INamedTypeSymbol symbol, MetadataItem item, SymbolVisitorAdapter adapter) Parameters Type Name Description INamedTypeSymbol symbol MetadataItem item SymbolVisitorAdapter adapter Overrides YamlModelGenerator.GenerateNamedType(INamedTypeSymbol, MetadataItem, SymbolVisitorAdapter) | Improve this Doc View Source GenerateProperty(IPropertySymbol, MetadataItem, SymbolVisitorAdapter) Declaration public override void GenerateProperty(IPropertySymbol symbol, MetadataItem item, SymbolVisitorAdapter adapter) Parameters Type Name Description IPropertySymbol symbol MetadataItem item SymbolVisitorAdapter adapter Overrides YamlModelGenerator.GenerateProperty(IPropertySymbol, MetadataItem, SymbolVisitorAdapter) | Improve this Doc View Source GenerateReference(ISymbol, ReferenceItem, SymbolVisitorAdapter, Boolean) Declaration protected override void GenerateReference(ISymbol symbol, ReferenceItem reference, SymbolVisitorAdapter adapter, bool asOverload) Parameters Type Name Description ISymbol symbol ReferenceItem reference SymbolVisitorAdapter adapter Boolean asOverload Overrides SimpleYamlModelGenerator.GenerateReference(ISymbol, ReferenceItem, SymbolVisitorAdapter, Boolean) | Improve this Doc View Source GetSyntaxContent(MemberType, ISymbol, SymbolVisitorAdapter) Declaration protected override string GetSyntaxContent(MemberType typeKind, ISymbol symbol, SymbolVisitorAdapter adapter) Parameters Type Name Description MemberType typeKind ISymbol symbol SymbolVisitorAdapter adapter Returns Type Description String Overrides SimpleYamlModelGenerator.GetSyntaxContent(MemberType, ISymbol, SymbolVisitorAdapter) (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.VBReferenceItemVisitor.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.VBReferenceItemVisitor.html",
    "title": "Class VBReferenceItemVisitor | DocFX website",
    "keywords": "Class VBReferenceItemVisitor Inheritance Object SymbolVisitor ReferenceItemVisitor VBReferenceItemVisitor Inherited Members ReferenceItemVisitor.ShortFormat ReferenceItemVisitor.QualifiedFormat ReferenceItemVisitor.ShortFormatWithoutGenericeParameter ReferenceItemVisitor.QualifiedFormatWithoutGenericeParameter ReferenceItemVisitor.ReferenceItem ReferenceItemVisitor.VisitNamedType(INamedTypeSymbol) SymbolVisitor.Visit(ISymbol) SymbolVisitor.DefaultVisit(ISymbol) SymbolVisitor.VisitAlias(IAliasSymbol) SymbolVisitor.VisitAssembly(IAssemblySymbol) SymbolVisitor.VisitDiscard(IDiscardSymbol) SymbolVisitor.VisitDynamicType(IDynamicTypeSymbol) SymbolVisitor.VisitLabel(ILabelSymbol) SymbolVisitor.VisitLocal(ILocalSymbol) SymbolVisitor.VisitModule(IModuleSymbol) SymbolVisitor.VisitParameter(IParameterSymbol) SymbolVisitor.VisitRangeVariable(IRangeVariableSymbol) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.Roslyn.dll Syntax public class VBReferenceItemVisitor : ReferenceItemVisitor Constructors | Improve this Doc View Source VBReferenceItemVisitor(ReferenceItem, Boolean) Declaration public VBReferenceItemVisitor(ReferenceItem referenceItem, bool asOverload) Parameters Type Name Description ReferenceItem referenceItem Boolean asOverload Methods | Improve this Doc View Source AddBeginGenericParameter() Declaration protected override void AddBeginGenericParameter() Overrides ReferenceItemVisitor.AddBeginGenericParameter() | Improve this Doc View Source AddEndGenericParameter() Declaration protected override void AddEndGenericParameter() Overrides ReferenceItemVisitor.AddEndGenericParameter() | Improve this Doc View Source AddGenericParameterSeparator() Declaration protected override void AddGenericParameterSeparator() Overrides ReferenceItemVisitor.AddGenericParameterSeparator() | Improve this Doc View Source AddLinkItems(INamedTypeSymbol, Boolean) Declaration protected override void AddLinkItems(INamedTypeSymbol symbol, bool withGenericeParameter) Parameters Type Name Description INamedTypeSymbol symbol Boolean withGenericeParameter Overrides ReferenceItemVisitor.AddLinkItems(INamedTypeSymbol, Boolean) | Improve this Doc View Source VisitArrayType(IArrayTypeSymbol) Declaration public override void VisitArrayType(IArrayTypeSymbol symbol) Parameters Type Name Description IArrayTypeSymbol symbol Overrides SymbolVisitor.VisitArrayType(IArrayTypeSymbol) | Improve this Doc View Source VisitEvent(IEventSymbol) Declaration public override void VisitEvent(IEventSymbol symbol) Parameters Type Name Description IEventSymbol symbol Overrides SymbolVisitor.VisitEvent(IEventSymbol) | Improve this Doc View Source VisitField(IFieldSymbol) Declaration public override void VisitField(IFieldSymbol symbol) Parameters Type Name Description IFieldSymbol symbol Overrides SymbolVisitor.VisitField(IFieldSymbol) | Improve this Doc View Source VisitMethod(IMethodSymbol) Declaration public override void VisitMethod(IMethodSymbol symbol) Parameters Type Name Description IMethodSymbol symbol Overrides SymbolVisitor.VisitMethod(IMethodSymbol) | Improve this Doc View Source VisitNamespace(INamespaceSymbol) Declaration public override void VisitNamespace(INamespaceSymbol symbol) Parameters Type Name Description INamespaceSymbol symbol Overrides SymbolVisitor.VisitNamespace(INamespaceSymbol) | Improve this Doc View Source VisitPointerType(IPointerTypeSymbol) Declaration public override void VisitPointerType(IPointerTypeSymbol symbol) Parameters Type Name Description IPointerTypeSymbol symbol Overrides SymbolVisitor.VisitPointerType(IPointerTypeSymbol) | Improve this Doc View Source VisitProperty(IPropertySymbol) Declaration public override void VisitProperty(IPropertySymbol symbol) Parameters Type Name Description IPropertySymbol symbol Overrides SymbolVisitor.VisitProperty(IPropertySymbol) | Improve this Doc View Source VisitTypeParameter(ITypeParameterSymbol) Declaration public override void VisitTypeParameter(ITypeParameterSymbol symbol) Parameters Type Name Description ITypeParameterSymbol symbol Overrides SymbolVisitor.VisitTypeParameter(ITypeParameterSymbol) (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.VBNameVisitorCreator.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.VBNameVisitorCreator.html",
    "title": "Class VBNameVisitorCreator | DocFX website",
    "keywords": "Class VBNameVisitorCreator Inheritance Object NameVisitorCreator VBNameVisitorCreator Inherited Members NameVisitorCreator.GetName(ISymbol) NameVisitorCreator.GetCSharp(NameOptions) NameVisitorCreator.GetVB(NameOptions) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.Roslyn.dll Syntax public class VBNameVisitorCreator : NameVisitorCreator Constructors | Improve this Doc View Source VBNameVisitorCreator(NameOptions) Declaration public VBNameVisitorCreator(NameOptions options) Parameters Type Name Description NameOptions options Methods | Improve this Doc View Source Create() Declaration protected override NameVisitor Create() Returns Type Description NameVisitor Overrides NameVisitorCreator.Create() (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.TripleSlashCommentTransformer.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.TripleSlashCommentTransformer.html",
    "title": "Class TripleSlashCommentTransformer | DocFX website",
    "keywords": "Class TripleSlashCommentTransformer Inheritance Object TripleSlashCommentTransformer Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.Common.dll Syntax public static class TripleSlashCommentTransformer Methods | Improve this Doc View Source Transform(String, SyntaxLanguage) Declaration public static XDocument Transform(string xml, SyntaxLanguage language) Parameters Type Name Description String xml SyntaxLanguage language Returns Type Description XDocument (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.TripleSlashCommentParserContext.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.TripleSlashCommentParserContext.html",
    "title": "Class TripleSlashCommentParserContext | DocFX website",
    "keywords": "Class TripleSlashCommentParserContext Inheritance Object TripleSlashCommentParserContext Implements ITripleSlashCommentParserContext Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.Common.dll Syntax public class TripleSlashCommentParserContext : ITripleSlashCommentParserContext Properties | Improve this Doc View Source AddReferenceDelegate Declaration public Action<string, string> AddReferenceDelegate { get; set; } Property Value Type Description Action < String , String > | Improve this Doc View Source CodeSourceBasePath Declaration public string CodeSourceBasePath { get; set; } Property Value Type Description String | Improve this Doc View Source PreserveRawInlineComments Declaration public bool PreserveRawInlineComments { get; set; } Property Value Type Description Boolean | Improve this Doc View Source ResolveCRef Declaration public Func<string, CRefTarget> ResolveCRef { get; set; } Property Value Type Description Func < String , CRefTarget > | Improve this Doc View Source Source Declaration public SourceDetail Source { get; set; } Property Value Type Description SourceDetail Implements ITripleSlashCommentParserContext (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.TripleSlashCommentModel.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.TripleSlashCommentModel.html",
    "title": "Class TripleSlashCommentModel | DocFX website",
    "keywords": "Class TripleSlashCommentModel Inheritance Object TripleSlashCommentModel Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.Common.dll Syntax public class TripleSlashCommentModel Properties | Improve this Doc View Source Examples Declaration public List<string> Examples { get; } Property Value Type Description List < String > | Improve this Doc View Source Exceptions Declaration public List<ExceptionInfo> Exceptions { get; } Property Value Type Description List < ExceptionInfo > | Improve this Doc View Source IsInheritDoc Declaration public bool IsInheritDoc { get; } Property Value Type Description Boolean | Improve this Doc View Source Parameters Declaration public Dictionary<string, string> Parameters { get; } Property Value Type Description Dictionary < String , String > | Improve this Doc View Source Remarks Declaration public string Remarks { get; } Property Value Type Description String | Improve this Doc View Source Returns Declaration public string Returns { get; } Property Value Type Description String | Improve this Doc View Source SeeAlsos Declaration public List<LinkInfo> SeeAlsos { get; } Property Value Type Description List < LinkInfo > | Improve this Doc View Source Sees Declaration public List<LinkInfo> Sees { get; } Property Value Type Description List < LinkInfo > | Improve this Doc View Source Summary Declaration public string Summary { get; } Property Value Type Description String | Improve this Doc View Source TypeParameters Declaration public Dictionary<string, string> TypeParameters { get; } Property Value Type Description Dictionary < String , String > Methods | Improve this Doc View Source CopyInheritedData(TripleSlashCommentModel) Declaration public void CopyInheritedData(TripleSlashCommentModel src) Parameters Type Name Description TripleSlashCommentModel src | Improve this Doc View Source CreateModel(String, SyntaxLanguage, ITripleSlashCommentParserContext) Declaration public static TripleSlashCommentModel CreateModel(string xml, SyntaxLanguage language, ITripleSlashCommentParserContext context) Parameters Type Name Description String xml SyntaxLanguage language ITripleSlashCommentParserContext context Returns Type Description TripleSlashCommentModel | Improve this Doc View Source GetParameter(String) Declaration public string GetParameter(string name) Parameters Type Name Description String name Returns Type Description String | Improve this Doc View Source GetTypeParameter(String) Declaration public string GetTypeParameter(string name) Parameters Type Name Description String name Returns Type Description String (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.SyntaxDetail.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.SyntaxDetail.html",
    "title": "Class SyntaxDetail | DocFX website",
    "keywords": "Class SyntaxDetail Inheritance Object SyntaxDetail Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.Common.dll Syntax public class SyntaxDetail Properties | Improve this Doc View Source Content Declaration [YamlMember(Alias = \"content\")] [JsonProperty(\"content\")] public SortedList<SyntaxLanguage, string> Content { get; set; } Property Value Type Description SortedList < SyntaxLanguage , String > | Improve this Doc View Source Parameters Declaration [YamlMember(Alias = \"parameters\")] [JsonProperty(\"parameters\")] public List<ApiParameter> Parameters { get; set; } Property Value Type Description List < ApiParameter > | Improve this Doc View Source Return Declaration [YamlMember(Alias = \"return\")] [JsonProperty(\"return\")] public ApiParameter Return { get; set; } Property Value Type Description ApiParameter | Improve this Doc View Source TypeParameters Declaration [YamlMember(Alias = \"typeParameters\")] [JsonProperty(\"typeParameters\")] public List<ApiParameter> TypeParameters { get; set; } Property Value Type Description List < ApiParameter > Methods | Improve this Doc View Source CopyInheritedData(SyntaxDetail) Declaration public void CopyInheritedData(SyntaxDetail src) Parameters Type Name Description SyntaxDetail src Extension Methods YamlViewModelExtensions.ToSyntaxDetailViewModel(SyntaxDetail) (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.SymbolVisitorAdapter.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.SymbolVisitorAdapter.html",
    "title": "Class SymbolVisitorAdapter | DocFX website",
    "keywords": "Class SymbolVisitorAdapter Inheritance Object SymbolVisitor < MetadataItem > SymbolVisitorAdapter Inherited Members SymbolVisitor<MetadataItem>.Visit(ISymbol) SymbolVisitor<MetadataItem>.VisitAlias(IAliasSymbol) SymbolVisitor<MetadataItem>.VisitArrayType(IArrayTypeSymbol) SymbolVisitor<MetadataItem>.VisitDiscard(IDiscardSymbol) SymbolVisitor<MetadataItem>.VisitDynamicType(IDynamicTypeSymbol) SymbolVisitor<MetadataItem>.VisitLabel(ILabelSymbol) SymbolVisitor<MetadataItem>.VisitLocal(ILocalSymbol) SymbolVisitor<MetadataItem>.VisitModule(IModuleSymbol) SymbolVisitor<MetadataItem>.VisitParameter(IParameterSymbol) SymbolVisitor<MetadataItem>.VisitPointerType(IPointerTypeSymbol) SymbolVisitor<MetadataItem>.VisitRangeVariable(IRangeVariableSymbol) SymbolVisitor<MetadataItem>.VisitTypeParameter(ITypeParameterSymbol) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.Roslyn.dll Syntax public class SymbolVisitorAdapter : SymbolVisitor<MetadataItem> Constructors | Improve this Doc View Source SymbolVisitorAdapter(YamlModelGenerator, SyntaxLanguage, Compilation, ExtractMetadataOptions) Declaration public SymbolVisitorAdapter(YamlModelGenerator generator, SyntaxLanguage language, Compilation compilation, ExtractMetadataOptions options) Parameters Type Name Description YamlModelGenerator generator SyntaxLanguage language Compilation compilation ExtractMetadataOptions options Properties | Improve this Doc View Source FilterVisitor Declaration public IFilterVisitor FilterVisitor { get; } Property Value Type Description IFilterVisitor | Improve this Doc View Source Language Declaration public SyntaxLanguage Language { get; } Property Value Type Description SyntaxLanguage Methods | Improve this Doc View Source AddOverloadReference(ISymbol) Declaration public string AddOverloadReference(ISymbol symbol) Parameters Type Name Description ISymbol symbol Returns Type Description String | Improve this Doc View Source AddReference(ISymbol) Declaration public string AddReference(ISymbol symbol) Parameters Type Name Description ISymbol symbol Returns Type Description String | Improve this Doc View Source AddReference(String, String) Declaration public string AddReference(string id, string commentId) Parameters Type Name Description String id String commentId Returns Type Description String | Improve this Doc View Source AddSpecReference(ISymbol, IReadOnlyList<String>, IReadOnlyList<String>) Declaration public string AddSpecReference(ISymbol symbol, IReadOnlyList<string> typeGenericParameters = null, IReadOnlyList<string> methodGenericParameters = null) Parameters Type Name Description ISymbol symbol IReadOnlyList < String > typeGenericParameters IReadOnlyList < String > methodGenericParameters Returns Type Description String | Improve this Doc View Source DefaultVisit(ISymbol) Declaration public override MetadataItem DefaultVisit(ISymbol symbol) Parameters Type Name Description ISymbol symbol Returns Type Description MetadataItem Overrides Microsoft.CodeAnalysis.SymbolVisitor<Microsoft.DocAsCode.Metadata.ManagedReference.MetadataItem>.DefaultVisit(Microsoft.CodeAnalysis.ISymbol) | Improve this Doc View Source VisitAssembly(IAssemblySymbol) Declaration public override MetadataItem VisitAssembly(IAssemblySymbol symbol) Parameters Type Name Description IAssemblySymbol symbol Returns Type Description MetadataItem Overrides Microsoft.CodeAnalysis.SymbolVisitor<Microsoft.DocAsCode.Metadata.ManagedReference.MetadataItem>.VisitAssembly(Microsoft.CodeAnalysis.IAssemblySymbol) | Improve this Doc View Source VisitEvent(IEventSymbol) Declaration public override MetadataItem VisitEvent(IEventSymbol symbol) Parameters Type Name Description IEventSymbol symbol Returns Type Description MetadataItem Overrides Microsoft.CodeAnalysis.SymbolVisitor<Microsoft.DocAsCode.Metadata.ManagedReference.MetadataItem>.VisitEvent(Microsoft.CodeAnalysis.IEventSymbol) | Improve this Doc View Source VisitField(IFieldSymbol) Declaration public override MetadataItem VisitField(IFieldSymbol symbol) Parameters Type Name Description IFieldSymbol symbol Returns Type Description MetadataItem Overrides Microsoft.CodeAnalysis.SymbolVisitor<Microsoft.DocAsCode.Metadata.ManagedReference.MetadataItem>.VisitField(Microsoft.CodeAnalysis.IFieldSymbol) | Improve this Doc View Source VisitMethod(IMethodSymbol) Declaration public override MetadataItem VisitMethod(IMethodSymbol symbol) Parameters Type Name Description IMethodSymbol symbol Returns Type Description MetadataItem Overrides Microsoft.CodeAnalysis.SymbolVisitor<Microsoft.DocAsCode.Metadata.ManagedReference.MetadataItem>.VisitMethod(Microsoft.CodeAnalysis.IMethodSymbol) | Improve this Doc View Source VisitNamedType(INamedTypeSymbol) Declaration public override MetadataItem VisitNamedType(INamedTypeSymbol symbol) Parameters Type Name Description INamedTypeSymbol symbol Returns Type Description MetadataItem Overrides Microsoft.CodeAnalysis.SymbolVisitor<Microsoft.DocAsCode.Metadata.ManagedReference.MetadataItem>.VisitNamedType(Microsoft.CodeAnalysis.INamedTypeSymbol) | Improve this Doc View Source VisitNamespace(INamespaceSymbol) Declaration public override MetadataItem VisitNamespace(INamespaceSymbol symbol) Parameters Type Name Description INamespaceSymbol symbol Returns Type Description MetadataItem Overrides Microsoft.CodeAnalysis.SymbolVisitor<Microsoft.DocAsCode.Metadata.ManagedReference.MetadataItem>.VisitNamespace(Microsoft.CodeAnalysis.INamespaceSymbol) | Improve this Doc View Source VisitProperty(IPropertySymbol) Declaration public override MetadataItem VisitProperty(IPropertySymbol symbol) Parameters Type Name Description IPropertySymbol symbol Returns Type Description MetadataItem Overrides Microsoft.CodeAnalysis.SymbolVisitor<Microsoft.DocAsCode.Metadata.ManagedReference.MetadataItem>.VisitProperty(Microsoft.CodeAnalysis.IPropertySymbol) (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.SymbolFilterData.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.SymbolFilterData.html",
    "title": "Class SymbolFilterData | DocFX website",
    "keywords": "Class SymbolFilterData Inheritance Object SymbolFilterData Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.Common.dll Syntax public class SymbolFilterData Properties | Improve this Doc View Source Attributes Declaration public IEnumerable<AttributeFilterData> Attributes { get; set; } Property Value Type Description IEnumerable < AttributeFilterData > | Improve this Doc View Source Id Declaration public string Id { get; set; } Property Value Type Description String | Improve this Doc View Source Kind Declaration public ExtendedSymbolKind? Kind { get; set; } Property Value Type Description Nullable < ExtendedSymbolKind > (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.SourceFileInputParameters.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.SourceFileInputParameters.html",
    "title": "Class SourceFileInputParameters | DocFX website",
    "keywords": "Class SourceFileInputParameters Inheritance Object SourceFileInputParameters Implements IInputParameters Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.Common.dll Syntax public class SourceFileInputParameters : IInputParameters Constructors | Improve this Doc View Source SourceFileInputParameters(ExtractMetadataOptions, IEnumerable<String>) Declaration public SourceFileInputParameters(ExtractMetadataOptions options, IEnumerable<string> files) Parameters Type Name Description ExtractMetadataOptions options IEnumerable < String > files Properties | Improve this Doc View Source BuildInfo Declaration public BuildInfo BuildInfo { get; } Property Value Type Description BuildInfo | Improve this Doc View Source Cache Declaration public ProjectLevelCache Cache { get; } Property Value Type Description ProjectLevelCache | Improve this Doc View Source Files Declaration public IEnumerable<string> Files { get; } Property Value Type Description IEnumerable < String > | Improve this Doc View Source Key Declaration public string Key { get; } Property Value Type Description String | Improve this Doc View Source Options Declaration public ExtractMetadataOptions Options { get; } Property Value Type Description ExtractMetadataOptions Methods | Improve this Doc View Source HasChanged(BuildInfo) Declaration public bool HasChanged(BuildInfo buildInfo) Parameters Type Name Description BuildInfo buildInfo Returns Type Description Boolean Implements IInputParameters (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.SimpleYamlModelGenerator.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.SimpleYamlModelGenerator.html",
    "title": "Class SimpleYamlModelGenerator | DocFX website",
    "keywords": "Class SimpleYamlModelGenerator Inheritance Object YamlModelGenerator SimpleYamlModelGenerator CSYamlModelGenerator VBYamlModelGenerator Inherited Members YamlModelGenerator.DefaultVisit(ISymbol, MetadataItem, SymbolVisitorAdapter) YamlModelGenerator.GenerateNamedType(INamedTypeSymbol, MetadataItem, SymbolVisitorAdapter) YamlModelGenerator.GenerateMethod(IMethodSymbol, MetadataItem, SymbolVisitorAdapter) YamlModelGenerator.GenerateField(IFieldSymbol, MetadataItem, SymbolVisitorAdapter) YamlModelGenerator.GenerateEvent(IEventSymbol, MetadataItem, SymbolVisitorAdapter) YamlModelGenerator.GenerateProperty(IPropertySymbol, MetadataItem, SymbolVisitorAdapter) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.Roslyn.dll Syntax public abstract class SimpleYamlModelGenerator : YamlModelGenerator Constructors | Improve this Doc View Source SimpleYamlModelGenerator(SyntaxLanguage) Declaration protected SimpleYamlModelGenerator(SyntaxLanguage language) Parameters Type Name Description SyntaxLanguage language Fields | Improve this Doc View Source QualifiedFormat Declaration public static readonly SymbolDisplayFormat QualifiedFormat Field Value Type Description SymbolDisplayFormat | Improve this Doc View Source ShortFormat Declaration public static readonly SymbolDisplayFormat ShortFormat Field Value Type Description SymbolDisplayFormat Properties | Improve this Doc View Source Language Declaration public SyntaxLanguage Language { get; } Property Value Type Description SyntaxLanguage Methods | Improve this Doc View Source GenerateReference(ISymbol, ReferenceItem, SymbolVisitorAdapter, Boolean) Declaration protected abstract void GenerateReference(ISymbol symbol, ReferenceItem reference, SymbolVisitorAdapter adapter, bool asOverload) Parameters Type Name Description ISymbol symbol ReferenceItem reference SymbolVisitorAdapter adapter Boolean asOverload | Improve this Doc View Source GetSyntaxContent(MemberType, ISymbol, SymbolVisitorAdapter) Declaration protected abstract string GetSyntaxContent(MemberType typeKind, ISymbol symbol, SymbolVisitorAdapter adapter) Parameters Type Name Description MemberType typeKind ISymbol symbol SymbolVisitorAdapter adapter Returns Type Description String Operators | Improve this Doc View Source Addition(SimpleYamlModelGenerator, SimpleYamlModelGenerator) Declaration public static CompositeYamlModelGenerator operator +(SimpleYamlModelGenerator left, SimpleYamlModelGenerator right) Parameters Type Name Description SimpleYamlModelGenerator left SimpleYamlModelGenerator right Returns Type Description CompositeYamlModelGenerator (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.SetParent.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.SetParent.html",
    "title": "Class SetParent | DocFX website",
    "keywords": "Class SetParent Inheritance Object SetParent Implements IResolverPipeline Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public class SetParent : IResolverPipeline Methods | Improve this Doc View Source Run(MetadataModel, ResolverContext) Declaration public void Run(MetadataModel yaml, ResolverContext context) Parameters Type Name Description MetadataModel yaml ResolverContext context Implements IResolverPipeline (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.SetDerivedClass.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.SetDerivedClass.html",
    "title": "Class SetDerivedClass | DocFX website",
    "keywords": "Class SetDerivedClass Inheritance Object SetDerivedClass Implements IResolverPipeline Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax public class SetDerivedClass : IResolverPipeline Methods | Improve this Doc View Source Run(MetadataModel, ResolverContext) Declaration public void Run(MetadataModel yaml, ResolverContext context) Parameters Type Name Description MetadataModel yaml ResolverContext context Implements IResolverPipeline (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.RoslynSourceFileBuildController.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.RoslynSourceFileBuildController.html",
    "title": "Class RoslynSourceFileBuildController | DocFX website",
    "keywords": "Class RoslynSourceFileBuildController Inheritance Object RoslynSourceFileBuildController Implements IRoslynBuildController IBuildController Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.Roslyn.dll Syntax public class RoslynSourceFileBuildController : IRoslynBuildController, IBuildController Constructors | Improve this Doc View Source RoslynSourceFileBuildController(Compilation, IAssemblySymbol) Declaration public RoslynSourceFileBuildController(Compilation compilation, IAssemblySymbol assembly = null) Parameters Type Name Description Compilation compilation IAssemblySymbol assembly Methods | Improve this Doc View Source ExtractMetadata(IInputParameters) Declaration public MetadataItem ExtractMetadata(IInputParameters parameters) Parameters Type Name Description IInputParameters parameters Returns Type Description MetadataItem | Improve this Doc View Source GetAssembly(IInputParameters) Declaration public IAssemblySymbol GetAssembly(IInputParameters key) Parameters Type Name Description IInputParameters key Returns Type Description IAssemblySymbol | Improve this Doc View Source GetCompilation(IInputParameters) Declaration public Compilation GetCompilation(IInputParameters key) Parameters Type Name Description IInputParameters key Returns Type Description Compilation Implements IRoslynBuildController IBuildController (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.RoslynProjectLoader.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.RoslynProjectLoader.html",
    "title": "Class RoslynProjectLoader | DocFX website",
    "keywords": "Class RoslynProjectLoader Inheritance Object RoslynProjectLoader Implements IProjectLoader Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.Roslyn.dll Syntax public class RoslynProjectLoader : IProjectLoader Constructors | Improve this Doc View Source RoslynProjectLoader(Lazy<MSBuildWorkspace>) Declaration public RoslynProjectLoader(Lazy<MSBuildWorkspace> workspace) Parameters Type Name Description Lazy < Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace > workspace Methods | Improve this Doc View Source TryLoad(String, AbstractProjectLoader) Declaration public AbstractProject TryLoad(string path, AbstractProjectLoader loader) Parameters Type Name Description String path AbstractProjectLoader loader Returns Type Description AbstractProject Implements IProjectLoader (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.RoslynProject.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.RoslynProject.html",
    "title": "Class RoslynProject | DocFX website",
    "keywords": "Class RoslynProject Inheritance Object AbstractProject RoslynProject Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.Roslyn.dll Syntax public class RoslynProject : AbstractProject Constructors | Improve this Doc View Source RoslynProject(Project) Declaration public RoslynProject(Project project) Parameters Type Name Description Project project Properties | Improve this Doc View Source Documents Declaration public override IEnumerable<AbstractDocument> Documents { get; } Property Value Type Description IEnumerable < AbstractDocument > Overrides AbstractProject.Documents | Improve this Doc View Source FilePath Declaration public override string FilePath { get; } Property Value Type Description String Overrides AbstractProject.FilePath | Improve this Doc View Source HasDocuments Declaration public override bool HasDocuments { get; } Property Value Type Description Boolean Overrides AbstractProject.HasDocuments | Improve this Doc View Source PortableExecutableMetadataReferences Declaration public override IEnumerable<string> PortableExecutableMetadataReferences { get; } Property Value Type Description IEnumerable < String > Overrides AbstractProject.PortableExecutableMetadataReferences | Improve this Doc View Source ProjectReferences Declaration public override IEnumerable<AbstractProject> ProjectReferences { get; } Property Value Type Description IEnumerable < AbstractProject > Overrides AbstractProject.ProjectReferences Methods | Improve this Doc View Source GetCompilationAsync() Declaration public override Task<AbstractCompilation> GetCompilationAsync() Returns Type Description Task < AbstractCompilation > Overrides AbstractProject.GetCompilationAsync() (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.RoslynIntermediateMetadataExtractor.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.RoslynIntermediateMetadataExtractor.html",
    "title": "Class RoslynIntermediateMetadataExtractor | DocFX website",
    "keywords": "Class RoslynIntermediateMetadataExtractor Inheritance Object RoslynIntermediateMetadataExtractor Implements IExtractor Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.Roslyn.dll Syntax public class RoslynIntermediateMetadataExtractor : IExtractor Constructors | Improve this Doc View Source RoslynIntermediateMetadataExtractor(IRoslynBuildController) Declaration public RoslynIntermediateMetadataExtractor(IRoslynBuildController controller) Parameters Type Name Description IRoslynBuildController controller Methods | Improve this Doc View Source Extract(IInputParameters) Declaration public MetadataItem Extract(IInputParameters key) Parameters Type Name Description IInputParameters key Returns Type Description MetadataItem | Improve this Doc View Source GetAllExtensionMethodsFromAssembly(Compilation, IEnumerable<IAssemblySymbol>) Declaration public static IReadOnlyDictionary<Compilation, IEnumerable<IMethodSymbol>> GetAllExtensionMethodsFromAssembly(Compilation compilation, IEnumerable<IAssemblySymbol> assemblies) Parameters Type Name Description Compilation compilation IEnumerable < IAssemblySymbol > assemblies Returns Type Description IReadOnlyDictionary < Compilation , IEnumerable < IMethodSymbol >> | Improve this Doc View Source GetAllExtensionMethodsFromCompilation(IEnumerable<Compilation>) Declaration public static IReadOnlyDictionary<Compilation, IEnumerable<IMethodSymbol>> GetAllExtensionMethodsFromCompilation(IEnumerable<Compilation> compilations) Parameters Type Name Description IEnumerable < Compilation > compilations Returns Type Description IReadOnlyDictionary < Compilation , IEnumerable < IMethodSymbol >> Implements IExtractor (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Metadata.ManagedReference.RoslynDocument.html": {
    "href": "api/Microsoft.DocAsCode.Metadata.ManagedReference.RoslynDocument.html",
    "title": "Class RoslynDocument | DocFX website",
    "keywords": "Class RoslynDocument Inheritance Object AbstractDocument RoslynDocument Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Metadata.ManagedReference Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.Roslyn.dll Syntax public class RoslynDocument : AbstractDocument Constructors | Improve this Doc View Source RoslynDocument(Document) Declaration public RoslynDocument(Document document) Parameters Type Name Description Document document Properties | Improve this Doc View Source FilePath Declaration public override string FilePath { get; } Property Value Type Description String Overrides AbstractDocument.FilePath (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.MergeJsonConfig.html": {
    "href": "api/Microsoft.DocAsCode.MergeJsonConfig.html",
    "title": "Class MergeJsonConfig | DocFX website",
    "keywords": "Class MergeJsonConfig Inheritance Object List < MergeJsonItemConfig > MergeJsonConfig Implements IList < MergeJsonItemConfig > ICollection < MergeJsonItemConfig > IList ICollection IReadOnlyList < MergeJsonItemConfig > IReadOnlyCollection < MergeJsonItemConfig > IEnumerable < MergeJsonItemConfig > IEnumerable Inherited Members System.Collections.Generic.List<Microsoft.DocAsCode.MergeJsonItemConfig>.System.Collections.IList.get_Item(System.Int32) System.Collections.Generic.List<Microsoft.DocAsCode.MergeJsonItemConfig>.System.Collections.IList.set_Item(System.Int32, System.Object) List<MergeJsonItemConfig>.Add(MergeJsonItemConfig) List<MergeJsonItemConfig>.IList.Add(Object) List<MergeJsonItemConfig>.AddRange(IEnumerable<MergeJsonItemConfig>) List<MergeJsonItemConfig>.AsReadOnly() List<MergeJsonItemConfig>.BinarySearch(Int32, Int32, MergeJsonItemConfig, IComparer<MergeJsonItemConfig>) List<MergeJsonItemConfig>.BinarySearch(MergeJsonItemConfig) List<MergeJsonItemConfig>.BinarySearch(MergeJsonItemConfig, IComparer<MergeJsonItemConfig>) List<MergeJsonItemConfig>.Clear() List<MergeJsonItemConfig>.Contains(MergeJsonItemConfig) List<MergeJsonItemConfig>.IList.Contains(Object) List<MergeJsonItemConfig>.ConvertAll<TOutput>(Converter<MergeJsonItemConfig, TOutput>) List<MergeJsonItemConfig>.CopyTo(MergeJsonItemConfig[]) List<MergeJsonItemConfig>.ICollection.CopyTo(Array, Int32) List<MergeJsonItemConfig>.CopyTo(Int32, MergeJsonItemConfig[], Int32, Int32) List<MergeJsonItemConfig>.CopyTo(MergeJsonItemConfig[], Int32) List<MergeJsonItemConfig>.Exists(Predicate<MergeJsonItemConfig>) List<MergeJsonItemConfig>.Find(Predicate<MergeJsonItemConfig>) List<MergeJsonItemConfig>.FindAll(Predicate<MergeJsonItemConfig>) List<MergeJsonItemConfig>.FindIndex(Predicate<MergeJsonItemConfig>) List<MergeJsonItemConfig>.FindIndex(Int32, Predicate<MergeJsonItemConfig>) List<MergeJsonItemConfig>.FindIndex(Int32, Int32, Predicate<MergeJsonItemConfig>) List<MergeJsonItemConfig>.FindLast(Predicate<MergeJsonItemConfig>) List<MergeJsonItemConfig>.FindLastIndex(Predicate<MergeJsonItemConfig>) List<MergeJsonItemConfig>.FindLastIndex(Int32, Predicate<MergeJsonItemConfig>) List<MergeJsonItemConfig>.FindLastIndex(Int32, Int32, Predicate<MergeJsonItemConfig>) List<MergeJsonItemConfig>.ForEach(Action<MergeJsonItemConfig>) List<MergeJsonItemConfig>.GetEnumerator() List<MergeJsonItemConfig>.IEnumerable<MergeJsonItemConfig>.GetEnumerator() List<MergeJsonItemConfig>.IEnumerable.GetEnumerator() List<MergeJsonItemConfig>.GetRange(Int32, Int32) List<MergeJsonItemConfig>.IndexOf(MergeJsonItemConfig) List<MergeJsonItemConfig>.IList.IndexOf(Object) List<MergeJsonItemConfig>.IndexOf(MergeJsonItemConfig, Int32) List<MergeJsonItemConfig>.IndexOf(MergeJsonItemConfig, Int32, Int32) List<MergeJsonItemConfig>.Insert(Int32, MergeJsonItemConfig) List<MergeJsonItemConfig>.IList.Insert(Int32, Object) List<MergeJsonItemConfig>.InsertRange(Int32, IEnumerable<MergeJsonItemConfig>) List<MergeJsonItemConfig>.LastIndexOf(MergeJsonItemConfig) List<MergeJsonItemConfig>.LastIndexOf(MergeJsonItemConfig, Int32) List<MergeJsonItemConfig>.LastIndexOf(MergeJsonItemConfig, Int32, Int32) List<MergeJsonItemConfig>.Remove(MergeJsonItemConfig) List<MergeJsonItemConfig>.IList.Remove(Object) List<MergeJsonItemConfig>.RemoveAll(Predicate<MergeJsonItemConfig>) List<MergeJsonItemConfig>.RemoveAt(Int32) List<MergeJsonItemConfig>.RemoveRange(Int32, Int32) List<MergeJsonItemConfig>.Reverse() List<MergeJsonItemConfig>.Reverse(Int32, Int32) List<MergeJsonItemConfig>.Sort() List<MergeJsonItemConfig>.Sort(IComparer<MergeJsonItemConfig>) List<MergeJsonItemConfig>.Sort(Int32, Int32, IComparer<MergeJsonItemConfig>) List<MergeJsonItemConfig>.Sort(Comparison<MergeJsonItemConfig>) List<MergeJsonItemConfig>.ToArray() List<MergeJsonItemConfig>.TrimExcess() List<MergeJsonItemConfig>.TrueForAll(Predicate<MergeJsonItemConfig>) List<MergeJsonItemConfig>.Capacity List<MergeJsonItemConfig>.Count List<MergeJsonItemConfig>.IList.IsFixedSize List<MergeJsonItemConfig>.ICollection<MergeJsonItemConfig>.IsReadOnly List<MergeJsonItemConfig>.IList.IsReadOnly List<MergeJsonItemConfig>.ICollection.IsSynchronized List<MergeJsonItemConfig>.ICollection.SyncRoot List<MergeJsonItemConfig>.Item[Int32] List<MergeJsonItemConfig>.IList.Item[Int32] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode Assembly : docfx.dll Syntax [JsonConverter(typeof(MergeJsonConfigConverter))] public class MergeJsonConfig : List<MergeJsonItemConfig>, IList<MergeJsonItemConfig>, ICollection<MergeJsonItemConfig>, IList, ICollection, IReadOnlyList<MergeJsonItemConfig>, IReadOnlyCollection<MergeJsonItemConfig>, IEnumerable<MergeJsonItemConfig>, IEnumerable Constructors | Improve this Doc View Source MergeJsonConfig(MergeJsonItemConfig[]) Declaration public MergeJsonConfig(params MergeJsonItemConfig[] configs) Parameters Type Name Description MergeJsonItemConfig [] configs | Improve this Doc View Source MergeJsonConfig(IEnumerable<MergeJsonItemConfig>) Declaration public MergeJsonConfig(IEnumerable<MergeJsonItemConfig> configs) Parameters Type Name Description IEnumerable < MergeJsonItemConfig > configs Implements System.Collections.Generic.IList<T> System.Collections.Generic.ICollection<T> System.Collections.IList System.Collections.ICollection System.Collections.Generic.IReadOnlyList<T> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.MarkdigMarkdownRewriters.html": {
    "href": "api/Microsoft.DocAsCode.MarkdigMarkdownRewriters.html",
    "title": "Namespace Microsoft.DocAsCode.MarkdigMarkdownRewriters | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.MarkdigMarkdownRewriters Classes MarkdigMarkdownRenderer (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.HtmlToPdf.OutputType.html": {
    "href": "api/Microsoft.DocAsCode.HtmlToPdf.OutputType.html",
    "title": "Enum OutputType | DocFX website",
    "keywords": "Enum OutputType Namespace : Microsoft.DocAsCode.HtmlToPdf Assembly : Microsoft.DocAsCode.HtmlToPdf.dll Syntax public enum OutputType Fields Name Description Html RawPageJson Resource TocJson (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.HtmlToPdf.OutlineOption.html": {
    "href": "api/Microsoft.DocAsCode.HtmlToPdf.OutlineOption.html",
    "title": "Enum OutlineOption | DocFX website",
    "keywords": "Enum OutlineOption Namespace : Microsoft.DocAsCode.HtmlToPdf Assembly : Microsoft.DocAsCode.HtmlToPdf.dll Syntax public enum OutlineOption Fields Name Description CustomOutline DefaultOutline NoOutline WkDefaultOutline (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.HtmlToPdf.ManifestUtility.html": {
    "href": "api/Microsoft.DocAsCode.HtmlToPdf.ManifestUtility.html",
    "title": "Class ManifestUtility | DocFX website",
    "keywords": "Class ManifestUtility Inheritance Object ManifestUtility Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.HtmlToPdf Assembly : Microsoft.DocAsCode.HtmlToPdf.dll Syntax public static class ManifestUtility Methods | Improve this Doc View Source GetAssetId(ManifestItem) Declaration public static string GetAssetId(ManifestItem manifestItem) Parameters Type Name Description ManifestItem manifestItem Returns Type Description String | Improve this Doc View Source GetDocumentType(ManifestItem) Declaration public static ManifestItemType GetDocumentType(ManifestItem item) Parameters Type Name Description ManifestItem item Returns Type Description ManifestItemType | Improve this Doc View Source GetRelativePath(ManifestItem, OutputType) Declaration public static string GetRelativePath(ManifestItem item, OutputType type) Parameters Type Name Description ManifestItem item OutputType type Returns Type Description String (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.HtmlToPdf.ManifestItemType.html": {
    "href": "api/Microsoft.DocAsCode.HtmlToPdf.ManifestItemType.html",
    "title": "Enum ManifestItemType | DocFX website",
    "keywords": "Enum ManifestItemType Namespace : Microsoft.DocAsCode.HtmlToPdf Assembly : Microsoft.DocAsCode.HtmlToPdf.dll Syntax public enum ManifestItemType Fields Name Description Content Resource Toc (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.HtmlToPdf.HtmlToPdfOptions.html": {
    "href": "api/Microsoft.DocAsCode.HtmlToPdf.HtmlToPdfOptions.html",
    "title": "Class HtmlToPdfOptions | DocFX website",
    "keywords": "Class HtmlToPdfOptions Inheritance Object HtmlToPdfOptions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.HtmlToPdf Assembly : Microsoft.DocAsCode.HtmlToPdf.dll Syntax public class HtmlToPdfOptions Properties | Improve this Doc View Source AdditionalArguments Additional arguments. Declaration public string AdditionalArguments { get; set; } Property Value Type Description String | Improve this Doc View Source BasePath The base path or base url. Declaration public string BasePath { get; set; } Property Value Type Description String | Improve this Doc View Source Encoding Set the default text encoding, for input Declaration public string Encoding { get; set; } Property Value Type Description String | Improve this Doc View Source FooterHtmlPath The footer html path for pdf. Declaration public string FooterHtmlPath { get; set; } Property Value Type Description String | Improve this Doc View Source HeaderHtmlPath The header html path for pdf. Declaration public string HeaderHtmlPath { get; set; } Property Value Type Description String | Improve this Doc View Source IsOutputToStdout Whether output the stream to stdout or not (default output the stream to stdout). Declaration public bool IsOutputToStdout { get; set; } Property Value Type Description Boolean | Improve this Doc View Source IsQuiet Be less verbose if true. Declaration public bool IsQuiet { get; set; } Property Value Type Description Boolean | Improve this Doc View Source IsReadArgsFromStdin Whether read command line arguments from stdin or not (default read command line arguments from stdin). Declaration public bool IsReadArgsFromStdin { get; set; } Property Value Type Description Boolean | Improve this Doc View Source LoadErrorHandling Specify how to handle pages that fail to load: abort, ignore or skip(default abort) Declaration public string LoadErrorHandling { get; set; } Property Value Type Description String | Improve this Doc View Source MaxDegreeOfParallelism The max degree of parallelism to convert pdf. Declaration public int MaxDegreeOfParallelism { get; set; } Property Value Type Description Int32 | Improve this Doc View Source OutlineOption The option to put a outline into the pdf (default put a default outline into the pdf). Declaration public OutlineOption OutlineOption { get; set; } Property Value Type Description OutlineOption | Improve this Doc View Source RetryIntervals When convert pdf failed, we will retry twice, the default interval value is 5 seconds. Declaration public TimeSpan[] RetryIntervals { get; set; } Property Value Type Description TimeSpan [] | Improve this Doc View Source UserStyleSheet Specify a user style sheet, to load with every page. Declaration public string UserStyleSheet { get; set; } Property Value Type Description String Methods | Improve this Doc View Source ToString() Get the string of the html to pdf options. Declaration public override string ToString() Returns Type Description String The configuration of html to pdf options. Overrides Object.ToString() (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.HtmlToPdf.HtmlToPdfConverter.html": {
    "href": "api/Microsoft.DocAsCode.HtmlToPdf.HtmlToPdfConverter.html",
    "title": "Class HtmlToPdfConverter | DocFX website",
    "keywords": "Class HtmlToPdfConverter Inheritance Object HtmlToPdfConverter Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.HtmlToPdf Assembly : Microsoft.DocAsCode.HtmlToPdf.dll Syntax public class HtmlToPdfConverter Constructors | Improve this Doc View Source HtmlToPdfConverter(IList<HtmlModel>, HtmlToPdfOptions) Declaration public HtmlToPdfConverter(IList<HtmlModel> htmlModels, HtmlToPdfOptions htmlToPdfOptions) Parameters Type Name Description IList < HtmlModel > htmlModels HtmlToPdfOptions htmlToPdfOptions Properties | Improve this Doc View Source CustomOutlines Declaration public IList<Dictionary<string, object>> CustomOutlines { get; set; } Property Value Type Description IList < Dictionary < String , Object >> Methods | Improve this Doc View Source GetHtmlToPdfNumberOfPages(IList<String>) Declaration public IDictionary<string, int> GetHtmlToPdfNumberOfPages(IList<string> htmlFilePaths) Parameters Type Name Description IList < String > htmlFilePaths Returns Type Description IDictionary < String , Int32 > | Improve this Doc View Source Save(String) Declaration public void Save(string outputFileName) Parameters Type Name Description String outputFileName (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.HtmlToPdf.HtmlModel.html": {
    "href": "api/Microsoft.DocAsCode.HtmlToPdf.HtmlModel.html",
    "title": "Class HtmlModel | DocFX website",
    "keywords": "Class HtmlModel Inheritance Object HtmlModel Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.HtmlToPdf Assembly : Microsoft.DocAsCode.HtmlToPdf.dll Syntax public class HtmlModel Properties | Improve this Doc View Source Children Declaration public IList<HtmlModel> Children { get; set; } Property Value Type Description IList < HtmlModel > | Improve this Doc View Source ExternalLink Declaration public string ExternalLink { get; set; } Property Value Type Description String | Improve this Doc View Source HtmlFilePath Declaration public string HtmlFilePath { get; set; } Property Value Type Description String | Improve this Doc View Source Title Declaration public string Title { get; set; } Property Value Type Description String (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.HtmlToPdf.Guard.html": {
    "href": "api/Microsoft.DocAsCode.HtmlToPdf.Guard.html",
    "title": "Class Guard | DocFX website",
    "keywords": "Class Guard Represents a simple class for validating parameters and throwing exceptions. Inheritance Object Guard Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.HtmlToPdf Assembly : Microsoft.DocAsCode.HtmlToPdf.dll Syntax public static class Guard Methods | Improve this Doc View Source Argument(Func<Boolean>, String, String) Call a user-supplied validation delegate and throws an ArgumentException if the delegate returns false. Declaration public static void Argument(Func<bool> validationFunction, string argumentName, string argumentMessage = null) Parameters Type Name Description Func < Boolean > validationFunction This function will be called to perform validation. If the function returns false, an ArgumentException will be thrown. String argumentName Name of the argument. String argumentMessage Optional error message | Improve this Doc View Source ArgumentNotNull(Object, String) Validates argumentValue is not null and throws ArgumentNullException if it is null. Declaration public static void ArgumentNotNull(object argumentValue, string argumentName) Parameters Type Name Description Object argumentValue The argument value. String argumentName Name of the argument. | Improve this Doc View Source ArgumentNotNullOrEmpty(String, String) Validates argumentValue is not null or an empty string and throws ArgumentNullException if it is null or ArgumentException if it is an empty string . Declaration public static void ArgumentNotNullOrEmpty(string argumentValue, string argumentName) Parameters Type Name Description String argumentValue The argument value. String argumentName Name of the argument. (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.HtmlToPdf.FolderUtility.html": {
    "href": "api/Microsoft.DocAsCode.HtmlToPdf.FolderUtility.html",
    "title": "Class FolderUtility | DocFX website",
    "keywords": "Class FolderUtility Inheritance Object FolderUtility Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.HtmlToPdf Assembly : Microsoft.DocAsCode.HtmlToPdf.dll Syntax public static class FolderUtility Methods | Improve this Doc View Source CopyDirectoryWithAllSubDirectories(String, String, Int32) Declaration public static void CopyDirectoryWithAllSubDirectories(string sourceDirectory, string targetDirectory, int maxDegreeOfParallelism = -1) Parameters Type Name Description String sourceDirectory String targetDirectory Int32 maxDegreeOfParallelism | Improve this Doc View Source ForceDeleteAllSubDirectories(String, Int32) Declaration public static void ForceDeleteAllSubDirectories(string directory, int maxDegreeOfParallelism = -1) Parameters Type Name Description String directory Int32 maxDegreeOfParallelism | Improve this Doc View Source ForceDeleteDirectoryWithAllSubDirectories(String, Int32) Declaration public static void ForceDeleteDirectoryWithAllSubDirectories(string directory, int maxDegreeOfParallelism = -1) Parameters Type Name Description String directory Int32 maxDegreeOfParallelism | Improve this Doc View Source ForceDeleteFile(String) Declaration public static void ForceDeleteFile(string filePath) Parameters Type Name Description String filePath (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.HtmlToPdf.FileOutputs.html": {
    "href": "api/Microsoft.DocAsCode.HtmlToPdf.FileOutputs.html",
    "title": "Class FileOutputs | DocFX website",
    "keywords": "Class FileOutputs Inheritance Object FileOutputs Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.HtmlToPdf Assembly : Microsoft.DocAsCode.HtmlToPdf.dll Syntax public class FileOutputs Properties | Improve this Doc View Source Html Declaration [JsonProperty(\".html\")] public FileOutput Html { get; set; } Property Value Type Description FileOutput | Improve this Doc View Source MtaJson Declaration [JsonProperty(\".mta.json\")] public FileOutput MtaJson { get; set; } Property Value Type Description FileOutput | Improve this Doc View Source OtherOutputs Declaration [JsonExtensionData] public Dictionary<string, object> OtherOutputs { get; set; } Property Value Type Description Dictionary < String , Object > | Improve this Doc View Source RawPageJson Declaration [JsonProperty(\".raw.page.json\")] public FileOutput RawPageJson { get; set; } Property Value Type Description FileOutput | Improve this Doc View Source Resource Declaration [JsonProperty(\"resource\")] public FileOutput Resource { get; set; } Property Value Type Description FileOutput | Improve this Doc View Source TocJson Declaration [JsonProperty(\".json\")] public FileOutput TocJson { get; set; } Property Value Type Description FileOutput (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.HtmlToPdf.FileOutput.html": {
    "href": "api/Microsoft.DocAsCode.HtmlToPdf.FileOutput.html",
    "title": "Class FileOutput | DocFX website",
    "keywords": "Class FileOutput Inheritance Object FileOutput Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.HtmlToPdf Assembly : Microsoft.DocAsCode.HtmlToPdf.dll Syntax public class FileOutput Properties | Improve this Doc View Source Hash Declaration [JsonProperty(\"hash\")] public string Hash { get; set; } Property Value Type Description String | Improve this Doc View Source IsRawPage Declaration [JsonProperty(\"is_raw_page\")] public bool IsRawPage { get; set; } Property Value Type Description Boolean | Improve this Doc View Source LinkToPath Declaration [JsonProperty(\"link_to_path\")] public string LinkToPath { get; set; } Property Value Type Description String | Improve this Doc View Source Metadata Declaration [JsonExtensionData] public Dictionary<string, object> Metadata { get; set; } Property Value Type Description Dictionary < String , Object > | Improve this Doc View Source RelativePath Declaration [JsonProperty(\"relative_path\")] public string RelativePath { get; set; } Property Value Type Description String | Improve this Doc View Source SkipPublish Declaration [JsonProperty(\"skip_publish\", DefaultValueHandling = DefaultValueHandling.Ignore)] public bool SkipPublish { get; set; } Property Value Type Description Boolean Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.HtmlToPdf.ConvertWrapper.html": {
    "href": "api/Microsoft.DocAsCode.HtmlToPdf.ConvertWrapper.html",
    "title": "Class ConvertWrapper | DocFX website",
    "keywords": "Class ConvertWrapper Inheritance Object ConvertWrapper Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.HtmlToPdf Assembly : Microsoft.DocAsCode.HtmlToPdf.dll Syntax public class ConvertWrapper Constructors | Improve this Doc View Source ConvertWrapper(PdfOptions) Declaration public ConvertWrapper(PdfOptions pdfOptions) Parameters Type Name Description PdfOptions pdfOptions Methods | Improve this Doc View Source Convert() Declaration public void Convert() | Improve this Doc View Source PrerequisiteCheck() Declaration public static void PrerequisiteCheck() (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.GroupConfig.html": {
    "href": "api/Microsoft.DocAsCode.GroupConfig.html",
    "title": "Class GroupConfig | DocFX website",
    "keywords": "Class GroupConfig Inheritance Object GroupConfig Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode Assembly : docfx.dll Syntax [Serializable] public class GroupConfig Properties | Improve this Doc View Source Destination Declaration [JsonProperty(\"dest\")] public string Destination { get; set; } Property Value Type Description String | Improve this Doc View Source Metadata Declaration [JsonExtensionData] public Dictionary<string, object> Metadata { get; set; } Property Value Type Description Dictionary < String , Object > | Improve this Doc View Source XrefTags Declaration [JsonProperty(\"xrefTags\")] public ListWithStringFallback XrefTags { get; set; } Property Value Type Description ListWithStringFallback (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Glob.html": {
    "href": "api/Microsoft.DocAsCode.Glob.html",
    "title": "Namespace Microsoft.DocAsCode.Glob | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.Glob Classes FileGlob GlobMatcher Enums GlobMatcherOptions (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Glob.GlobMatcherOptions.html": {
    "href": "api/Microsoft.DocAsCode.Glob.GlobMatcherOptions.html",
    "title": "Enum GlobMatcherOptions | DocFX website",
    "keywords": "Enum GlobMatcherOptions Namespace : Microsoft.DocAsCode.Glob Assembly : Microsoft.DocAsCode.Glob.dll Syntax [Flags] public enum GlobMatcherOptions Fields Name Description AllowDotMatch Allow patterns to match filenames starting with a period even if the pattern does not explicitly have a period. By default disabled: a/**/b will not match a/.c/d, unless AllowDotMatch is set AllowEscape AllowExpand AllowGlobStar AllowNegate IgnoreCase None (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Glob.GlobMatcher.html": {
    "href": "api/Microsoft.DocAsCode.Glob.GlobMatcher.html",
    "title": "Class GlobMatcher | DocFX website",
    "keywords": "Class GlobMatcher Inheritance Object GlobMatcher Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Glob Assembly : Microsoft.DocAsCode.Glob.dll Syntax [Serializable] public class GlobMatcher Constructors | Improve this Doc View Source GlobMatcher(String, GlobMatcherOptions) Declaration public GlobMatcher(string pattern, GlobMatcherOptions options = GlobMatcherOptions.IgnoreCase | GlobMatcherOptions.AllowNegate | GlobMatcherOptions.AllowExpand | GlobMatcherOptions.AllowEscape | GlobMatcherOptions.AllowGlobStar) Parameters Type Name Description String pattern GlobMatcherOptions options Fields | Improve this Doc View Source DefaultOptions Declaration public const GlobMatcherOptions DefaultOptions = GlobMatcherOptions.IgnoreCase | GlobMatcherOptions.AllowNegate | GlobMatcherOptions.AllowExpand | GlobMatcherOptions.AllowEscape | GlobMatcherOptions.AllowGlobStar Field Value Type Description GlobMatcherOptions Properties | Improve this Doc View Source Options Declaration public GlobMatcherOptions Options { get; } Property Value Type Description GlobMatcherOptions | Improve this Doc View Source Raw Declaration public string Raw { get; } Property Value Type Description String Methods | Improve this Doc View Source GetRegex() Currently not used TODO: add test case Declaration public Regex GetRegex() Returns Type Description Regex | Improve this Doc View Source Match(String, Boolean) Declaration public bool Match(string file, bool partial = false) Parameters Type Name Description String file Boolean partial Returns Type Description Boolean (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Exceptions.InvalidJsonPointerException.html": {
    "href": "api/Microsoft.DocAsCode.Exceptions.InvalidJsonPointerException.html",
    "title": "Class InvalidJsonPointerException | DocFX website",
    "keywords": "Class InvalidJsonPointerException Inheritance Object InvalidJsonPointerException Namespace : Microsoft.DocAsCode.Exceptions Assembly : Microsoft.DocAsCode.Build.SchemaDriven.dll Syntax [Serializable] public class InvalidJsonPointerException : DocumentException Constructors | Improve this Doc View Source InvalidJsonPointerException() Declaration public InvalidJsonPointerException() | Improve this Doc View Source InvalidJsonPointerException(SerializationInfo, StreamingContext) Declaration protected InvalidJsonPointerException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context | Improve this Doc View Source InvalidJsonPointerException(String) Declaration public InvalidJsonPointerException(string message) Parameters Type Name Description String message | Improve this Doc View Source InvalidJsonPointerException(String, Exception) Declaration public InvalidJsonPointerException(string message, Exception innerException) Parameters Type Name Description String message Exception innerException (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Exceptions.ExtractMetadataException.html": {
    "href": "api/Microsoft.DocAsCode.Exceptions.ExtractMetadataException.html",
    "title": "Class ExtractMetadataException | DocFX website",
    "keywords": "Class ExtractMetadataException Inheritance Object ExtractMetadataException Namespace : Microsoft.DocAsCode.Exceptions Assembly : Microsoft.DocAsCode.Metadata.ManagedReference.dll Syntax [Serializable] public class ExtractMetadataException : DocfxException Constructors | Improve this Doc View Source ExtractMetadataException() Declaration public ExtractMetadataException() | Improve this Doc View Source ExtractMetadataException(SerializationInfo, StreamingContext) Declaration protected ExtractMetadataException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context | Improve this Doc View Source ExtractMetadataException(String) Declaration public ExtractMetadataException(string message) Parameters Type Name Description String message | Improve this Doc View Source ExtractMetadataException(String, Exception) Declaration public ExtractMetadataException(string message, Exception innerException) Parameters Type Name Description String message Exception innerException (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Exceptions.DocfxMetadataException.html": {
    "href": "api/Microsoft.DocAsCode.Exceptions.DocfxMetadataException.html",
    "title": "Class DocfxMetadataException | DocFX website",
    "keywords": "Class DocfxMetadataException Inheritance Object Exception DocfxMetadataException Implements ISerializable _Exception Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.Message Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Exceptions Assembly : docfx.dll Syntax public class DocfxMetadataException : Exception, ISerializable, _Exception Constructors | Improve this Doc View Source DocfxMetadataException() Declaration public DocfxMetadataException() | Improve this Doc View Source DocfxMetadataException(SerializationInfo, StreamingContext) Declaration protected DocfxMetadataException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context | Improve this Doc View Source DocfxMetadataException(String) Declaration public DocfxMetadataException(string message) Parameters Type Name Description String message | Improve this Doc View Source DocfxMetadataException(String, Exception) Declaration public DocfxMetadataException(string message, Exception innerException) Parameters Type Name Description String message Exception innerException Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Exceptions.DocfxInitException.html": {
    "href": "api/Microsoft.DocAsCode.Exceptions.DocfxInitException.html",
    "title": "Class DocfxInitException | DocFX website",
    "keywords": "Class DocfxInitException Inheritance Object Exception DocfxInitException Implements ISerializable _Exception Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.Message Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Exceptions Assembly : docfx.dll Syntax public class DocfxInitException : Exception, ISerializable, _Exception Constructors | Improve this Doc View Source DocfxInitException() Declaration public DocfxInitException() | Improve this Doc View Source DocfxInitException(SerializationInfo, StreamingContext) Declaration protected DocfxInitException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context | Improve this Doc View Source DocfxInitException(String) Declaration public DocfxInitException(string message) Parameters Type Name Description String message | Improve this Doc View Source DocfxInitException(String, Exception) Declaration public DocfxInitException(string message, Exception innerException) Parameters Type Name Description String message Exception innerException Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.html",
    "title": "Namespace Microsoft.DocAsCode.Dfm | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.Dfm Classes AggregateBlockPathQueryOptionCreator CodeLanguageExtractorsBuilder CodeSnippetRegexExtractor CodeSnippetTag CustomizedRendererCreator DfmBlockquoteBlockRule DfmBlockquoteHelper DfmCodeExtractor DfmCodeExtractorException DfmCodeExtractorHelper DfmCodeRenderer DfmContextExtensions DfmCustomizedRendererPartBase<TRenderer, TToken, TContext> DfmDefaultBlockQuoteBlockSplitToken DfmEmailInlineRule DfmEngine DfmEngineBuilder DfmExtractCodeResult DfmFallbackHelper DfmFencesBlockHelper DfmFencesBlockPathQueryOption DfmFencesBlockPathQueryOptionParameters DfmFencesBlockRule DfmFencesBlockToken DfmFencesInlineRule DfmFencesInlineToken DfmFencesRule DfmFencesToken DfmIncludeBlockRule DfmIncludeBlockToken DfmIncludeInlineRule DfmIncludeInlineToken DfmJsonTokenTreeRender DfmMarkdownRenderer DfmNoteBlockRule DfmNoteBlockSplitToken DfmNoteBlockToken DfmNpTableBlockRule DfmRenderer DfmSectionBlockRule DfmSectionBlockSplitToken DfmSectionBlockToken DfmTabContentBlockToken DfmTabGroupBlockRule Fake rule for Dfm Tab group. DfmTabGroupBlockToken DfmTabItemBlockToken DfmTableBlockRule DfmTabTitleBlockToken DfmTagNameResolveResult DfmTextInlineRule DfmVideoBlockRule DfmVideoBlockSplitToken DfmVideoBlockToken DfmXrefAutoLinkInlineRule Xref auto link syntax: &lt;xref:uid> &lt;xref:&quot;uid with space&quot;> DfmXrefInlineToken DfmXrefShortcutInlineRule XREF regex: If content after @ is wrapped by &apos; or &quot; , it contains any character including white space If content after @ is not wrapped by &apos; or &quot; , It must start with word character a-z or A-Z It ends when a. line ends b. meets whitespaces c. line ends with . , , , ; , : , ! , ? and ~ d. meets 2 times or more . , , , ; , : , ! , ? and ~ DfmYamlHeaderBlockRule DfmYamlHeaderBlockToken DocfxFlavoredMarked FileCacheLite FlatNameCodeSnippetExtractor Flat name extrator works for snippet name exists in both start and end line representations E.g., comment representation needs snippet name exists in both start and end line comment FullFileBlockPathQueryOption FullFileBlockPathQueryOptionCreator HeadingIdAggregator LineRangeBlockPathQueryOption MultipleLineRangeBlockPathQueryOption MultipleLineRangeBlockPathQueryOptionCreator PlugableRendererBase RecursiveNameCodeSnippetExtractor Recursive name extrator works for snippet name only exists in start line representation E.g., C# region representation only has snippet name in start line representation SplitToken TabGroupAggregator TagNameBlockPathQueryOption TagNameBlockPathQueryOptionCreator Interfaces ICodeSnippetExtractor IDfmBlockSpecialSplitToken IDfmCustomizedRendererPart IDfmCustomizedRendererPartProvider IDfmEngineCustomizer IDfmFencesBlockPathQueryOption IDfmFencesBlockPathQueryOptionCreator Enums CodeSnippetTagType (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.TagNameBlockPathQueryOptionCreator.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.TagNameBlockPathQueryOptionCreator.html",
    "title": "Class TagNameBlockPathQueryOptionCreator | DocFX website",
    "keywords": "Class TagNameBlockPathQueryOptionCreator Inheritance Object TagNameBlockPathQueryOptionCreator Implements IDfmFencesBlockPathQueryOptionCreator Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Dfm Assembly : Microsoft.DocAsCode.Dfm.dll Syntax public class TagNameBlockPathQueryOptionCreator : IDfmFencesBlockPathQueryOptionCreator Constructors | Improve this Doc View Source TagNameBlockPathQueryOptionCreator(CodeLanguageExtractorsBuilder) Declaration public TagNameBlockPathQueryOptionCreator(CodeLanguageExtractorsBuilder builder = null) Parameters Type Name Description CodeLanguageExtractorsBuilder builder Methods | Improve this Doc View Source ParseQueryOrFragment(DfmFencesBlockPathQueryOptionParameters, Boolean) Declaration public IDfmFencesBlockPathQueryOption ParseQueryOrFragment(DfmFencesBlockPathQueryOptionParameters parameters, bool noCache = false) Parameters Type Name Description DfmFencesBlockPathQueryOptionParameters parameters Boolean noCache Returns Type Description IDfmFencesBlockPathQueryOption Implements IDfmFencesBlockPathQueryOptionCreator (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.TagNameBlockPathQueryOption.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.TagNameBlockPathQueryOption.html",
    "title": "Class TagNameBlockPathQueryOption | DocFX website",
    "keywords": "Class TagNameBlockPathQueryOption Inheritance Object DfmFencesBlockPathQueryOption TagNameBlockPathQueryOption Implements IDfmFencesBlockPathQueryOption Inherited Members DfmFencesBlockPathQueryOption.HighlightLines DfmFencesBlockPathQueryOption.DedentLength DfmFencesBlockPathQueryOption.ErrorMessage DfmFencesBlockPathQueryOption.GetQueryLines(String[]) DfmFencesBlockPathQueryOption.ValidateAndPrepare(String[], DfmFencesToken) DfmFencesBlockPathQueryOption.IDfmFencesBlockPathQueryOption.ValidateHighlightLinesAndDedentLength(Int32) DfmFencesBlockPathQueryOption.ProcessIncludedLines(List<String>, DfmFencesToken) DfmFencesBlockPathQueryOption.ValidateHighlightLinesAndDedentLength(Int32) DfmFencesBlockPathQueryOption.CheckLineRange(Int32, Nullable<Int32>, Nullable<Int32>, Boolean) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Dfm Assembly : Microsoft.DocAsCode.Dfm.dll Syntax public class TagNameBlockPathQueryOption : DfmFencesBlockPathQueryOption, IDfmFencesBlockPathQueryOption Constructors | Improve this Doc View Source TagNameBlockPathQueryOption() Declaration public TagNameBlockPathQueryOption() | Improve this Doc View Source TagNameBlockPathQueryOption(CodeLanguageExtractorsBuilder, Boolean) Declaration public TagNameBlockPathQueryOption(CodeLanguageExtractorsBuilder codeLanguageExtractors, bool noCache) Parameters Type Name Description CodeLanguageExtractorsBuilder codeLanguageExtractors Boolean noCache | Improve this Doc View Source TagNameBlockPathQueryOption(Boolean) Declaration public TagNameBlockPathQueryOption(bool noCache = false) Parameters Type Name Description Boolean noCache Properties | Improve this Doc View Source TagName Declaration public string TagName { get; set; } Property Value Type Description String Methods | Improve this Doc View Source GetDefaultCodeLanguageExtractorsBuilder() Declaration public static CodeLanguageExtractorsBuilder GetDefaultCodeLanguageExtractorsBuilder() Returns Type Description CodeLanguageExtractorsBuilder | Improve this Doc View Source GetQueryLines(String[], DfmFencesToken) Declaration public override IEnumerable<string> GetQueryLines(string[] lines, DfmFencesToken token) Parameters Type Name Description String [] lines DfmFencesToken token Returns Type Description IEnumerable < String > Overrides DfmFencesBlockPathQueryOption.GetQueryLines(String[], DfmFencesToken) Implements IDfmFencesBlockPathQueryOption (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.TabGroupAggregator.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.TabGroupAggregator.html",
    "title": "Class TabGroupAggregator | DocFX website",
    "keywords": "Class TabGroupAggregator Inheritance Object TabGroupAggregator Namespace : Microsoft.DocAsCode.Dfm Assembly : Microsoft.DocAsCode.Dfm.dll Syntax public class TabGroupAggregator : MarkdownTokenAggregator<MarkdownHeadingBlockToken> Methods | Improve this Doc View Source AggregateCore(MarkdownHeadingBlockToken, IMarkdownTokenAggregateContext) Declaration protected override bool AggregateCore(MarkdownHeadingBlockToken headToken, IMarkdownTokenAggregateContext context) Parameters Type Name Description MarkdownHeadingBlockToken headToken IMarkdownTokenAggregateContext context Returns Type Description Boolean (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.SplitToken.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.SplitToken.html",
    "title": "Class SplitToken | DocFX website",
    "keywords": "Class SplitToken Inheritance Object SplitToken DfmDefaultBlockQuoteBlockSplitToken DfmNoteBlockSplitToken DfmSectionBlockSplitToken DfmVideoBlockSplitToken Namespace : Microsoft.DocAsCode.Dfm Assembly : Microsoft.DocAsCode.Dfm.dll Syntax public class SplitToken : IMarkdownToken Constructors | Improve this Doc View Source SplitToken(IMarkdownToken) Declaration public SplitToken(IMarkdownToken token) Parameters Type Name Description IMarkdownToken token Properties | Improve this Doc View Source Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext | Improve this Doc View Source InnerTokens Declaration public List<IMarkdownToken> InnerTokens { get; set; } Property Value Type Description List < IMarkdownToken > | Improve this Doc View Source Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule | Improve this Doc View Source SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo | Improve this Doc View Source Token Declaration public IMarkdownToken Token { get; set; } Property Value Type Description IMarkdownToken (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.RecursiveNameCodeSnippetExtractor.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.RecursiveNameCodeSnippetExtractor.html",
    "title": "Class RecursiveNameCodeSnippetExtractor | DocFX website",
    "keywords": "Class RecursiveNameCodeSnippetExtractor Recursive name extrator works for snippet name only exists in start line representation E.g., C# region representation only has snippet name in start line representation Inheritance Object CodeSnippetRegexExtractor RecursiveNameCodeSnippetExtractor Implements ICodeSnippetExtractor Inherited Members CodeSnippetRegexExtractor.GetAll(String[]) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Dfm Assembly : Microsoft.DocAsCode.Dfm.dll Syntax public class RecursiveNameCodeSnippetExtractor : CodeSnippetRegexExtractor, ICodeSnippetExtractor Constructors | Improve this Doc View Source RecursiveNameCodeSnippetExtractor(Regex, Regex) Declaration public RecursiveNameCodeSnippetExtractor(Regex startLineRegex, Regex endLineRegex) Parameters Type Name Description Regex startLineRegex Regex endLineRegex Methods | Improve this Doc View Source ResolveCodeSnippetTags(String[]) Declaration protected override List<CodeSnippetTag> ResolveCodeSnippetTags(string[] lines) Parameters Type Name Description String [] lines Returns Type Description List < CodeSnippetTag > Overrides CodeSnippetRegexExtractor.ResolveCodeSnippetTags(String[]) Implements ICodeSnippetExtractor (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.PlugableRendererBase.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.PlugableRendererBase.html",
    "title": "Class PlugableRendererBase | DocFX website",
    "keywords": "Class PlugableRendererBase Inheritance Object PlugableRendererBase Implements IDisposable Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Dfm Assembly : Microsoft.DocAsCode.Dfm.dll Syntax public abstract class PlugableRendererBase : IDisposable Constructors | Improve this Doc View Source PlugableRendererBase(Object) Declaration public PlugableRendererBase(object innerRenderer) Parameters Type Name Description Object innerRenderer Methods | Improve this Doc View Source BaseRender(IMarkdownRenderer, IMarkdownToken, IMarkdownContext) Declaration public StringBuffer BaseRender(IMarkdownRenderer renderer, IMarkdownToken token, IMarkdownContext context) Parameters Type Name Description IMarkdownRenderer renderer IMarkdownToken token IMarkdownContext context Returns Type Description StringBuffer | Improve this Doc View Source Dispose() Declaration public virtual void Dispose() | Improve this Doc View Source Render(IMarkdownRenderer, IMarkdownToken, IMarkdownContext) Declaration public StringBuffer Render(IMarkdownRenderer renderer, IMarkdownToken token, IMarkdownContext context) Parameters Type Name Description IMarkdownRenderer renderer IMarkdownToken token IMarkdownContext context Returns Type Description StringBuffer Implements System.IDisposable (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.MultipleLineRangeBlockPathQueryOptionCreator.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.MultipleLineRangeBlockPathQueryOptionCreator.html",
    "title": "Class MultipleLineRangeBlockPathQueryOptionCreator | DocFX website",
    "keywords": "Class MultipleLineRangeBlockPathQueryOptionCreator Inheritance Object MultipleLineRangeBlockPathQueryOptionCreator Implements IDfmFencesBlockPathQueryOptionCreator Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Dfm Assembly : Microsoft.DocAsCode.Dfm.dll Syntax public class MultipleLineRangeBlockPathQueryOptionCreator : IDfmFencesBlockPathQueryOptionCreator Methods | Improve this Doc View Source ParseQueryOrFragment(DfmFencesBlockPathQueryOptionParameters, Boolean) Declaration public IDfmFencesBlockPathQueryOption ParseQueryOrFragment(DfmFencesBlockPathQueryOptionParameters parameters, bool noCache = false) Parameters Type Name Description DfmFencesBlockPathQueryOptionParameters parameters Boolean noCache Returns Type Description IDfmFencesBlockPathQueryOption Implements IDfmFencesBlockPathQueryOptionCreator (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.MultipleLineRangeBlockPathQueryOption.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.MultipleLineRangeBlockPathQueryOption.html",
    "title": "Class MultipleLineRangeBlockPathQueryOption | DocFX website",
    "keywords": "Class MultipleLineRangeBlockPathQueryOption Inheritance Object DfmFencesBlockPathQueryOption MultipleLineRangeBlockPathQueryOption Implements IDfmFencesBlockPathQueryOption Inherited Members DfmFencesBlockPathQueryOption.HighlightLines DfmFencesBlockPathQueryOption.DedentLength DfmFencesBlockPathQueryOption.ErrorMessage DfmFencesBlockPathQueryOption.GetQueryLines(String[]) DfmFencesBlockPathQueryOption.ValidateAndPrepare(String[], DfmFencesToken) DfmFencesBlockPathQueryOption.IDfmFencesBlockPathQueryOption.ValidateHighlightLinesAndDedentLength(Int32) DfmFencesBlockPathQueryOption.ProcessIncludedLines(List<String>, DfmFencesToken) DfmFencesBlockPathQueryOption.ValidateHighlightLinesAndDedentLength(Int32) DfmFencesBlockPathQueryOption.CheckLineRange(Int32, Nullable<Int32>, Nullable<Int32>, Boolean) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Dfm Assembly : Microsoft.DocAsCode.Dfm.dll Syntax public class MultipleLineRangeBlockPathQueryOption : DfmFencesBlockPathQueryOption, IDfmFencesBlockPathQueryOption Properties | Improve this Doc View Source LinePairs Declaration public List<Tuple<int? , int? >> LinePairs { get; set; } Property Value Type Description List < Tuple < Nullable < Int32 >, Nullable < Int32 >>> Methods | Improve this Doc View Source GetQueryLines(String[], DfmFencesToken) Declaration public override IEnumerable<string> GetQueryLines(string[] lines, DfmFencesToken token) Parameters Type Name Description String [] lines DfmFencesToken token Returns Type Description IEnumerable < String > Overrides DfmFencesBlockPathQueryOption.GetQueryLines(String[], DfmFencesToken) Implements IDfmFencesBlockPathQueryOption (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.MarkdownValidators.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.MarkdownValidators.html",
    "title": "Namespace Microsoft.DocAsCode.Dfm.MarkdownValidators | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.Dfm.MarkdownValidators Classes MarkdownValidatorBuilder (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.DfmCodeExtractorException.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmCodeExtractorException.html",
    "title": "Class DfmCodeExtractorException | DocFX website",
    "keywords": "Class DfmCodeExtractorException Inheritance Object Exception DfmCodeExtractorException Implements ISerializable _Exception Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.Message Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Dfm Assembly : Microsoft.DocAsCode.Dfm.dll Syntax [Serializable] public class DfmCodeExtractorException : Exception, ISerializable, _Exception Constructors | Improve this Doc View Source DfmCodeExtractorException() Declaration public DfmCodeExtractorException() | Improve this Doc View Source DfmCodeExtractorException(SerializationInfo, StreamingContext) Declaration protected DfmCodeExtractorException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context | Improve this Doc View Source DfmCodeExtractorException(String) Declaration public DfmCodeExtractorException(string message) Parameters Type Name Description String message | Improve this Doc View Source DfmCodeExtractorException(String, Exception) Declaration public DfmCodeExtractorException(string message, Exception inner) Parameters Type Name Description String message Exception inner Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Dfm.DfmCodeExtractor.html": {
    "href": "api/Microsoft.DocAsCode.Dfm.DfmCodeExtractor.html",
    "title": "Class DfmCodeExtractor | DocFX website",
    "keywords": "Class DfmCodeExtractor Inheritance Object DfmCodeExtractor Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Dfm Assembly : Microsoft.DocAsCode.Dfm.dll Syntax public class DfmCodeExtractor Constructors | Improve this Doc View Source DfmCodeExtractor(CodeLanguageExtractorsBuilder) Declaration public DfmCodeExtractor(CodeLanguageExtractorsBuilder builder) Parameters Type Name Description CodeLanguageExtractorsBuilder builder | Improve this Doc View Source DfmCodeExtractor(IDfmFencesBlockPathQueryOptionCreator) Declaration public DfmCodeExtractor(IDfmFencesBlockPathQueryOptionCreator pathQueryOptionCreaters = null) Parameters Type Name Description IDfmFencesBlockPathQueryOptionCreator pathQueryOptionCreaters Methods | Improve this Doc View Source Dedent(IEnumerable<String>, Nullable<Int32>) Declaration public static string[] Dedent(IEnumerable<string> lines, int? dedentLength = default(int? )) Parameters Type Name Description IEnumerable < String > lines Nullable < Int32 > dedentLength Returns Type Description String [] | Improve this Doc View Source ExtractFencesCode(DfmFencesToken, String) Declaration [Obsolete] public DfmExtractCodeResult ExtractFencesCode(DfmFencesToken token, string fencesPath) Parameters Type Name Description DfmFencesToken token String fencesPath Returns Type Description DfmExtractCodeResult | Improve this Doc View Source ExtractFencesCode(DfmFencesToken, String, IDfmFencesBlockPathQueryOption) Declaration public DfmExtractCodeResult ExtractFencesCode(DfmFencesToken token, string fencesPath, IDfmFencesBlockPathQueryOption pathQueryOption) Parameters Type Name Description DfmFencesToken token String fencesPath IDfmFencesBlockPathQueryOption pathQueryOption Returns Type Description DfmExtractCodeResult | Improve this Doc View Source ExtractFencesCode(DfmFencesToken, String[], IDfmFencesBlockPathQueryOption) Declaration public DfmExtractCodeResult ExtractFencesCode(DfmFencesToken token, string[] fencesCode, IDfmFencesBlockPathQueryOption pathQueryOption) Parameters Type Name Description DfmFencesToken token String [] fencesCode IDfmFencesBlockPathQueryOption pathQueryOption Returns Type Description DfmExtractCodeResult | Improve this Doc View Source GenerateErrorMessage(DfmFencesToken, IDfmFencesBlockPathQueryOption) Declaration public static string GenerateErrorMessage(DfmFencesToken token, IDfmFencesBlockPathQueryOption option) Parameters Type Name Description DfmFencesToken token IDfmFencesBlockPathQueryOption option Returns Type Description String | Improve this Doc View Source GenerateErrorMessage(DfmFencesToken, String) Declaration public static string GenerateErrorMessage(DfmFencesToken token, string message) Parameters Type Name Description DfmFencesToken token String message Returns Type Description String | Improve this Doc View Source ParsePathQueryString(String, Boolean) Declaration public IDfmFencesBlockPathQueryOption ParsePathQueryString(string queryOrFragment, bool noCache = false) Parameters Type Name Description String queryOrFragment Boolean noCache Returns Type Description IDfmFencesBlockPathQueryOption (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.DataContracts.UniversalReference.ExceptionInfo.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.UniversalReference.ExceptionInfo.html",
    "title": "Class ExceptionInfo | DocFX website",
    "keywords": "Class ExceptionInfo Inheritance Object ExceptionInfo Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.DataContracts.UniversalReference Assembly : Microsoft.DocAsCode.DataContracts.UniversalReference.dll Syntax [Serializable] public class ExceptionInfo Properties | Improve this Doc View Source Description Declaration [YamlMember(Alias = \"description\")] [JsonProperty(\"description\")] public string Description { get; set; } Property Value Type Description String | Improve this Doc View Source Metadata Declaration [JsonExtensionData] public Dictionary<string, object> Metadata { get; set; } Property Value Type Description Dictionary < String , Object > | Improve this Doc View Source Type Declaration [YamlMember(Alias = \"type\")] [JsonProperty(\"type\")] public string Type { get; set; } Property Value Type Description String (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.DataContracts.UniversalReference.AttributeInfo.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.UniversalReference.AttributeInfo.html",
    "title": "Class AttributeInfo | DocFX website",
    "keywords": "Class AttributeInfo Inheritance Object AttributeInfo Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.DataContracts.UniversalReference Assembly : Microsoft.DocAsCode.DataContracts.UniversalReference.dll Syntax [Serializable] public class AttributeInfo Properties | Improve this Doc View Source Arguments Declaration [YamlMember(Alias = \"arguments\")] [JsonProperty(\"arguments\")] public List<ArgumentInfo> Arguments { get; set; } Property Value Type Description List < ArgumentInfo > | Improve this Doc View Source Constructor Declaration [YamlMember(Alias = \"ctor\")] [JsonProperty(\"ctor\")] public string Constructor { get; set; } Property Value Type Description String | Improve this Doc View Source Metadata Declaration [JsonExtensionData] public Dictionary<string, object> Metadata { get; set; } Property Value Type Description Dictionary < String , Object > | Improve this Doc View Source NamedArguments Declaration [YamlMember(Alias = \"namedArguments\")] [JsonProperty(\"namedArguments\")] public List<NamedArgumentInfo> NamedArguments { get; set; } Property Value Type Description List < NamedArgumentInfo > | Improve this Doc View Source Type Declaration [YamlMember(Alias = \"type\")] [JsonProperty(\"type\")] public string Type { get; set; } Property Value Type Description String (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.DataContracts.UniversalReference.ArgumentInfo.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.UniversalReference.ArgumentInfo.html",
    "title": "Class ArgumentInfo | DocFX website",
    "keywords": "Class ArgumentInfo Inheritance Object ArgumentInfo Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.DataContracts.UniversalReference Assembly : Microsoft.DocAsCode.DataContracts.UniversalReference.dll Syntax [Serializable] public class ArgumentInfo Properties | Improve this Doc View Source Metadata Declaration [JsonExtensionData] public Dictionary<string, object> Metadata { get; set; } Property Value Type Description Dictionary < String , Object > | Improve this Doc View Source Type Declaration [YamlMember(Alias = \"type\")] [JsonProperty(\"type\")] public string Type { get; set; } Property Value Type Description String | Improve this Doc View Source Value Declaration [YamlMember(Alias = \"value\")] [JsonProperty(\"value\")] public object Value { get; set; } Property Value Type Description Object (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.DataContracts.UniversalReference.ApiParameter.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.UniversalReference.ApiParameter.html",
    "title": "Class ApiParameter | DocFX website",
    "keywords": "Class ApiParameter Inheritance Object ApiParameter Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.DataContracts.UniversalReference Assembly : Microsoft.DocAsCode.DataContracts.UniversalReference.dll Syntax [Serializable] public class ApiParameter Properties | Improve this Doc View Source DefaultValue Declaration [YamlMember(Alias = \"defaultValue\")] [JsonProperty(\"defaultValue\")] public string DefaultValue { get; set; } Property Value Type Description String | Improve this Doc View Source Description Declaration [YamlMember(Alias = \"description\")] [JsonProperty(\"description\")] public string Description { get; set; } Property Value Type Description String | Improve this Doc View Source Metadata Declaration [JsonExtensionData] public Dictionary<string, object> Metadata { get; set; } Property Value Type Description Dictionary < String , Object > | Improve this Doc View Source Name Declaration [YamlMember(Alias = \"id\")] [JsonProperty(\"id\")] public string Name { get; set; } Property Value Type Description String | Improve this Doc View Source Optional Declaration [YamlMember(Alias = \"optional\")] [JsonProperty(\"optional\")] public bool Optional { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Type parameter's types multiple types is allowed for a parameter in languages like JavaScript Declaration [YamlMember(Alias = \"type\")] [JsonProperty(\"type\")] public List<string> Type { get; set; } Property Value Type Description List < String > (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.DataContracts.RestApi.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.RestApi.html",
    "title": "Namespace Microsoft.DocAsCode.DataContracts.RestApi | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.DataContracts.RestApi Classes RestApiChildItemViewModel RestApiItemViewModelBase RestApiParameterViewModel RestApiResponseExampleViewModel RestApiResponseViewModel RestApiRootItemViewModel RestApiTagViewModel (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.DataContracts.RestApi.RestApiTagViewModel.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.RestApi.RestApiTagViewModel.html",
    "title": "Class RestApiTagViewModel | DocFX website",
    "keywords": "Class RestApiTagViewModel Inheritance Object RestApiTagViewModel Implements IOverwriteDocumentViewModel Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.DataContracts.RestApi Assembly : Microsoft.DocAsCode.DataContracts.RestApi.dll Syntax [Serializable] public class RestApiTagViewModel : IOverwriteDocumentViewModel Properties | Improve this Doc View Source Conceptual Declaration [YamlMember(Alias = \"conceptual\")] [JsonProperty(\"conceptual\")] public string Conceptual { get; set; } Property Value Type Description String | Improve this Doc View Source Description Declaration [YamlMember(Alias = \"description\")] [JsonProperty(\"description\")] public string Description { get; set; } Property Value Type Description String | Improve this Doc View Source Documentation Declaration [YamlMember(Alias = \"documentation\")] [JsonProperty(\"documentation\")] public SourceDetail Documentation { get; set; } Property Value Type Description SourceDetail | Improve this Doc View Source HtmlId Declaration [YamlMember(Alias = \"htmlId\")] [JsonProperty(\"htmlId\")] public string HtmlId { get; set; } Property Value Type Description String | Improve this Doc View Source Metadata Declaration [JsonExtensionData] public Dictionary<string, object> Metadata { get; set; } Property Value Type Description Dictionary < String , Object > | Improve this Doc View Source Name Declaration [YamlMember(Alias = \"name\")] [JsonProperty(\"name\")] public string Name { get; set; } Property Value Type Description String | Improve this Doc View Source Uid Declaration [YamlMember(Alias = \"uid\")] [JsonProperty(\"uid\")] public string Uid { get; set; } Property Value Type Description String Implements IOverwriteDocumentViewModel (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.DataContracts.RestApi.RestApiRootItemViewModel.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.RestApi.RestApiRootItemViewModel.html",
    "title": "Class RestApiRootItemViewModel | DocFX website",
    "keywords": "Class RestApiRootItemViewModel Inheritance Object RestApiItemViewModelBase RestApiRootItemViewModel Implements IOverwriteDocumentViewModel Inherited Members RestApiItemViewModelBase.Uid RestApiItemViewModelBase.HtmlId RestApiItemViewModelBase.Name RestApiItemViewModelBase.Conceptual RestApiItemViewModelBase.Description RestApiItemViewModelBase.Remarks RestApiItemViewModelBase.Summary RestApiItemViewModelBase.Documentation RestApiItemViewModelBase.Metadata Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.DataContracts.RestApi Assembly : Microsoft.DocAsCode.DataContracts.RestApi.dll Syntax [Serializable] public class RestApiRootItemViewModel : RestApiItemViewModelBase, IOverwriteDocumentViewModel Properties | Improve this Doc View Source Children Declaration [YamlMember(Alias = \"children\")] [JsonProperty(\"children\")] public List<RestApiChildItemViewModel> Children { get; set; } Property Value Type Description List < RestApiChildItemViewModel > | Improve this Doc View Source Raw The original swagger.json content _ prefix indicates that this metadata is generated Declaration [YamlMember(Alias = \"_raw\")] [JsonProperty(\"_raw\")] public string Raw { get; set; } Property Value Type Description String | Improve this Doc View Source Tags Declaration [YamlMember(Alias = \"tags\")] [JsonProperty(\"tags\")] public List<RestApiTagViewModel> Tags { get; set; } Property Value Type Description List < RestApiTagViewModel > Implements IOverwriteDocumentViewModel (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.DataContracts.RestApi.RestApiResponseViewModel.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.RestApi.RestApiResponseViewModel.html",
    "title": "Class RestApiResponseViewModel | DocFX website",
    "keywords": "Class RestApiResponseViewModel Inheritance Object RestApiResponseViewModel Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.DataContracts.RestApi Assembly : Microsoft.DocAsCode.DataContracts.RestApi.dll Syntax [Serializable] public class RestApiResponseViewModel Properties | Improve this Doc View Source Description Declaration [YamlMember(Alias = \"description\")] [JsonProperty(\"description\")] public string Description { get; set; } Property Value Type Description String | Improve this Doc View Source Examples Declaration [YamlMember(Alias = \"examples\")] [JsonProperty(\"examples\")] public List<RestApiResponseExampleViewModel> Examples { get; set; } Property Value Type Description List < RestApiResponseExampleViewModel > | Improve this Doc View Source HttpStatusCode Declaration [YamlMember(Alias = \"statusCode\")] [JsonProperty(\"statusCode\")] public string HttpStatusCode { get; set; } Property Value Type Description String | Improve this Doc View Source Metadata Declaration [JsonExtensionData] public Dictionary<string, object> Metadata { get; set; } Property Value Type Description Dictionary < String , Object > | Improve this Doc View Source Summary Declaration [YamlMember(Alias = \"summary\")] [JsonProperty(\"summary\")] public string Summary { get; set; } Property Value Type Description String (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.DataContracts.RestApi.RestApiResponseExampleViewModel.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.RestApi.RestApiResponseExampleViewModel.html",
    "title": "Class RestApiResponseExampleViewModel | DocFX website",
    "keywords": "Class RestApiResponseExampleViewModel Inheritance Object RestApiResponseExampleViewModel Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.DataContracts.RestApi Assembly : Microsoft.DocAsCode.DataContracts.RestApi.dll Syntax [Serializable] public class RestApiResponseExampleViewModel Properties | Improve this Doc View Source Content Declaration [YamlMember(Alias = \"content\")] [JsonProperty(\"content\")] public string Content { get; set; } Property Value Type Description String | Improve this Doc View Source MimeType Declaration [YamlMember(Alias = \"mimeType\")] [JsonProperty(\"mimeType\")] public string MimeType { get; set; } Property Value Type Description String (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.DataContracts.RestApi.RestApiParameterViewModel.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.RestApi.RestApiParameterViewModel.html",
    "title": "Class RestApiParameterViewModel | DocFX website",
    "keywords": "Class RestApiParameterViewModel Inheritance Object RestApiParameterViewModel Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.DataContracts.RestApi Assembly : Microsoft.DocAsCode.DataContracts.RestApi.dll Syntax [Serializable] public class RestApiParameterViewModel Properties | Improve this Doc View Source Description Declaration [YamlMember(Alias = \"description\")] [JsonProperty(\"description\")] public string Description { get; set; } Property Value Type Description String | Improve this Doc View Source Metadata Declaration [JsonExtensionData] public Dictionary<string, object> Metadata { get; set; } Property Value Type Description Dictionary < String , Object > | Improve this Doc View Source Name Declaration [YamlMember(Alias = \"name\")] [JsonProperty(\"name\")] public string Name { get; set; } Property Value Type Description String (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.DataContracts.RestApi.RestApiItemViewModelBase.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.RestApi.RestApiItemViewModelBase.html",
    "title": "Class RestApiItemViewModelBase | DocFX website",
    "keywords": "Class RestApiItemViewModelBase Inheritance Object RestApiItemViewModelBase RestApiChildItemViewModel RestApiRootItemViewModel Implements IOverwriteDocumentViewModel Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.DataContracts.RestApi Assembly : Microsoft.DocAsCode.DataContracts.RestApi.dll Syntax [Serializable] public class RestApiItemViewModelBase : IOverwriteDocumentViewModel Properties | Improve this Doc View Source Conceptual Declaration [YamlMember(Alias = \"conceptual\")] [JsonProperty(\"conceptual\")] public string Conceptual { get; set; } Property Value Type Description String | Improve this Doc View Source Description Declaration [YamlMember(Alias = \"description\")] [JsonProperty(\"description\")] public string Description { get; set; } Property Value Type Description String | Improve this Doc View Source Documentation Declaration [YamlMember(Alias = \"documentation\")] [JsonProperty(\"documentation\")] public SourceDetail Documentation { get; set; } Property Value Type Description SourceDetail | Improve this Doc View Source HtmlId Declaration [YamlMember(Alias = \"htmlId\")] [JsonProperty(\"htmlId\")] public string HtmlId { get; set; } Property Value Type Description String | Improve this Doc View Source Metadata Declaration [JsonExtensionData] public Dictionary<string, object> Metadata { get; set; } Property Value Type Description Dictionary < String , Object > | Improve this Doc View Source Name Declaration [YamlMember(Alias = \"name\")] [JsonProperty(\"name\")] public string Name { get; set; } Property Value Type Description String | Improve this Doc View Source Remarks Declaration [YamlMember(Alias = \"remarks\")] [JsonProperty(\"remarks\")] public string Remarks { get; set; } Property Value Type Description String | Improve this Doc View Source Summary Declaration [YamlMember(Alias = \"summary\")] [JsonProperty(\"summary\")] public string Summary { get; set; } Property Value Type Description String | Improve this Doc View Source Uid Declaration [YamlMember(Alias = \"uid\")] [JsonProperty(\"uid\")] public string Uid { get; set; } Property Value Type Description String Implements IOverwriteDocumentViewModel (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.DataContracts.RestApi.RestApiChildItemViewModel.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.RestApi.RestApiChildItemViewModel.html",
    "title": "Class RestApiChildItemViewModel | DocFX website",
    "keywords": "Class RestApiChildItemViewModel Inheritance Object RestApiItemViewModelBase RestApiChildItemViewModel Implements IOverwriteDocumentViewModel Inherited Members RestApiItemViewModelBase.Uid RestApiItemViewModelBase.HtmlId RestApiItemViewModelBase.Name RestApiItemViewModelBase.Conceptual RestApiItemViewModelBase.Description RestApiItemViewModelBase.Remarks RestApiItemViewModelBase.Summary RestApiItemViewModelBase.Documentation RestApiItemViewModelBase.Metadata Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.DataContracts.RestApi Assembly : Microsoft.DocAsCode.DataContracts.RestApi.dll Syntax [Serializable] public class RestApiChildItemViewModel : RestApiItemViewModelBase, IOverwriteDocumentViewModel Properties | Improve this Doc View Source OperationId Declaration [YamlMember(Alias = \"operationId\")] [JsonProperty(\"operationId\")] public string OperationId { get; set; } Property Value Type Description String | Improve this Doc View Source OperationName operation name, for example get, put, post, delete, options, head and patch. Declaration [YamlMember(Alias = \"operation\")] [JsonProperty(\"operation\")] public string OperationName { get; set; } Property Value Type Description String | Improve this Doc View Source Parameters Declaration [YamlMember(Alias = \"parameters\")] [JsonProperty(\"parameters\")] public List<RestApiParameterViewModel> Parameters { get; set; } Property Value Type Description List < RestApiParameterViewModel > | Improve this Doc View Source Path Declaration [YamlMember(Alias = \"path\")] [JsonProperty(\"path\")] public string Path { get; set; } Property Value Type Description String | Improve this Doc View Source Responses Declaration [YamlMember(Alias = \"responses\")] [JsonProperty(\"responses\")] public List<RestApiResponseViewModel> Responses { get; set; } Property Value Type Description List < RestApiResponseViewModel > | Improve this Doc View Source Tags Declaration [YamlMember(Alias = \"tags\")] [JsonProperty(\"tags\")] public List<string> Tags { get; set; } Property Value Type Description List < String > Implements IOverwriteDocumentViewModel (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.DataContracts.ManagedReference.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.ManagedReference.html",
    "title": "Namespace Microsoft.DocAsCode.DataContracts.ManagedReference | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.DataContracts.ManagedReference Classes AdditionalNotes ApiParameter ApiReferenceViewModel ArgumentInfo AttributeInfo ExceptionInfo ItemViewModel LinkInfo NamedArgumentInfo PageViewModel SyntaxDetailViewModel Enums LinkType MemberType SyntaxLanguage (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.DataContracts.ManagedReference.SyntaxLanguage.html": {
    "href": "api/Microsoft.DocAsCode.DataContracts.ManagedReference.SyntaxLanguage.html",
    "title": "Enum SyntaxLanguage | DocFX website",
    "keywords": "Enum SyntaxLanguage Namespace : Microsoft.DocAsCode.DataContracts.ManagedReference Assembly : Microsoft.DocAsCode.DataContracts.ManagedReference.dll Syntax public enum SyntaxLanguage Fields Name Description CPlusPlus CSharp Default FSharp Javascript VB (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.UniversalReference.FillReferenceInformation.html": {
    "href": "api/Microsoft.DocAsCode.Build.UniversalReference.FillReferenceInformation.html",
    "title": "Class FillReferenceInformation | DocFX website",
    "keywords": "Class FillReferenceInformation Inheritance Object BaseDocumentBuildStep FillReferenceInformation Inherited Members BaseDocumentBuildStep.Prebuild(ImmutableList<FileModel>, IHostService) BaseDocumentBuildStep.Build(FileModel, IHostService) Namespace : Microsoft.DocAsCode.Build.UniversalReference Assembly : Microsoft.DocAsCode.Build.UniversalReference.dll Syntax [Export(\"UniversalReferenceDocumentProcessor\", typeof(IDocumentBuildStep))] public class FillReferenceInformation : BaseDocumentBuildStep Properties | Improve this Doc View Source BuildOrder Declaration public override int BuildOrder { get; } Property Value Type Description Int32 Overrides BaseDocumentBuildStep.BuildOrder | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description String Overrides BaseDocumentBuildStep.Name Methods | Improve this Doc View Source Postbuild(ImmutableList<FileModel>, IHostService) Declaration public override void Postbuild(ImmutableList<FileModel> models, IHostService host) Parameters Type Name Description ImmutableList < FileModel > models IHostService host (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.UniversalReference.BuildUniversalReferenceDocument.html": {
    "href": "api/Microsoft.DocAsCode.Build.UniversalReference.BuildUniversalReferenceDocument.html",
    "title": "Class BuildUniversalReferenceDocument | DocFX website",
    "keywords": "Class BuildUniversalReferenceDocument Inheritance Object BaseDocumentBuildStep BuildReferenceDocumentBase BuildUniversalReferenceDocument Inherited Members BuildReferenceDocumentBase.BuildOrder BuildReferenceDocumentBase.Build(FileModel, IHostService) BuildReferenceDocumentBase.BuildOverwrite(IHostService, FileModel) BuildReferenceDocumentBase.BuildArticleCore(IHostService, FileModel, IModelAttributeHandler, HandleModelAttributesContext, Boolean) BaseDocumentBuildStep.Prebuild(ImmutableList<FileModel>, IHostService) BaseDocumentBuildStep.Postbuild(ImmutableList<FileModel>, IHostService) Namespace : Microsoft.DocAsCode.Build.UniversalReference Assembly : Microsoft.DocAsCode.Build.UniversalReference.dll Syntax [Export(\"UniversalReferenceDocumentProcessor\", typeof(IDocumentBuildStep))] public class BuildUniversalReferenceDocument : BuildReferenceDocumentBase Properties | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description String Overrides BaseDocumentBuildStep.Name Methods | Improve this Doc View Source BuildArticle(IHostService, FileModel) Declaration protected override void BuildArticle(IHostService host, FileModel model) Parameters Type Name Description IHostService host FileModel model (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.TableOfContents.html": {
    "href": "api/Microsoft.DocAsCode.Build.TableOfContents.html",
    "title": "Namespace Microsoft.DocAsCode.Build.TableOfContents | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.Build.TableOfContents Classes BuildTocDocument BuildTocDocumentStepBase MarkdownTocReader TocDocumentProcessor TocDocumentProcessorBase Base document processor for table of contents. TocHelper (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.TableOfContents.TocHelper.html": {
    "href": "api/Microsoft.DocAsCode.Build.TableOfContents.TocHelper.html",
    "title": "Class TocHelper | DocFX website",
    "keywords": "Class TocHelper Inheritance Object TocHelper Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.TableOfContents Assembly : Microsoft.DocAsCode.Build.TableOfContents.dll Syntax public static class TocHelper Methods | Improve this Doc View Source LoadSingleToc(String) Declaration public static TocItemViewModel LoadSingleToc(string file) Parameters Type Name Description String file Returns Type Description TocItemViewModel | Improve this Doc View Source LoadYamlToc(String) Declaration public static TocItemViewModel LoadYamlToc(string file) Parameters Type Name Description String file Returns Type Description TocItemViewModel | Improve this Doc View Source Resolve(ImmutableList<FileModel>, IHostService) Declaration public static IEnumerable<FileModel> Resolve(ImmutableList<FileModel> models, IHostService host) Parameters Type Name Description ImmutableList < FileModel > models IHostService host Returns Type Description IEnumerable < FileModel > (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.TableOfContents.TocDocumentProcessorBase.html": {
    "href": "api/Microsoft.DocAsCode.Build.TableOfContents.TocDocumentProcessorBase.html",
    "title": "Class TocDocumentProcessorBase | DocFX website",
    "keywords": "Class TocDocumentProcessorBase Base document processor for table of contents. Inheritance Object DisposableDocumentProcessor TocDocumentProcessorBase TocDocumentProcessor Implements IDisposable Inherited Members DisposableDocumentProcessor.Name DisposableDocumentProcessor.BuildSteps DisposableDocumentProcessor.GetProcessingPriority(FileAndType) DisposableDocumentProcessor.Dispose() Namespace : Microsoft.DocAsCode.Build.TableOfContents Assembly : Microsoft.DocAsCode.Build.TableOfContents.dll Syntax public abstract class TocDocumentProcessorBase : DisposableDocumentProcessor, IDisposable Methods | Improve this Doc View Source Load(FileAndType, ImmutableDictionary<String, Object>) Declaration public override FileModel Load(FileAndType file, ImmutableDictionary<string, object> metadata) Parameters Type Name Description FileAndType file ImmutableDictionary < String , Object > metadata Returns Type Description FileModel | Improve this Doc View Source RegisterTocMapToContext(TocItemViewModel, FileModel, IDocumentBuildContext) Declaration protected abstract void RegisterTocMapToContext(TocItemViewModel item, FileModel model, IDocumentBuildContext context) Parameters Type Name Description TocItemViewModel item FileModel model IDocumentBuildContext context | Improve this Doc View Source RegisterTocToContext(TocItemViewModel, FileModel, IDocumentBuildContext) Declaration protected abstract void RegisterTocToContext(TocItemViewModel item, FileModel model, IDocumentBuildContext context) Parameters Type Name Description TocItemViewModel item FileModel model IDocumentBuildContext context | Improve this Doc View Source Save(FileModel) Declaration public override SaveResult Save(FileModel model) Parameters Type Name Description FileModel model Returns Type Description SaveResult | Improve this Doc View Source UpdateHref(FileModel, IDocumentBuildContext) Declaration public override void UpdateHref(FileModel model, IDocumentBuildContext context) Parameters Type Name Description FileModel model IDocumentBuildContext context Implements System.IDisposable (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.TableOfContents.TocDocumentProcessor.html": {
    "href": "api/Microsoft.DocAsCode.Build.TableOfContents.TocDocumentProcessor.html",
    "title": "Class TocDocumentProcessor | DocFX website",
    "keywords": "Class TocDocumentProcessor Inheritance Object DisposableDocumentProcessor TocDocumentProcessorBase TocDocumentProcessor Implements IDisposable Inherited Members TocDocumentProcessorBase.Load(FileAndType, ImmutableDictionary<String, Object>) TocDocumentProcessorBase.Save(FileModel) TocDocumentProcessorBase.UpdateHref(FileModel, IDocumentBuildContext) DisposableDocumentProcessor.Dispose() Namespace : Microsoft.DocAsCode.Build.TableOfContents Assembly : Microsoft.DocAsCode.Build.TableOfContents.dll Syntax [Export(typeof(IDocumentProcessor))] public class TocDocumentProcessor : TocDocumentProcessorBase, IDisposable Properties | Improve this Doc View Source BuildSteps Declaration [ImportMany(\"TocDocumentProcessor\")] public override IEnumerable<IDocumentBuildStep> BuildSteps { get; set; } Property Value Type Description IEnumerable < IDocumentBuildStep > Overrides DisposableDocumentProcessor.BuildSteps | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description String Overrides DisposableDocumentProcessor.Name Methods | Improve this Doc View Source GetProcessingPriority(FileAndType) Declaration public override ProcessingPriority GetProcessingPriority(FileAndType file) Parameters Type Name Description FileAndType file Returns Type Description ProcessingPriority | Improve this Doc View Source RegisterTocMapToContext(TocItemViewModel, FileModel, IDocumentBuildContext) Declaration protected override void RegisterTocMapToContext(TocItemViewModel item, FileModel model, IDocumentBuildContext context) Parameters Type Name Description TocItemViewModel item FileModel model IDocumentBuildContext context Overrides TocDocumentProcessorBase.RegisterTocMapToContext(TocItemViewModel, FileModel, IDocumentBuildContext) | Improve this Doc View Source RegisterTocToContext(TocItemViewModel, FileModel, IDocumentBuildContext) Declaration protected override void RegisterTocToContext(TocItemViewModel toc, FileModel model, IDocumentBuildContext context) Parameters Type Name Description TocItemViewModel toc FileModel model IDocumentBuildContext context Overrides TocDocumentProcessorBase.RegisterTocToContext(TocItemViewModel, FileModel, IDocumentBuildContext) Implements System.IDisposable (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.TableOfContents.MarkdownTocReader.html": {
    "href": "api/Microsoft.DocAsCode.Build.TableOfContents.MarkdownTocReader.html",
    "title": "Class MarkdownTocReader | DocFX website",
    "keywords": "Class MarkdownTocReader Inheritance Object MarkdownTocReader Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.TableOfContents Assembly : Microsoft.DocAsCode.Build.TableOfContents.dll Syntax public static class MarkdownTocReader Methods | Improve this Doc View Source LoadToc(String, String) Declaration public static TocViewModel LoadToc(string tocContent, string filePath) Parameters Type Name Description String tocContent String filePath Returns Type Description TocViewModel (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.TableOfContents.BuildTocDocumentStepBase.html": {
    "href": "api/Microsoft.DocAsCode.Build.TableOfContents.BuildTocDocumentStepBase.html",
    "title": "Class BuildTocDocumentStepBase | DocFX website",
    "keywords": "Class BuildTocDocumentStepBase Inheritance Object BaseDocumentBuildStep BuildTocDocumentStepBase BuildTocDocument Inherited Members BaseDocumentBuildStep.Name BaseDocumentBuildStep.BuildOrder BaseDocumentBuildStep.Prebuild(ImmutableList<FileModel>, IHostService) BaseDocumentBuildStep.Postbuild(ImmutableList<FileModel>, IHostService) Namespace : Microsoft.DocAsCode.Build.TableOfContents Assembly : Microsoft.DocAsCode.Build.TableOfContents.dll Syntax public abstract class BuildTocDocumentStepBase : BaseDocumentBuildStep Methods | Improve this Doc View Source Build(FileModel, IHostService) Declaration public override void Build(FileModel model, IHostService host) Parameters Type Name Description FileModel model IHostService host | Improve this Doc View Source ReportUidDependency(FileModel, IHostService, TocItemViewModel) Declaration public virtual void ReportUidDependency(FileModel model, IHostService host, TocItemViewModel item) Parameters Type Name Description FileModel model IHostService host TocItemViewModel item (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.TableOfContents.BuildTocDocument.html": {
    "href": "api/Microsoft.DocAsCode.Build.TableOfContents.BuildTocDocument.html",
    "title": "Class BuildTocDocument | DocFX website",
    "keywords": "Class BuildTocDocument Inheritance Object BaseDocumentBuildStep BuildTocDocumentStepBase BuildTocDocument Implements ISupportIncrementalBuildStep Inherited Members BuildTocDocumentStepBase.ReportUidDependency(FileModel, IHostService, TocItemViewModel) BaseDocumentBuildStep.Postbuild(ImmutableList<FileModel>, IHostService) Namespace : Microsoft.DocAsCode.Build.TableOfContents Assembly : Microsoft.DocAsCode.Build.TableOfContents.dll Syntax [Export(\"TocDocumentProcessor\", typeof(IDocumentBuildStep))] public class BuildTocDocument : BuildTocDocumentStepBase, ISupportIncrementalBuildStep Properties | Improve this Doc View Source BuildOrder Declaration public override int BuildOrder { get; } Property Value Type Description Int32 Overrides BaseDocumentBuildStep.BuildOrder | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description String Overrides BaseDocumentBuildStep.Name Methods | Improve this Doc View Source Build(FileModel, IHostService) Declaration public override void Build(FileModel model, IHostService host) Parameters Type Name Description FileModel model IHostService host Overrides BuildTocDocumentStepBase.Build(FileModel, IHostService) | Improve this Doc View Source CanIncrementalBuild(FileAndType) Declaration public bool CanIncrementalBuild(FileAndType fileAndType) Parameters Type Name Description FileAndType fileAndType Returns Type Description Boolean | Improve this Doc View Source GetDependencyTypesToRegister() Declaration public IEnumerable<DependencyType> GetDependencyTypesToRegister() Returns Type Description IEnumerable < DependencyType > | Improve this Doc View Source GetIncrementalContextHash() Declaration public string GetIncrementalContextHash() Returns Type Description String | Improve this Doc View Source Prebuild(ImmutableList<FileModel>, IHostService) Expand the TOC reference Resolve homepage Declaration public override IEnumerable<FileModel> Prebuild(ImmutableList<FileModel> models, IHostService host) Parameters Type Name Description ImmutableList < FileModel > models IHostService host Returns Type Description IEnumerable < FileModel > Implements ISupportIncrementalBuildStep (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.SchemaDriven.html": {
    "href": "api/Microsoft.DocAsCode.Build.SchemaDriven.html",
    "title": "Namespace Microsoft.DocAsCode.Build.SchemaDriven | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.Build.SchemaDriven Classes ApplyOverwriteDocument ApplyOverwriteFragments ApplyTags BaseSchema BuildSchemaBasedDocument ContentAnchorParser DocumentSchema JsonPointer Json Pointer: https://tools.ietf.org/html/rfc6901 OverwriteApplier SchemaDrivenDocumentProcessor SchemaExtensions SchemaFragmentsIterator SchemaValidateService SchemaValidator ValidateFragmentsHandler Interfaces IContentAnchorParser ISchemaFragmentsHandler Enums ContentType MergeType OverwriteModelType ReferenceType (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.SchemaDriven.ValidateFragmentsHandler.html": {
    "href": "api/Microsoft.DocAsCode.Build.SchemaDriven.ValidateFragmentsHandler.html",
    "title": "Class ValidateFragmentsHandler | DocFX website",
    "keywords": "Class ValidateFragmentsHandler Inheritance Object ValidateFragmentsHandler Implements ISchemaFragmentsHandler Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.SchemaDriven Assembly : Microsoft.DocAsCode.Build.SchemaDriven.dll Syntax public class ValidateFragmentsHandler : ISchemaFragmentsHandler Methods | Improve this Doc View Source HandleProperty(String, YamlMappingNode, Dictionary<String, MarkdownFragment>, BaseSchema, String, String) Declaration public void HandleProperty(string propertyKey, YamlMappingNode node, Dictionary<string, MarkdownFragment> fragments, BaseSchema schema, string oPathPrefix, string uid) Parameters Type Name Description String propertyKey YamlDotNet.RepresentationModel.YamlMappingNode node Dictionary < String , MarkdownFragment > fragments BaseSchema schema String oPathPrefix String uid | Improve this Doc View Source HandleUid(String, YamlMappingNode, Dictionary<String, MarkdownFragment>, BaseSchema, String, String) Declaration public void HandleUid(string uidKey, YamlMappingNode node, Dictionary<string, MarkdownFragment> fragments, BaseSchema schema, string oPathPrefix, string uid) Parameters Type Name Description String uidKey YamlDotNet.RepresentationModel.YamlMappingNode node Dictionary < String , MarkdownFragment > fragments BaseSchema schema String oPathPrefix String uid Implements ISchemaFragmentsHandler (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.SchemaDriven.SchemaValidator.html": {
    "href": "api/Microsoft.DocAsCode.Build.SchemaDriven.SchemaValidator.html",
    "title": "Class SchemaValidator | DocFX website",
    "keywords": "Class SchemaValidator Inheritance Object SchemaValidator Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.SchemaDriven Assembly : Microsoft.DocAsCode.Build.SchemaDriven.dll Syntax public class SchemaValidator Constructors | Improve this Doc View Source SchemaValidator(JObject, JSchema) Declaration public SchemaValidator(JObject schemaObj, JSchema schema) Parameters Type Name Description Newtonsoft.Json.Linq.JObject schemaObj Newtonsoft.Json.Schema.JSchema schema Methods | Improve this Doc View Source Validate(Object) Declaration public void Validate(object obj) Parameters Type Name Description Object obj | Improve this Doc View Source ValidateMetaSchema() Declaration public void ValidateMetaSchema() (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.SchemaDriven.SchemaValidateService.html": {
    "href": "api/Microsoft.DocAsCode.Build.SchemaDriven.SchemaValidateService.html",
    "title": "Class SchemaValidateService | DocFX website",
    "keywords": "Class SchemaValidateService Inheritance Object SchemaValidateService Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.SchemaDriven Assembly : Microsoft.DocAsCode.Build.SchemaDriven.dll Syntax public class SchemaValidateService Properties | Improve this Doc View Source Instance Declaration public static SchemaValidateService Instance { get; } Property Value Type Description SchemaValidateService Methods | Improve this Doc View Source RegisterLicense(String) Declaration public static void RegisterLicense(string license) Parameters Type Name Description String license | Improve this Doc View Source Validate(Object, JSchema) Declaration public void Validate(object obj, JSchema schema) Parameters Type Name Description Object obj Newtonsoft.Json.Schema.JSchema schema (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.SchemaDriven.SchemaFragmentsIterator.html": {
    "href": "api/Microsoft.DocAsCode.Build.SchemaDriven.SchemaFragmentsIterator.html",
    "title": "Class SchemaFragmentsIterator | DocFX website",
    "keywords": "Class SchemaFragmentsIterator Inheritance Object SchemaFragmentsIterator Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.SchemaDriven Assembly : Microsoft.DocAsCode.Build.SchemaDriven.dll Syntax public class SchemaFragmentsIterator Constructors | Improve this Doc View Source SchemaFragmentsIterator(ISchemaFragmentsHandler) Declaration public SchemaFragmentsIterator(ISchemaFragmentsHandler handler) Parameters Type Name Description ISchemaFragmentsHandler handler Methods | Improve this Doc View Source Traverse(YamlNode, Dictionary<String, MarkdownFragment>, BaseSchema) Declaration public void Traverse(YamlNode node, Dictionary<string, MarkdownFragment> fragments, BaseSchema schema) Parameters Type Name Description YamlDotNet.RepresentationModel.YamlNode node Dictionary < String , MarkdownFragment > fragments BaseSchema schema (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.SchemaDriven.SchemaExtensions.html": {
    "href": "api/Microsoft.DocAsCode.Build.SchemaDriven.SchemaExtensions.html",
    "title": "Class SchemaExtensions | DocFX website",
    "keywords": "Class SchemaExtensions Inheritance Object SchemaExtensions Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.SchemaDriven Assembly : Microsoft.DocAsCode.Build.SchemaDriven.dll Syntax public static class SchemaExtensions Methods | Improve this Doc View Source IsLegalInFragments(BaseSchema) Declaration public static bool IsLegalInFragments(this BaseSchema schema) Parameters Type Name Description BaseSchema schema Returns Type Description Boolean | Improve this Doc View Source IsRequiredInFragments(BaseSchema) Return if a property is required to appear in markdown fragments Declaration public static bool IsRequiredInFragments(this BaseSchema schema) Parameters Type Name Description BaseSchema schema Returns Type Description Boolean (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.SchemaDriven.SchemaDrivenDocumentProcessor.html": {
    "href": "api/Microsoft.DocAsCode.Build.SchemaDriven.SchemaDrivenDocumentProcessor.html",
    "title": "Class SchemaDrivenDocumentProcessor | DocFX website",
    "keywords": "Class SchemaDrivenDocumentProcessor Inheritance Object DisposableDocumentProcessor SchemaDrivenDocumentProcessor Implements IDisposable ISupportIncrementalDocumentProcessor Inherited Members DisposableDocumentProcessor.Dispose() Namespace : Microsoft.DocAsCode.Build.SchemaDriven Assembly : Microsoft.DocAsCode.Build.SchemaDriven.dll Syntax public class SchemaDrivenDocumentProcessor : DisposableDocumentProcessor, IDisposable, ISupportIncrementalDocumentProcessor Constructors | Improve this Doc View Source SchemaDrivenDocumentProcessor(DocumentSchema, ICompositionContainer, MarkdigMarkdownService, FolderRedirectionManager) Declaration public SchemaDrivenDocumentProcessor(DocumentSchema schema, ICompositionContainer container, MarkdigMarkdownService markdigMarkdownService, FolderRedirectionManager folderRedirectionManager) Parameters Type Name Description DocumentSchema schema ICompositionContainer container MarkdigMarkdownService markdigMarkdownService FolderRedirectionManager folderRedirectionManager Properties | Improve this Doc View Source BuildSteps Declaration public override IEnumerable<IDocumentBuildStep> BuildSteps { get; set; } Property Value Type Description IEnumerable < IDocumentBuildStep > Overrides DisposableDocumentProcessor.BuildSteps | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description String Overrides DisposableDocumentProcessor.Name | Improve this Doc View Source SchemaValidator Declaration public SchemaValidator SchemaValidator { get; } Property Value Type Description SchemaValidator Methods | Improve this Doc View Source DeserializeModel(Stream) Declaration protected virtual object DeserializeModel(Stream stream) Parameters Type Name Description Stream stream Returns Type Description Object | Improve this Doc View Source DeserializeProperties(Stream) Declaration protected virtual IDictionary<string, object> DeserializeProperties(Stream stream) Parameters Type Name Description Stream stream Returns Type Description IDictionary < String , Object > | Improve this Doc View Source GetIncrementalContextHash() Declaration public virtual string GetIncrementalContextHash() Returns Type Description String | Improve this Doc View Source GetProcessingPriority(FileAndType) Declaration public override ProcessingPriority GetProcessingPriority(FileAndType file) Parameters Type Name Description FileAndType file Returns Type Description ProcessingPriority | Improve this Doc View Source GetSerializer() Declaration protected virtual JsonSerializer GetSerializer() Returns Type Description Newtonsoft.Json.JsonSerializer | Improve this Doc View Source Load(FileAndType, ImmutableDictionary<String, Object>) Declaration public override FileModel Load(FileAndType file, ImmutableDictionary<string, object> metadata) Parameters Type Name Description FileAndType file ImmutableDictionary < String , Object > metadata Returns Type Description FileModel | Improve this Doc View Source LoadIntermediateModel(Stream) Declaration public virtual FileModel LoadIntermediateModel(Stream stream) Parameters Type Name Description Stream stream Returns Type Description FileModel | Improve this Doc View Source Save(FileModel) Declaration public override SaveResult Save(FileModel model) Parameters Type Name Description FileModel model Returns Type Description SaveResult | Improve this Doc View Source SaveIntermediateModel(FileModel, Stream) Declaration public virtual void SaveIntermediateModel(FileModel model, Stream stream) Parameters Type Name Description FileModel model Stream stream | Improve this Doc View Source SerializeModel(Object, Stream) Declaration protected virtual void SerializeModel(object model, Stream stream) Parameters Type Name Description Object model Stream stream | Improve this Doc View Source SerializeProperties(IDictionary<String, Object>, Stream) Declaration protected virtual void SerializeProperties(IDictionary<string, object> properties, Stream stream) Parameters Type Name Description IDictionary < String , Object > properties Stream stream | Improve this Doc View Source UpdateHref(FileModel, IDocumentBuildContext) Declaration public override void UpdateHref(FileModel model, IDocumentBuildContext context) Parameters Type Name Description FileModel model IDocumentBuildContext context Implements System.IDisposable ISupportIncrementalDocumentProcessor (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.RestApi.html": {
    "href": "api/Microsoft.DocAsCode.Build.RestApi.html",
    "title": "Namespace Microsoft.DocAsCode.Build.RestApi | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.Build.RestApi Classes ApplyOverwriteDocumentForRestApi BuildRestApiDocument RestApiDocumentProcessor SwaggerModelConverter ValidateRestApiDocumentMetadata (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.RestApi.ValidateRestApiDocumentMetadata.html": {
    "href": "api/Microsoft.DocAsCode.Build.RestApi.ValidateRestApiDocumentMetadata.html",
    "title": "Class ValidateRestApiDocumentMetadata | DocFX website",
    "keywords": "Class ValidateRestApiDocumentMetadata Inheritance Object BaseDocumentBuildStep ValidateRestApiDocumentMetadata Inherited Members BaseDocumentBuildStep.Prebuild(ImmutableList<FileModel>, IHostService) BaseDocumentBuildStep.Postbuild(ImmutableList<FileModel>, IHostService) Namespace : Microsoft.DocAsCode.Build.RestApi Assembly : Microsoft.DocAsCode.Build.RestApi.dll Syntax [Export(\"RestApiDocumentProcessor\", typeof(IDocumentBuildStep))] public class ValidateRestApiDocumentMetadata : BaseDocumentBuildStep Properties | Improve this Doc View Source BuildOrder Declaration public override int BuildOrder { get; } Property Value Type Description Int32 Overrides BaseDocumentBuildStep.BuildOrder | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description String Overrides BaseDocumentBuildStep.Name Methods | Improve this Doc View Source Build(FileModel, IHostService) Declaration public override void Build(FileModel model, IHostService host) Parameters Type Name Description FileModel model IHostService host (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.RestApi.Swagger.ParameterObject.html": {
    "href": "api/Microsoft.DocAsCode.Build.RestApi.Swagger.ParameterObject.html",
    "title": "Class ParameterObject | DocFX website",
    "keywords": "Class ParameterObject Inheritance Object ParameterObject Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.RestApi.Swagger Assembly : Microsoft.DocAsCode.Build.RestApi.dll Syntax [Serializable] public class ParameterObject Properties | Improve this Doc View Source Description Declaration [YamlMember(Alias = \"description\")] [JsonProperty(\"description\")] public string Description { get; set; } Property Value Type Description String | Improve this Doc View Source Metadata Declaration [JsonExtensionData] public Dictionary<string, object> Metadata { get; set; } Property Value Type Description Dictionary < String , Object > | Improve this Doc View Source Name Declaration [YamlMember(Alias = \"name\")] [JsonProperty(\"name\")] public string Name { get; set; } Property Value Type Description String (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.RestApi.Swagger.OperationObject.html": {
    "href": "api/Microsoft.DocAsCode.Build.RestApi.Swagger.OperationObject.html",
    "title": "Class OperationObject | DocFX website",
    "keywords": "Class OperationObject Inheritance Object OperationObject Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.RestApi.Swagger Assembly : Microsoft.DocAsCode.Build.RestApi.dll Syntax [Serializable] public class OperationObject Properties | Improve this Doc View Source Description Declaration [YamlMember(Alias = \"description\")] [JsonProperty(\"description\")] public string Description { get; set; } Property Value Type Description String | Improve this Doc View Source Metadata Declaration [JsonExtensionData] public Dictionary<string, object> Metadata { get; set; } Property Value Type Description Dictionary < String , Object > | Improve this Doc View Source OperationId Unique string used to identify the operation. The id MUST be unique among all operations described in the API. Tools and libraries MAY use the operationId to uniquely identify an operation, therefore, it is recommended to follow common programming naming conventions. Declaration [YamlMember(Alias = \"operationId\")] [JsonProperty(\"operationId\")] public string OperationId { get; set; } Property Value Type Description String | Improve this Doc View Source Parameters Declaration [YamlMember(Alias = \"parameters\")] [JsonProperty(\"parameters\")] public List<ParameterObject> Parameters { get; set; } Property Value Type Description List < ParameterObject > | Improve this Doc View Source Responses Key: default or HttpStatusCode Declaration [YamlMember(Alias = \"responses\")] [JsonProperty(\"responses\")] public Dictionary<string, ResponseObject> Responses { get; set; } Property Value Type Description Dictionary < String , ResponseObject > | Improve this Doc View Source Summary Declaration [YamlMember(Alias = \"summary\")] [JsonProperty(\"summary\")] public string Summary { get; set; } Property Value Type Description String | Improve this Doc View Source Tags Declaration [YamlMember(Alias = \"tags\")] [JsonProperty(\"tags\")] public List<string> Tags { get; set; } Property Value Type Description List < String > (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.RestApi.Swagger.InfoObject.html": {
    "href": "api/Microsoft.DocAsCode.Build.RestApi.Swagger.InfoObject.html",
    "title": "Class InfoObject | DocFX website",
    "keywords": "Class InfoObject Info object Inheritance Object InfoObject Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.RestApi.Swagger Assembly : Microsoft.DocAsCode.Build.RestApi.dll Syntax [Serializable] public class InfoObject Properties | Improve this Doc View Source PatternedObjects Declaration [JsonExtensionData] public Dictionary<string, object> PatternedObjects { get; set; } Property Value Type Description Dictionary < String , Object > | Improve this Doc View Source Title Required. The title of the application. Declaration [YamlMember(Alias = \"title\")] [JsonProperty(\"title\")] public string Title { get; set; } Property Value Type Description String | Improve this Doc View Source Version Required. Provides the version of the application API Declaration [YamlMember(Alias = \"version\")] [JsonProperty(\"version\")] public string Version { get; set; } Property Value Type Description String (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.RestApi.RestApiDocumentProcessor.html": {
    "href": "api/Microsoft.DocAsCode.Build.RestApi.RestApiDocumentProcessor.html",
    "title": "Class RestApiDocumentProcessor | DocFX website",
    "keywords": "Class RestApiDocumentProcessor Inheritance Object DisposableDocumentProcessor ReferenceDocumentProcessorBase RestApiDocumentProcessor Implements IDisposable Inherited Members ReferenceDocumentProcessorBase.Load(FileAndType, ImmutableDictionary<String, Object>) ReferenceDocumentProcessorBase.LoadOverwrite(FileAndType, ImmutableDictionary<String, Object>) DisposableDocumentProcessor.Dispose() DisposableDocumentProcessor.UpdateHref(FileModel, IDocumentBuildContext) Namespace : Microsoft.DocAsCode.Build.RestApi Assembly : Microsoft.DocAsCode.Build.RestApi.dll Syntax [Export(typeof(IDocumentProcessor))] public class RestApiDocumentProcessor : ReferenceDocumentProcessorBase, IDisposable Fields | Improve this Doc View Source SystemKeys Declaration protected static readonly string[] SystemKeys Field Value Type Description String [] Properties | Improve this Doc View Source BuildSteps Declaration [ImportMany(\"RestApiDocumentProcessor\")] public override IEnumerable<IDocumentBuildStep> BuildSteps { get; set; } Property Value Type Description IEnumerable < IDocumentBuildStep > Overrides DisposableDocumentProcessor.BuildSteps | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description String Overrides DisposableDocumentProcessor.Name | Improve this Doc View Source ProcessedDocumentType Declaration protected override string ProcessedDocumentType { get; } Property Value Type Description String Overrides ReferenceDocumentProcessorBase.ProcessedDocumentType Methods | Improve this Doc View Source GetProcessingPriority(FileAndType) Declaration public override ProcessingPriority GetProcessingPriority(FileAndType file) Parameters Type Name Description FileAndType file Returns Type Description ProcessingPriority | Improve this Doc View Source LoadArticle(FileAndType, ImmutableDictionary<String, Object>) Declaration protected override FileModel LoadArticle(FileAndType file, ImmutableDictionary<string, object> metadata) Parameters Type Name Description FileAndType file ImmutableDictionary < String , Object > metadata Returns Type Description FileModel | Improve this Doc View Source Save(FileModel) Declaration public override SaveResult Save(FileModel model) Parameters Type Name Description FileModel model Returns Type Description SaveResult Implements System.IDisposable (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.RestApi.BuildRestApiDocument.html": {
    "href": "api/Microsoft.DocAsCode.Build.RestApi.BuildRestApiDocument.html",
    "title": "Class BuildRestApiDocument | DocFX website",
    "keywords": "Class BuildRestApiDocument Inheritance Object BaseDocumentBuildStep BuildReferenceDocumentBase BuildRestApiDocument Inherited Members BuildReferenceDocumentBase.BuildOrder BuildReferenceDocumentBase.Build(FileModel, IHostService) BuildReferenceDocumentBase.BuildOverwrite(IHostService, FileModel) BuildReferenceDocumentBase.BuildArticleCore(IHostService, FileModel, IModelAttributeHandler, HandleModelAttributesContext, Boolean) BaseDocumentBuildStep.Prebuild(ImmutableList<FileModel>, IHostService) BaseDocumentBuildStep.Postbuild(ImmutableList<FileModel>, IHostService) Namespace : Microsoft.DocAsCode.Build.RestApi Assembly : Microsoft.DocAsCode.Build.RestApi.dll Syntax [Export(\"RestApiDocumentProcessor\", typeof(IDocumentBuildStep))] public class BuildRestApiDocument : BuildReferenceDocumentBase Properties | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description String Overrides BaseDocumentBuildStep.Name Methods | Improve this Doc View Source BuildArticle(IHostService, FileModel) Declaration protected override void BuildArticle(IHostService host, FileModel model) Parameters Type Name Description IHostService host FileModel model | Improve this Doc View Source BuildItem(IHostService, RestApiItemViewModelBase, FileModel, Func<String, Boolean>) Declaration public static RestApiItemViewModelBase BuildItem(IHostService host, RestApiItemViewModelBase item, FileModel model, Func<string, bool> filter = null) Parameters Type Name Description IHostService host RestApiItemViewModelBase item FileModel model Func < String , Boolean > filter Returns Type Description RestApiItemViewModelBase | Improve this Doc View Source BuildTag(IHostService, RestApiTagViewModel, FileModel, Func<String, Boolean>) Declaration public static RestApiTagViewModel BuildTag(IHostService host, RestApiTagViewModel tag, FileModel model, Func<string, bool> filter = null) Parameters Type Name Description IHostService host RestApiTagViewModel tag FileModel model Func < String , Boolean > filter Returns Type Description RestApiTagViewModel (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.RestApi.ApplyOverwriteDocumentForRestApi.html": {
    "href": "api/Microsoft.DocAsCode.Build.RestApi.ApplyOverwriteDocumentForRestApi.html",
    "title": "Class ApplyOverwriteDocumentForRestApi | DocFX website",
    "keywords": "Class ApplyOverwriteDocumentForRestApi Inheritance Object BaseDocumentBuildStep ApplyOverwriteDocument ApplyOverwriteDocumentForRestApi Inherited Members ApplyOverwriteDocument.Postbuild(ImmutableList<FileModel>, IHostService) ApplyOverwriteDocument.ApplyOverwrites(ImmutableList<FileModel>, IHostService) ApplyOverwriteDocument.ApplyOverwrite<T>(IHostService, List<FileModel>, String, List<FileModel>, Func<FileModel, String, IHostService, IEnumerable<T>>, Func<FileModel, String, IHostService, IEnumerable<T>>) ApplyOverwriteDocument.Transform<T>(FileModel, String, IHostService) BaseDocumentBuildStep.Prebuild(ImmutableList<FileModel>, IHostService) BaseDocumentBuildStep.Build(FileModel, IHostService) Namespace : Microsoft.DocAsCode.Build.RestApi Assembly : Microsoft.DocAsCode.Build.RestApi.dll Syntax [Export(\"RestApiDocumentProcessor\", typeof(IDocumentBuildStep))] public class ApplyOverwriteDocumentForRestApi : ApplyOverwriteDocument Properties | Improve this Doc View Source BuildOrder Declaration public override int BuildOrder { get; } Property Value Type Description Int32 Overrides BaseDocumentBuildStep.BuildOrder | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description String Overrides BaseDocumentBuildStep.Name Methods | Improve this Doc View Source ApplyOverwrite(IHostService, List<FileModel>, String, List<FileModel>) Declaration protected override void ApplyOverwrite(IHostService host, List<FileModel> overwrites, string uid, List<FileModel> articles) Parameters Type Name Description IHostService host List < FileModel > overwrites String uid List < FileModel > articles | Improve this Doc View Source GetChildItemsFromOverwriteDocument(FileModel, String, IHostService) Declaration public IEnumerable<RestApiChildItemViewModel> GetChildItemsFromOverwriteDocument(FileModel overwriteModel, string uid, IHostService host) Parameters Type Name Description FileModel overwriteModel String uid IHostService host Returns Type Description IEnumerable < RestApiChildItemViewModel > | Improve this Doc View Source GetChildItemsToOverwrite(FileModel, String, IHostService) Declaration public IEnumerable<RestApiChildItemViewModel> GetChildItemsToOverwrite(FileModel articleModel, string uid, IHostService host) Parameters Type Name Description FileModel articleModel String uid IHostService host Returns Type Description IEnumerable < RestApiChildItemViewModel > | Improve this Doc View Source GetMerger() Declaration protected override IMerger GetMerger() Returns Type Description IMerger Overrides ApplyOverwriteDocument.GetMerger() | Improve this Doc View Source GetRootItemsFromOverwriteDocument(FileModel, String, IHostService) Declaration public IEnumerable<RestApiRootItemViewModel> GetRootItemsFromOverwriteDocument(FileModel overwriteModel, string uid, IHostService host) Parameters Type Name Description FileModel overwriteModel String uid IHostService host Returns Type Description IEnumerable < RestApiRootItemViewModel > | Improve this Doc View Source GetRootItemsToOverwrite(FileModel, String, IHostService) Declaration public IEnumerable<RestApiRootItemViewModel> GetRootItemsToOverwrite(FileModel articleModel, string uid, IHostService host) Parameters Type Name Description FileModel articleModel String uid IHostService host Returns Type Description IEnumerable < RestApiRootItemViewModel > | Improve this Doc View Source GetTagItemsToOverwrite(FileModel, String, IHostService) Declaration public IEnumerable<RestApiTagViewModel> GetTagItemsToOverwrite(FileModel articleModel, string uid, IHostService host) Parameters Type Name Description FileModel articleModel String uid IHostService host Returns Type Description IEnumerable < RestApiTagViewModel > | Improve this Doc View Source GetTagsFromOverwriteDocument(FileModel, String, IHostService) Declaration public IEnumerable<RestApiTagViewModel> GetTagsFromOverwriteDocument(FileModel overwriteModel, string uid, IHostService host) Parameters Type Name Description FileModel overwriteModel String uid IHostService host Returns Type Description IEnumerable < RestApiTagViewModel > (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.ResourceFiles.html": {
    "href": "api/Microsoft.DocAsCode.Build.ResourceFiles.html",
    "title": "Namespace Microsoft.DocAsCode.Build.ResourceFiles | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.Build.ResourceFiles Classes ResourceDocumentProcessor ValidateResourceMetadata Interfaces IResourceFileConfig (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.ResourceFiles.ValidateResourceMetadata.html": {
    "href": "api/Microsoft.DocAsCode.Build.ResourceFiles.ValidateResourceMetadata.html",
    "title": "Class ValidateResourceMetadata | DocFX website",
    "keywords": "Class ValidateResourceMetadata Inheritance Object BaseDocumentBuildStep ValidateResourceMetadata Implements ISupportIncrementalBuildStep Inherited Members BaseDocumentBuildStep.Prebuild(ImmutableList<FileModel>, IHostService) BaseDocumentBuildStep.Postbuild(ImmutableList<FileModel>, IHostService) Namespace : Microsoft.DocAsCode.Build.ResourceFiles Assembly : Microsoft.DocAsCode.Build.ResourceFiles.dll Syntax [Export(\"ResourceDocumentProcessor\", typeof(IDocumentBuildStep))] public class ValidateResourceMetadata : BaseDocumentBuildStep, ISupportIncrementalBuildStep Properties | Improve this Doc View Source BuildOrder Declaration public override int BuildOrder { get; } Property Value Type Description Int32 Overrides BaseDocumentBuildStep.BuildOrder | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description String Overrides BaseDocumentBuildStep.Name Methods | Improve this Doc View Source Build(FileModel, IHostService) Declaration public override void Build(FileModel model, IHostService host) Parameters Type Name Description FileModel model IHostService host | Improve this Doc View Source CanIncrementalBuild(FileAndType) Declaration public bool CanIncrementalBuild(FileAndType fileAndType) Parameters Type Name Description FileAndType fileAndType Returns Type Description Boolean | Improve this Doc View Source GetDependencyTypesToRegister() Declaration public IEnumerable<DependencyType> GetDependencyTypesToRegister() Returns Type Description IEnumerable < DependencyType > | Improve this Doc View Source GetIncrementalContextHash() Declaration public string GetIncrementalContextHash() Returns Type Description String Implements ISupportIncrementalBuildStep (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.OverwriteDocuments.MarkdownProperty.html": {
    "href": "api/Microsoft.DocAsCode.Build.OverwriteDocuments.MarkdownProperty.html",
    "title": "Class MarkdownProperty | DocFX website",
    "keywords": "Class MarkdownProperty Inheritance Object MarkdownProperty Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.OverwriteDocuments Assembly : Microsoft.DocAsCode.Build.OverwriteDocuments.dll Syntax public class MarkdownProperty Properties | Improve this Doc View Source Content Declaration public string Content { get; set; } Property Value Type Description String | Improve this Doc View Source Metadata Declaration public Dictionary<string, object> Metadata { get; set; } Property Value Type Description Dictionary < String , Object > | Improve this Doc View Source OPath Declaration public string OPath { get; set; } Property Value Type Description String | Improve this Doc View Source Touched Declaration public bool Touched { get; set; } Property Value Type Description Boolean Methods | Improve this Doc View Source SerializeTo(StringBuilder) Declaration public void SerializeTo(StringBuilder sb) Parameters Type Name Description StringBuilder sb (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.OverwriteDocuments.MarkdownFragmentsException.html": {
    "href": "api/Microsoft.DocAsCode.Build.OverwriteDocuments.MarkdownFragmentsException.html",
    "title": "Class MarkdownFragmentsException | DocFX website",
    "keywords": "Class MarkdownFragmentsException Inheritance Object Exception MarkdownFragmentsException Implements ISerializable _Exception Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetType() Exception.Message Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.OverwriteDocuments Assembly : Microsoft.DocAsCode.Build.OverwriteDocuments.dll Syntax [Serializable] public class MarkdownFragmentsException : Exception, ISerializable, _Exception Constructors | Improve this Doc View Source MarkdownFragmentsException() Declaration public MarkdownFragmentsException() | Improve this Doc View Source MarkdownFragmentsException(String) Declaration public MarkdownFragmentsException(string message) Parameters Type Name Description String message | Improve this Doc View Source MarkdownFragmentsException(String, Exception) Declaration public MarkdownFragmentsException(string message, Exception inner) Parameters Type Name Description String message Exception inner | Improve this Doc View Source MarkdownFragmentsException(String, Int32) Declaration public MarkdownFragmentsException(string message, int position) Parameters Type Name Description String message Int32 position | Improve this Doc View Source MarkdownFragmentsException(String, Int32, Exception) Declaration public MarkdownFragmentsException(string message, int position, Exception inner) Parameters Type Name Description String message Int32 position Exception inner Properties | Improve this Doc View Source Position Declaration public int Position { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source GetObjectData(SerializationInfo, StreamingContext) Declaration public override void GetObjectData(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context Overrides Exception.GetObjectData(SerializationInfo, StreamingContext) Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.OverwriteDocuments.MarkdownFragmentsCreater.html": {
    "href": "api/Microsoft.DocAsCode.Build.OverwriteDocuments.MarkdownFragmentsCreater.html",
    "title": "Class MarkdownFragmentsCreater | DocFX website",
    "keywords": "Class MarkdownFragmentsCreater Inheritance Object MarkdownFragmentsCreater Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.OverwriteDocuments Assembly : Microsoft.DocAsCode.Build.OverwriteDocuments.dll Syntax public class MarkdownFragmentsCreater Methods | Improve this Doc View Source Create(MarkdownDocument) Declaration public IEnumerable<MarkdownFragmentModel> Create(MarkdownDocument document) Parameters Type Name Description Markdig.Syntax.MarkdownDocument document Returns Type Description IEnumerable < MarkdownFragmentModel > (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.OverwriteDocuments.MarkdownFragmentModel.html": {
    "href": "api/Microsoft.DocAsCode.Build.OverwriteDocuments.MarkdownFragmentModel.html",
    "title": "Class MarkdownFragmentModel | DocFX website",
    "keywords": "Class MarkdownFragmentModel Inheritance Object MarkdownFragmentModel Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.OverwriteDocuments Assembly : Microsoft.DocAsCode.Build.OverwriteDocuments.dll Syntax [Serializable] public class MarkdownFragmentModel Properties | Improve this Doc View Source Contents Declaration public List<MarkdownPropertyModel> Contents { get; set; } Property Value Type Description List < MarkdownPropertyModel > | Improve this Doc View Source Uid Declaration public string Uid { get; set; } Property Value Type Description String | Improve this Doc View Source UidSource Declaration public Block UidSource { get; set; } Property Value Type Description Markdig.Syntax.Block | Improve this Doc View Source YamlCodeBlock Declaration public string YamlCodeBlock { get; set; } Property Value Type Description String | Improve this Doc View Source YamlCodeBlockSource Declaration public Block YamlCodeBlockSource { get; set; } Property Value Type Description Markdig.Syntax.Block Extension Methods OverwriteUtility.ToMarkdownFragment(MarkdownFragmentModel, String) (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.OverwriteDocuments.MarkdownFragment.html": {
    "href": "api/Microsoft.DocAsCode.Build.OverwriteDocuments.MarkdownFragment.html",
    "title": "Class MarkdownFragment | DocFX website",
    "keywords": "Class MarkdownFragment Inheritance Object MarkdownFragment Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.OverwriteDocuments Assembly : Microsoft.DocAsCode.Build.OverwriteDocuments.dll Syntax public class MarkdownFragment Properties | Improve this Doc View Source Metadata Declaration public Dictionary<string, object> Metadata { get; set; } Property Value Type Description Dictionary < String , Object > | Improve this Doc View Source Properties Declaration public Dictionary<string, MarkdownProperty> Properties { get; set; } Property Value Type Description Dictionary < String , MarkdownProperty > | Improve this Doc View Source Touched Declaration public bool Touched { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Uid Declaration public string Uid { get; set; } Property Value Type Description String Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() Extension Methods OverwriteUtility.AddOrUpdateFragmentProperty(MarkdownFragment, String, String, Dictionary<String, Object>) (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.OverwriteDocuments.L2InlineCodeHeadingRule.html": {
    "href": "api/Microsoft.DocAsCode.Build.OverwriteDocuments.L2InlineCodeHeadingRule.html",
    "title": "Class L2InlineCodeHeadingRule | DocFX website",
    "keywords": "Class L2InlineCodeHeadingRule Inheritance Object InlineCodeHeadingRule L2InlineCodeHeadingRule Implements IOverwriteBlockRule Inherited Members InlineCodeHeadingRule.Parse(Block, String) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.OverwriteDocuments Assembly : Microsoft.DocAsCode.Build.OverwriteDocuments.dll Syntax public sealed class L2InlineCodeHeadingRule : InlineCodeHeadingRule, IOverwriteBlockRule Properties | Improve this Doc View Source Level Declaration protected override int Level { get; } Property Value Type Description Int32 Overrides InlineCodeHeadingRule.Level | Improve this Doc View Source NeedCheckLevel Declaration protected override bool NeedCheckLevel { get; } Property Value Type Description Boolean Overrides InlineCodeHeadingRule.NeedCheckLevel | Improve this Doc View Source TokenName Declaration public override string TokenName { get; } Property Value Type Description String Overrides InlineCodeHeadingRule.TokenName Implements IOverwriteBlockRule (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.OverwriteDocuments.L1InlineCodeHeadingRule.html": {
    "href": "api/Microsoft.DocAsCode.Build.OverwriteDocuments.L1InlineCodeHeadingRule.html",
    "title": "Class L1InlineCodeHeadingRule | DocFX website",
    "keywords": "Class L1InlineCodeHeadingRule Inheritance Object InlineCodeHeadingRule L1InlineCodeHeadingRule Implements IOverwriteBlockRule Inherited Members InlineCodeHeadingRule.Parse(Block, String) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.OverwriteDocuments Assembly : Microsoft.DocAsCode.Build.OverwriteDocuments.dll Syntax public sealed class L1InlineCodeHeadingRule : InlineCodeHeadingRule, IOverwriteBlockRule Properties | Improve this Doc View Source Level Declaration protected override int Level { get; } Property Value Type Description Int32 Overrides InlineCodeHeadingRule.Level | Improve this Doc View Source NeedCheckLevel Declaration protected override bool NeedCheckLevel { get; } Property Value Type Description Boolean Overrides InlineCodeHeadingRule.NeedCheckLevel | Improve this Doc View Source TokenName Declaration public override string TokenName { get; } Property Value Type Description String Overrides InlineCodeHeadingRule.TokenName Implements IOverwriteBlockRule (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.OverwriteDocuments.IOverwriteBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.Build.OverwriteDocuments.IOverwriteBlockRule.html",
    "title": "Interface IOverwriteBlockRule | DocFX website",
    "keywords": "Interface IOverwriteBlockRule Namespace : Microsoft.DocAsCode.Build.OverwriteDocuments Assembly : Microsoft.DocAsCode.Build.OverwriteDocuments.dll Syntax public interface IOverwriteBlockRule Properties | Improve this Doc View Source TokenName Declaration string TokenName { get; } Property Value Type Description String Methods | Improve this Doc View Source Parse(Block, out String) Declaration bool Parse(Block block, out string value) Parameters Type Name Description Markdig.Syntax.Block block String value Returns Type Description Boolean (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs.ApiSyntaxBuildOutput.html": {
    "href": "api/Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs.ApiSyntaxBuildOutput.html",
    "title": "Class ApiSyntaxBuildOutput | DocFX website",
    "keywords": "Class ApiSyntaxBuildOutput Inheritance Object ApiSyntaxBuildOutput Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs Assembly : Microsoft.DocAsCode.Build.ManagedReference.dll Syntax [Serializable] public class ApiSyntaxBuildOutput Properties | Improve this Doc View Source Content Declaration [YamlMember(Alias = \"content\")] [JsonProperty(\"content\")] public List<ApiLanguageValuePair> Content { get; set; } Property Value Type Description List < ApiLanguageValuePair > | Improve this Doc View Source Parameters Declaration [YamlMember(Alias = \"parameters\")] [JsonProperty(\"parameters\")] public List<ApiParameterBuildOutput> Parameters { get; set; } Property Value Type Description List < ApiParameterBuildOutput > | Improve this Doc View Source Return Declaration [YamlMember(Alias = \"return\")] [JsonProperty(\"return\")] public ApiParameterBuildOutput Return { get; set; } Property Value Type Description ApiParameterBuildOutput | Improve this Doc View Source TypeParameters Declaration [YamlMember(Alias = \"typeParameters\")] [JsonProperty(\"typeParameters\")] public List<ApiParameterBuildOutput> TypeParameters { get; set; } Property Value Type Description List < ApiParameterBuildOutput > Methods | Improve this Doc View Source Expand(Dictionary<String, ApiReferenceBuildOutput>, String[]) Declaration public void Expand(Dictionary<string, ApiReferenceBuildOutput> references, string[] supportedLanguages) Parameters Type Name Description Dictionary < String , ApiReferenceBuildOutput > references String [] supportedLanguages | Improve this Doc View Source FromModel(SyntaxDetailViewModel, Dictionary<String, ApiReferenceBuildOutput>, String[]) Declaration public static ApiSyntaxBuildOutput FromModel(SyntaxDetailViewModel model, Dictionary<string, ApiReferenceBuildOutput> references, string[] supportedLanguages) Parameters Type Name Description SyntaxDetailViewModel model Dictionary < String , ApiReferenceBuildOutput > references String [] supportedLanguages Returns Type Description ApiSyntaxBuildOutput | Improve this Doc View Source FromModel(SyntaxDetailViewModel, String[]) Declaration public static ApiSyntaxBuildOutput FromModel(SyntaxDetailViewModel model, string[] supportedLanguages) Parameters Type Name Description SyntaxDetailViewModel model String [] supportedLanguages Returns Type Description ApiSyntaxBuildOutput (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs.ApiReferenceBuildOutput.html": {
    "href": "api/Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs.ApiReferenceBuildOutput.html",
    "title": "Class ApiReferenceBuildOutput | DocFX website",
    "keywords": "Class ApiReferenceBuildOutput Inheritance Object ApiReferenceBuildOutput Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs Assembly : Microsoft.DocAsCode.Build.ManagedReference.dll Syntax [Serializable] public class ApiReferenceBuildOutput Properties | Improve this Doc View Source AdditionalNotes Declaration [YamlMember(Alias = \"additionalNotes\")] [JsonProperty(\"additionalNotes\")] public AdditionalNotes AdditionalNotes { get; set; } Property Value Type Description AdditionalNotes | Improve this Doc View Source AssemblyNameList Declaration [YamlMember(Alias = \"assemblies\")] [JsonProperty(\"assemblies\")] public List<string> AssemblyNameList { get; set; } Property Value Type Description List < String > | Improve this Doc View Source Attributes Declaration [YamlMember(Alias = \"attributes\")] [JsonProperty(\"attributes\")] public List<AttributeInfo> Attributes { get; set; } Property Value Type Description List < AttributeInfo > | Improve this Doc View Source Conceptual Declaration [YamlMember(Alias = \"conceptual\")] [JsonProperty(\"conceptual\")] public string Conceptual { get; set; } Property Value Type Description String | Improve this Doc View Source Definition Declaration [YamlMember(Alias = \"definition\")] [JsonProperty(\"definition\")] public string Definition { get; set; } Property Value Type Description String | Improve this Doc View Source Documentation Declaration [YamlMember(Alias = \"documentation\")] [JsonProperty(\"documentation\")] public SourceDetail Documentation { get; set; } Property Value Type Description SourceDetail | Improve this Doc View Source Examples Declaration [YamlMember(Alias = \"example\")] [JsonProperty(\"example\")] public List<string> Examples { get; set; } Property Value Type Description List < String > | Improve this Doc View Source Exceptions Declaration [YamlMember(Alias = \"exceptions\")] [JsonProperty(\"exceptions\")] public List<ApiExceptionInfoBuildOutput> Exceptions { get; set; } Property Value Type Description List < ApiExceptionInfoBuildOutput > | Improve this Doc View Source ExtensionMethods Declaration [YamlMember(Alias = \"extensionMethods\")] [JsonProperty(\"extensionMethods\")] public List<string> ExtensionMethods { get; set; } Property Value Type Description List < String > | Improve this Doc View Source FullName Declaration [YamlMember(Alias = \"fullName\")] [JsonProperty(\"fullName\")] public List<ApiLanguageValuePair> FullName { get; set; } Property Value Type Description List < ApiLanguageValuePair > | Improve this Doc View Source Href Declaration [YamlMember(Alias = \"href\")] [JsonProperty(\"href\")] public string Href { get; set; } Property Value Type Description String | Improve this Doc View Source Implements Declaration [YamlMember(Alias = \"implements\")] [JsonProperty(\"implements\")] public List<ApiNames> Implements { get; set; } Property Value Type Description List < ApiNames > | Improve this Doc View Source Index Declaration [YamlMember(Alias = \"index\")] [JsonProperty(\"index\")] public int? Index { get; set; } Property Value Type Description Nullable < Int32 > | Improve this Doc View Source Inheritance Declaration [YamlMember(Alias = \"inheritance\")] [JsonProperty(\"inheritance\")] public List<ApiReferenceBuildOutput> Inheritance { get; set; } Property Value Type Description List < ApiReferenceBuildOutput > | Improve this Doc View Source InheritedMembers Declaration [YamlMember(Alias = \"inheritedMembers\")] [JsonProperty(\"inheritedMembers\")] public List<string> InheritedMembers { get; set; } Property Value Type Description List < String > | Improve this Doc View Source IsExplicitInterfaceImplementation Declaration [YamlMember(Alias = \"isEii\")] [JsonProperty(\"isEii\")] public bool IsExplicitInterfaceImplementation { get; set; } Property Value Type Description Boolean | Improve this Doc View Source IsExtensionMethod Declaration [YamlMember(Alias = \"isExtensionMethod\")] [JsonProperty(\"isExtensionMethod\")] public bool IsExtensionMethod { get; set; } Property Value Type Description Boolean | Improve this Doc View Source IsExternal Declaration [JsonProperty(\"isExternal\")] [YamlMember(Alias = \"isExternal\")] public bool? IsExternal { get; set; } Property Value Type Description Nullable < Boolean > | Improve this Doc View Source Level Declaration [YamlMember(Alias = \"level\")] [JsonProperty(\"level\")] public int Level { get; } Property Value Type Description Int32 | Improve this Doc View Source Metadata Declaration [JsonIgnore] public Dictionary<string, object> Metadata { get; set; } Property Value Type Description Dictionary < String , Object > | Improve this Doc View Source Modifiers Declaration [JsonIgnore] public SortedList<string, List<string>> Modifiers { get; set; } Property Value Type Description SortedList < String , List < String >> | Improve this Doc View Source Name Declaration [YamlMember(Alias = \"name\")] [JsonProperty(\"name\")] public List<ApiLanguageValuePair> Name { get; set; } Property Value Type Description List < ApiLanguageValuePair > | Improve this Doc View Source NamespaceName Declaration [YamlMember(Alias = \"namespace\")] [JsonProperty(\"namespace\")] public string NamespaceName { get; set; } Property Value Type Description String | Improve this Doc View Source NameWithType Declaration [YamlMember(Alias = \"nameWithType\")] [JsonProperty(\"nameWithType\")] public List<ApiLanguageValuePair> NameWithType { get; set; } Property Value Type Description List < ApiLanguageValuePair > | Improve this Doc View Source Overload Declaration [YamlMember(Alias = \"overload\")] [JsonProperty(\"overload\")] public ApiNames Overload { get; set; } Property Value Type Description ApiNames | Improve this Doc View Source Overridden Declaration [YamlMember(Alias = \"overridden\")] [JsonProperty(\"overridden\")] public ApiNames Overridden { get; set; } Property Value Type Description ApiNames | Improve this Doc View Source Parent Declaration [YamlMember(Alias = \"parent\")] [JsonProperty(\"parent\")] public string Parent { get; set; } Property Value Type Description String | Improve this Doc View Source Remarks Declaration [YamlMember(Alias = \"remarks\")] [JsonProperty(\"remarks\")] public string Remarks { get; set; } Property Value Type Description String | Improve this Doc View Source SeeAlsos Declaration [YamlMember(Alias = \"seealso\")] [JsonProperty(\"seealso\")] public List<ApiLinkInfoBuildOutput> SeeAlsos { get; set; } Property Value Type Description List < ApiLinkInfoBuildOutput > | Improve this Doc View Source Sees Declaration [YamlMember(Alias = \"see\")] [JsonProperty(\"see\")] public List<ApiLinkInfoBuildOutput> Sees { get; set; } Property Value Type Description List < ApiLinkInfoBuildOutput > | Improve this Doc View Source Source Declaration [YamlMember(Alias = \"source\")] [JsonProperty(\"source\")] public SourceDetail Source { get; set; } Property Value Type Description SourceDetail | Improve this Doc View Source Spec Declaration [YamlMember(Alias = \"specName\")] [JsonProperty(\"specName\")] public List<ApiLanguageValuePair> Spec { get; set; } Property Value Type Description List < ApiLanguageValuePair > | Improve this Doc View Source Syntax Declaration [YamlMember(Alias = \"syntax\")] [JsonProperty(\"syntax\")] public ApiSyntaxBuildOutput Syntax { get; set; } Property Value Type Description ApiSyntaxBuildOutput | Improve this Doc View Source Uid Declaration [YamlMember(Alias = \"uid\")] [JsonProperty(\"uid\")] public string Uid { get; set; } Property Value Type Description String Methods | Improve this Doc View Source Expand(Dictionary<String, ApiReferenceBuildOutput>, String[]) Declaration public void Expand(Dictionary<string, ApiReferenceBuildOutput> references, string[] supportedLanguages) Parameters Type Name Description Dictionary < String , ApiReferenceBuildOutput > references String [] supportedLanguages | Improve this Doc View Source FromModel(ReferenceViewModel, String[]) Declaration public static ApiReferenceBuildOutput FromModel(ReferenceViewModel vm, string[] supportedLanguages) Parameters Type Name Description ReferenceViewModel vm String [] supportedLanguages Returns Type Description ApiReferenceBuildOutput | Improve this Doc View Source FromModel(ItemViewModel) Declaration public static ApiReferenceBuildOutput FromModel(ItemViewModel vm) Parameters Type Name Description ItemViewModel vm Returns Type Description ApiReferenceBuildOutput | Improve this Doc View Source FromUid(String) Declaration public static ApiReferenceBuildOutput FromUid(string uid) Parameters Type Name Description String uid Returns Type Description ApiReferenceBuildOutput | Improve this Doc View Source GetSpecNames(String, String[], SortedList<String, List<SpecViewModel>>) Declaration public static List<ApiLanguageValuePair> GetSpecNames(string xref, string[] supportedLanguages, SortedList<string, List<SpecViewModel>> specs = null) Parameters Type Name Description String xref String [] supportedLanguages SortedList < String , List < SpecViewModel >> specs Returns Type Description List < ApiLanguageValuePair > (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs.ApiParameterBuildOutput.html": {
    "href": "api/Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs.ApiParameterBuildOutput.html",
    "title": "Class ApiParameterBuildOutput | DocFX website",
    "keywords": "Class ApiParameterBuildOutput Inheritance Object ApiParameterBuildOutput Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs Assembly : Microsoft.DocAsCode.Build.ManagedReference.dll Syntax [Serializable] public class ApiParameterBuildOutput Properties | Improve this Doc View Source Description Declaration [YamlMember(Alias = \"description\")] [JsonProperty(\"description\")] public string Description { get; set; } Property Value Type Description String | Improve this Doc View Source Name Declaration [YamlMember(Alias = \"id\")] [JsonProperty(\"id\")] public string Name { get; set; } Property Value Type Description String | Improve this Doc View Source Type Declaration [YamlMember(Alias = \"type\")] [JsonProperty(\"type\")] public ApiNames Type { get; set; } Property Value Type Description ApiNames Methods | Improve this Doc View Source Expand(Dictionary<String, ApiReferenceBuildOutput>, String[]) Declaration public void Expand(Dictionary<string, ApiReferenceBuildOutput> references, string[] supportedLanguages) Parameters Type Name Description Dictionary < String , ApiReferenceBuildOutput > references String [] supportedLanguages | Improve this Doc View Source FromModel(ApiParameter) Declaration public static ApiParameterBuildOutput FromModel(ApiParameter model) Parameters Type Name Description ApiParameter model Returns Type Description ApiParameterBuildOutput | Improve this Doc View Source FromModel(ApiParameter, Dictionary<String, ApiReferenceBuildOutput>, String[]) Declaration public static ApiParameterBuildOutput FromModel(ApiParameter model, Dictionary<string, ApiReferenceBuildOutput> references, string[] supportedLanguages) Parameters Type Name Description ApiParameter model Dictionary < String , ApiReferenceBuildOutput > references String [] supportedLanguages Returns Type Description ApiParameterBuildOutput (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs.ApiNames.html": {
    "href": "api/Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs.ApiNames.html",
    "title": "Class ApiNames | DocFX website",
    "keywords": "Class ApiNames Inheritance Object ApiNames Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs Assembly : Microsoft.DocAsCode.Build.ManagedReference.dll Syntax [Serializable] public class ApiNames Properties | Improve this Doc View Source Definition Declaration [YamlMember(Alias = \"definition\")] [JsonProperty(\"definition\")] public string Definition { get; set; } Property Value Type Description String | Improve this Doc View Source FullName Declaration [YamlMember(Alias = \"fullName\")] [JsonProperty(\"fullName\")] public List<ApiLanguageValuePair> FullName { get; set; } Property Value Type Description List < ApiLanguageValuePair > | Improve this Doc View Source Id Declaration [YamlMember(Alias = \"id\")] [JsonProperty(\"id\")] public string Id { get; set; } Property Value Type Description String | Improve this Doc View Source Name Declaration [YamlMember(Alias = \"name\")] [JsonProperty(\"name\")] public List<ApiLanguageValuePair> Name { get; set; } Property Value Type Description List < ApiLanguageValuePair > | Improve this Doc View Source NameWithType Declaration [YamlMember(Alias = \"nameWithType\")] [JsonProperty(\"nameWithType\")] public List<ApiLanguageValuePair> NameWithType { get; set; } Property Value Type Description List < ApiLanguageValuePair > | Improve this Doc View Source Spec Declaration [YamlMember(Alias = \"specName\")] [JsonProperty(\"specName\")] public List<ApiLanguageValuePair> Spec { get; set; } Property Value Type Description List < ApiLanguageValuePair > | Improve this Doc View Source Uid Declaration [YamlMember(Alias = \"uid\")] [JsonProperty(\"uid\")] public string Uid { get; set; } Property Value Type Description String Methods | Improve this Doc View Source FromUid(String) Declaration public static ApiNames FromUid(string uid) Parameters Type Name Description String uid Returns Type Description ApiNames (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs.ApiLinkInfoBuildOutput.html": {
    "href": "api/Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs.ApiLinkInfoBuildOutput.html",
    "title": "Class ApiLinkInfoBuildOutput | DocFX website",
    "keywords": "Class ApiLinkInfoBuildOutput Inheritance Object ApiLinkInfoBuildOutput Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs Assembly : Microsoft.DocAsCode.Build.ManagedReference.dll Syntax [Serializable] public class ApiLinkInfoBuildOutput Properties | Improve this Doc View Source LinkType Declaration [YamlMember(Alias = \"linkType\")] [JsonProperty(\"linkType\")] public LinkType LinkType { get; set; } Property Value Type Description LinkType | Improve this Doc View Source Type Declaration [YamlMember(Alias = \"type\")] [JsonProperty(\"type\")] public ApiNames Type { get; set; } Property Value Type Description ApiNames | Improve this Doc View Source Url Declaration [YamlMember(Alias = \"url\")] [JsonProperty(\"url\")] public string Url { get; set; } Property Value Type Description String Methods | Improve this Doc View Source Expand(Dictionary<String, ApiReferenceBuildOutput>, String[]) Declaration public void Expand(Dictionary<string, ApiReferenceBuildOutput> references, string[] supportedLanguages) Parameters Type Name Description Dictionary < String , ApiReferenceBuildOutput > references String [] supportedLanguages | Improve this Doc View Source FromModel(LinkInfo) Declaration public static ApiLinkInfoBuildOutput FromModel(LinkInfo model) Parameters Type Name Description LinkInfo model Returns Type Description ApiLinkInfoBuildOutput | Improve this Doc View Source FromModel(LinkInfo, Dictionary<String, ApiReferenceBuildOutput>, String[]) Declaration public static ApiLinkInfoBuildOutput FromModel(LinkInfo model, Dictionary<string, ApiReferenceBuildOutput> references, string[] supportedLanguages) Parameters Type Name Description LinkInfo model Dictionary < String , ApiReferenceBuildOutput > references String [] supportedLanguages Returns Type Description ApiLinkInfoBuildOutput (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs.ApiLanguageValuePair.html": {
    "href": "api/Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs.ApiLanguageValuePair.html",
    "title": "Class ApiLanguageValuePair | DocFX website",
    "keywords": "Class ApiLanguageValuePair Inheritance Object ApiLanguageValuePair Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.ManagedReference.BuildOutputs Assembly : Microsoft.DocAsCode.Build.ManagedReference.dll Syntax [Serializable] public class ApiLanguageValuePair Properties | Improve this Doc View Source Language Declaration [YamlMember(Alias = \"lang\")] [JsonProperty(\"lang\")] public string Language { get; set; } Property Value Type Description String | Improve this Doc View Source Value Declaration [YamlMember(Alias = \"value\")] [JsonProperty(\"value\")] public string Value { get; set; } Property Value Type Description String (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.TemplateBundle.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.TemplateBundle.html",
    "title": "Class TemplateBundle | DocFX website",
    "keywords": "Class TemplateBundle Inheritance Object TemplateBundle Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Engine Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public class TemplateBundle Constructors | Improve this Doc View Source TemplateBundle(String, IEnumerable<Template>) Declaration public TemplateBundle(string documentType, IEnumerable<Template> templates) Parameters Type Name Description String documentType IEnumerable < Template > templates Properties | Improve this Doc View Source DocumentType Declaration public string DocumentType { get; } Property Value Type Description String | Improve this Doc View Source Extension Declaration public string Extension { get; } Property Value Type Description String | Improve this Doc View Source Resources Declaration public IEnumerable<TemplateResourceInfo> Resources { get; } Property Value Type Description IEnumerable < TemplateResourceInfo > | Improve this Doc View Source Templates Declaration public IEnumerable<Template> Templates { get; } Property Value Type Description IEnumerable < Template > (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.Template.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.Template.html",
    "title": "Class Template | DocFX website",
    "keywords": "Class Template Inheritance Object Template Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Engine Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public class Template Constructors | Improve this Doc View Source Template(ITemplateRenderer, ITemplatePreprocessor) Declaration public Template(ITemplateRenderer renderer, ITemplatePreprocessor preprocessor) Parameters Type Name Description ITemplateRenderer renderer ITemplatePreprocessor preprocessor Properties | Improve this Doc View Source ContainsGetOptions Declaration public bool ContainsGetOptions { get; } Property Value Type Description Boolean | Improve this Doc View Source ContainsModelTransformation Declaration public bool ContainsModelTransformation { get; } Property Value Type Description Boolean | Improve this Doc View Source Extension Declaration public string Extension { get; } Property Value Type Description String | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description String | Improve this Doc View Source Preprocessor Declaration public ITemplatePreprocessor Preprocessor { get; } Property Value Type Description ITemplatePreprocessor | Improve this Doc View Source Renderer Declaration public ITemplateRenderer Renderer { get; } Property Value Type Description ITemplateRenderer | Improve this Doc View Source Resources Declaration public IEnumerable<TemplateResourceInfo> Resources { get; } Property Value Type Description IEnumerable < TemplateResourceInfo > | Improve this Doc View Source ScriptName Declaration public string ScriptName { get; } Property Value Type Description String | Improve this Doc View Source TemplateType Declaration public TemplateType TemplateType { get; } Property Value Type Description TemplateType | Improve this Doc View Source Type Declaration public string Type { get; } Property Value Type Description String Methods | Improve this Doc View Source GetOptions(Object) exports.getOptions = function (model) { return { bookmarks : { uid1: \"bookmark1\" }, isShared: true } } Declaration public TransformModelOptions GetOptions(object model) Parameters Type Name Description Object model Returns Type Description TransformModelOptions | Improve this Doc View Source Transform(Object) Transform from view model to the final result using template Supported template languages are mustache and liquid Declaration public string Transform(object model) Parameters Type Name Description Object model The input view model Returns Type Description String The output after applying template | Improve this Doc View Source TransformModel(Object) Transform from raw model to view model TODO: refactor to merge model and attrs into one input model Declaration public object TransformModel(object model) Parameters Type Name Description Object model The raw model Returns Type Description Object The view model (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.JsonTokenTreeServiceProvider.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.JsonTokenTreeServiceProvider.html",
    "title": "Class JsonTokenTreeServiceProvider | DocFX website",
    "keywords": "Class JsonTokenTreeServiceProvider Inheritance Object JsonTokenTreeServiceProvider Namespace : Microsoft.DocAsCode.Build.Engine Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax [Export(\"jsonTokenTree\", typeof(IMarkdownServiceProvider))] public class JsonTokenTreeServiceProvider : IMarkdownServiceProvider Methods | Improve this Doc View Source CreateMarkdownService(MarkdownServiceParameters) Declaration public IMarkdownService CreateMarkdownService(MarkdownServiceParameters parameters) Parameters Type Name Description MarkdownServiceParameters parameters Returns Type Description IMarkdownService (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.JintProcessorHelper.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.JintProcessorHelper.html",
    "title": "Class JintProcessorHelper | DocFX website",
    "keywords": "Class JintProcessorHelper Inheritance Object JintProcessorHelper Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Engine Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public static class JintProcessorHelper Methods | Improve this Doc View Source ConvertObjectToJsValue(Object) Declaration public static JsValue ConvertObjectToJsValue(object raw) Parameters Type Name Description Object raw Returns Type Description Jint.Native.JsValue (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.IXRefContainerReader.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.IXRefContainerReader.html",
    "title": "Interface IXRefContainerReader | DocFX website",
    "keywords": "Interface IXRefContainerReader Namespace : Microsoft.DocAsCode.Build.Engine Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public interface IXRefContainerReader Methods | Improve this Doc View Source Find(String) Declaration XRefSpec Find(string uid) Parameters Type Name Description String uid Returns Type Description XRefSpec (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.IXRefContainer.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.IXRefContainer.html",
    "title": "Interface IXRefContainer | DocFX website",
    "keywords": "Interface IXRefContainer Namespace : Microsoft.DocAsCode.Build.Engine Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public interface IXRefContainer Properties | Improve this Doc View Source IsEmbeddedRedirections Declaration bool IsEmbeddedRedirections { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source GetReader() Declaration IXRefContainerReader GetReader() Returns Type Description IXRefContainerReader | Improve this Doc View Source GetRedirections() Declaration IEnumerable<XRefMapRedirection> GetRedirections() Returns Type Description IEnumerable < XRefMapRedirection > (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.ITemplateRenderer.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.ITemplateRenderer.html",
    "title": "Interface ITemplateRenderer | DocFX website",
    "keywords": "Interface ITemplateRenderer Namespace : Microsoft.DocAsCode.Build.Engine Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public interface ITemplateRenderer Properties | Improve this Doc View Source Dependencies Declaration IEnumerable<string> Dependencies { get; } Property Value Type Description IEnumerable < String > | Improve this Doc View Source Name Declaration string Name { get; } Property Value Type Description String | Improve this Doc View Source Path Declaration string Path { get; } Property Value Type Description String | Improve this Doc View Source Raw Declaration string Raw { get; } Property Value Type Description String Methods | Improve this Doc View Source Render(Object) Declaration string Render(object model) Parameters Type Name Description Object model Returns Type Description String (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.ITemplatePreprocessor.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.ITemplatePreprocessor.html",
    "title": "Interface ITemplatePreprocessor | DocFX website",
    "keywords": "Interface ITemplatePreprocessor Namespace : Microsoft.DocAsCode.Build.Engine Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public interface ITemplatePreprocessor Properties | Improve this Doc View Source ContainsGetOptions Declaration bool ContainsGetOptions { get; } Property Value Type Description Boolean | Improve this Doc View Source ContainsModelTransformation Declaration bool ContainsModelTransformation { get; } Property Value Type Description Boolean | Improve this Doc View Source Name Declaration string Name { get; } Property Value Type Description String | Improve this Doc View Source Path Declaration string Path { get; } Property Value Type Description String Methods | Improve this Doc View Source GetOptions(Object) Declaration object GetOptions(object model) Parameters Type Name Description Object model Returns Type Description Object | Improve this Doc View Source TransformModel(Object) Declaration object TransformModel(object model) Parameters Type Name Description Object model Returns Type Description Object (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.Incrementals.BuildOutputItem.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.Incrementals.BuildOutputItem.html",
    "title": "Class BuildOutputItem | DocFX website",
    "keywords": "Class BuildOutputItem Inheritance Object BuildOutputItem Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Engine.Incrementals Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public class BuildOutputItem Properties | Improve this Doc View Source DestinationFile The destination file without extension Declaration public string DestinationFile { get; set; } Property Value Type Description String | Improve this Doc View Source Files The output files, key is extension name (e.g. \".html\"), the value is file path (can be random name). Declaration public Dictionary<string, string> Files { get; set; } Property Value Type Description Dictionary < String , String > | Improve this Doc View Source ManifestMetadata The metadata in manifest for this item. Declaration public Dictionary<string, object> ManifestMetadata { get; set; } Property Value Type Description Dictionary < String , Object > | Improve this Doc View Source SourceFile The source file, always from working folder, i.e. start with \"~/\" Declaration public string SourceFile { get; set; } Property Value Type Description String (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.Incrementals.BuildMessageInfo.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.Incrementals.BuildMessageInfo.html",
    "title": "Class BuildMessageInfo | DocFX website",
    "keywords": "Class BuildMessageInfo Inheritance Object BuildMessageInfo Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Engine.Incrementals Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public sealed class BuildMessageInfo Constructors | Improve this Doc View Source BuildMessageInfo() Declaration public BuildMessageInfo() Methods | Improve this Doc View Source GetListener() Declaration public ILoggerListener GetListener() Returns Type Description ILoggerListener | Improve this Doc View Source GetMessages(String) Get messages logged for file Declaration public IEnumerable<ILogItem> GetMessages(string file) Parameters Type Name Description String file file path from working directory Returns Type Description IEnumerable < ILogItem > logged messages | Improve this Doc View Source Load(TextReader) Declaration public static BuildMessageInfo Load(TextReader reader) Parameters Type Name Description TextReader reader Returns Type Description BuildMessageInfo | Improve this Doc View Source Replay(String) relay messages for file Declaration public void Replay(string file) Parameters Type Name Description String file file path from working directory | Improve this Doc View Source Save(TextWriter) Declaration public void Save(TextWriter writer) Parameters Type Name Description TextWriter writer (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.IHtmlDocumentHandler.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.IHtmlDocumentHandler.html",
    "title": "Interface IHtmlDocumentHandler | DocFX website",
    "keywords": "Interface IHtmlDocumentHandler Namespace : Microsoft.DocAsCode.Build.Engine Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public interface IHtmlDocumentHandler Methods | Improve this Doc View Source Handle(HtmlDocument, ManifestItem, String, String) Declaration void Handle(HtmlDocument document, ManifestItem manifestItem, string inputFile, string outputFile) Parameters Type Name Description HtmlAgilityPack.HtmlDocument document ManifestItem manifestItem String inputFile String outputFile | Improve this Doc View Source LoadContext(HtmlPostProcessContext) Declaration void LoadContext(HtmlPostProcessContext context) Parameters Type Name Description HtmlPostProcessContext context | Improve this Doc View Source PostHandle(Manifest) Declaration Manifest PostHandle(Manifest manifest) Parameters Type Name Description Manifest manifest Returns Type Description Manifest | Improve this Doc View Source PreHandle(Manifest) Declaration Manifest PreHandle(Manifest manifest) Parameters Type Name Description Manifest manifest Returns Type Description Manifest | Improve this Doc View Source SaveContext(HtmlPostProcessContext) Declaration void SaveContext(HtmlPostProcessContext context) Parameters Type Name Description HtmlPostProcessContext context (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.HtmlPostProcessContext.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.HtmlPostProcessContext.html",
    "title": "Class HtmlPostProcessContext | DocFX website",
    "keywords": "Class HtmlPostProcessContext Inheritance Object HtmlPostProcessContext Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Engine Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public class HtmlPostProcessContext Constructors | Improve this Doc View Source HtmlPostProcessContext(IPostProcessorHost) Declaration public HtmlPostProcessContext(IPostProcessorHost host) Parameters Type Name Description IPostProcessorHost host Properties | Improve this Doc View Source PostProcessorHost Declaration [JsonIgnore] public IPostProcessorHost PostProcessorHost { get; } Property Value Type Description IPostProcessorHost Methods | Improve this Doc View Source Load<T>(String, Func<Stream, T>) Declaration public T Load<T>(string contextName, Func<Stream, T> loader) Parameters Type Name Description String contextName Func < Stream , T> loader Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source Save() Declaration public void Save() | Improve this Doc View Source Save(String, Action<Stream>) Declaration public void Save(string contextName, Action<Stream> saver) Parameters Type Name Description String contextName Action < Stream > saver (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.HtmlDocumentHandler.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.HtmlDocumentHandler.html",
    "title": "Class HtmlDocumentHandler | DocFX website",
    "keywords": "Class HtmlDocumentHandler Inheritance Object HtmlDocumentHandler RemoveDebugInfo ValidateBookmark Implements IHtmlDocumentHandler Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Engine Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public abstract class HtmlDocumentHandler : IHtmlDocumentHandler Properties | Improve this Doc View Source Context Declaration public HtmlPostProcessContext Context { get; } Property Value Type Description HtmlPostProcessContext Methods | Improve this Doc View Source Handle(HtmlDocument, ManifestItem, String, String) Declaration public void Handle(HtmlDocument document, ManifestItem manifestItem, string inputFile, string outputFile) Parameters Type Name Description HtmlAgilityPack.HtmlDocument document ManifestItem manifestItem String inputFile String outputFile | Improve this Doc View Source HandleCore(HtmlDocument, ManifestItem, String, String) Declaration protected abstract void HandleCore(HtmlDocument document, ManifestItem manifestItem, string inputFile, string outputFile) Parameters Type Name Description HtmlAgilityPack.HtmlDocument document ManifestItem manifestItem String inputFile String outputFile | Improve this Doc View Source LoadContext(HtmlPostProcessContext) Declaration public virtual void LoadContext(HtmlPostProcessContext context) Parameters Type Name Description HtmlPostProcessContext context | Improve this Doc View Source PostHandle(Manifest) Declaration public Manifest PostHandle(Manifest manifest) Parameters Type Name Description Manifest manifest Returns Type Description Manifest | Improve this Doc View Source PostHandleCore(Manifest) Declaration protected virtual Manifest PostHandleCore(Manifest manifest) Parameters Type Name Description Manifest manifest Returns Type Description Manifest | Improve this Doc View Source PreHandle(Manifest) Declaration public Manifest PreHandle(Manifest manifest) Parameters Type Name Description Manifest manifest Returns Type Description Manifest | Improve this Doc View Source PreHandleCore(Manifest) Declaration protected virtual Manifest PreHandleCore(Manifest manifest) Parameters Type Name Description Manifest manifest Returns Type Description Manifest | Improve this Doc View Source SaveContext(HtmlPostProcessContext) Declaration public virtual void SaveContext(HtmlPostProcessContext context) Parameters Type Name Description HtmlPostProcessContext context | Improve this Doc View Source SetContext(HtmlPostProcessContext) Declaration public void SetContext(HtmlPostProcessContext context) Parameters Type Name Description HtmlPostProcessContext context Implements IHtmlDocumentHandler (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.GfmServiceProvider.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.GfmServiceProvider.html",
    "title": "Class GfmServiceProvider | DocFX website",
    "keywords": "Class GfmServiceProvider Inheritance Object GfmServiceProvider Namespace : Microsoft.DocAsCode.Build.Engine Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax [Export(\"gfm\", typeof(IMarkdownServiceProvider))] public class GfmServiceProvider : IMarkdownServiceProvider Methods | Improve this Doc View Source CreateMarkdownService(MarkdownServiceParameters) Declaration public IMarkdownService CreateMarkdownService(MarkdownServiceParameters parameters) Parameters Type Name Description MarkdownServiceParameters parameters Returns Type Description IMarkdownService (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.FileMetadataItem.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.FileMetadataItem.html",
    "title": "Class FileMetadataItem | DocFX website",
    "keywords": "Class FileMetadataItem Inheritance Object FileMetadataItem Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Engine Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public sealed class FileMetadataItem Constructors | Improve this Doc View Source FileMetadataItem(GlobMatcher, String, Object) Declaration public FileMetadataItem(GlobMatcher glob, string key, object value) Parameters Type Name Description GlobMatcher glob String key Object value Properties | Improve this Doc View Source Glob Declaration public GlobMatcher Glob { get; } Property Value Type Description GlobMatcher | Improve this Doc View Source Key Declaration public string Key { get; } Property Value Type Description String | Improve this Doc View Source Value Declaration public object Value { get; } Property Value Type Description Object (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.FileMetadata.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.FileMetadata.html",
    "title": "Class FileMetadata | DocFX website",
    "keywords": "Class FileMetadata Inheritance Object Dictionary < String , ImmutableArray < FileMetadataItem >> FileMetadata Implements IDictionary < String , ImmutableArray < FileMetadataItem >> ICollection < KeyValuePair < String , ImmutableArray < FileMetadataItem >>> IDictionary ICollection IReadOnlyDictionary < String , ImmutableArray < FileMetadataItem >> IReadOnlyCollection < KeyValuePair < String , ImmutableArray < FileMetadataItem >>> IEnumerable < KeyValuePair < String , ImmutableArray < FileMetadataItem >>> IEnumerable ISerializable IDeserializationCallback Inherited Members Dictionary<String, ImmutableArray<FileMetadataItem>>.Add(String, ImmutableArray<FileMetadataItem>) System.Collections.Generic.Dictionary<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>>.Add(System.Collections.Generic.KeyValuePair<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>) System.Collections.Generic.Dictionary<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>>.Contains(System.Collections.Generic.KeyValuePair<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>) System.Collections.Generic.Dictionary<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>>.Remove(System.Collections.Generic.KeyValuePair<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>) Dictionary<String, ImmutableArray<FileMetadataItem>>.Clear() Dictionary<String, ImmutableArray<FileMetadataItem>>.ContainsKey(String) Dictionary<String, ImmutableArray<FileMetadataItem>>.ContainsValue(ImmutableArray<FileMetadataItem>) Dictionary<String, ImmutableArray<FileMetadataItem>>.GetEnumerator() System.Collections.Generic.Dictionary<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>>.GetEnumerator() Dictionary<String, ImmutableArray<FileMetadataItem>>.GetObjectData(SerializationInfo, StreamingContext) Dictionary<String, ImmutableArray<FileMetadataItem>>.OnDeserialization(Object) Dictionary<String, ImmutableArray<FileMetadataItem>>.Remove(String) Dictionary<String, ImmutableArray<FileMetadataItem>>.TryGetValue(String, ImmutableArray<FileMetadataItem>) System.Collections.Generic.Dictionary<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>>.CopyTo(System.Collections.Generic.KeyValuePair<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>[], System.Int32) Dictionary<String, ImmutableArray<FileMetadataItem>>.ICollection.CopyTo(Array, Int32) Dictionary<String, ImmutableArray<FileMetadataItem>>.IEnumerable.GetEnumerator() System.Collections.Generic.Dictionary<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>.System.Collections.IDictionary.get_Item(System.Object) System.Collections.Generic.Dictionary<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>.System.Collections.IDictionary.set_Item(System.Object, System.Object) Dictionary<String, ImmutableArray<FileMetadataItem>>.IDictionary.Add(Object, Object) Dictionary<String, ImmutableArray<FileMetadataItem>>.IDictionary.Contains(Object) Dictionary<String, ImmutableArray<FileMetadataItem>>.IDictionary.GetEnumerator() Dictionary<String, ImmutableArray<FileMetadataItem>>.IDictionary.Remove(Object) Dictionary<String, ImmutableArray<FileMetadataItem>>.Comparer Dictionary<String, ImmutableArray<FileMetadataItem>>.Count Dictionary<String, ImmutableArray<FileMetadataItem>>.Keys System.Collections.Generic.Dictionary<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>.System.Collections.Generic.IDictionary<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>.Keys System.Collections.Generic.Dictionary<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>.System.Collections.Generic.IReadOnlyDictionary<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>.Keys Dictionary<String, ImmutableArray<FileMetadataItem>>.Values System.Collections.Generic.Dictionary<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>.System.Collections.Generic.IDictionary<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>.Values System.Collections.Generic.Dictionary<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>.System.Collections.Generic.IReadOnlyDictionary<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>.Values Dictionary<String, ImmutableArray<FileMetadataItem>>.Item[String] System.Collections.Generic.Dictionary<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.Collections.Immutable.ImmutableArray<Microsoft.DocAsCode.Build.Engine.FileMetadataItem>>>.IsReadOnly Dictionary<String, ImmutableArray<FileMetadataItem>>.ICollection.IsSynchronized Dictionary<String, ImmutableArray<FileMetadataItem>>.ICollection.SyncRoot Dictionary<String, ImmutableArray<FileMetadataItem>>.IDictionary.IsFixedSize Dictionary<String, ImmutableArray<FileMetadataItem>>.IDictionary.IsReadOnly Dictionary<String, ImmutableArray<FileMetadataItem>>.IDictionary.Keys Dictionary<String, ImmutableArray<FileMetadataItem>>.IDictionary.Values Dictionary<String, ImmutableArray<FileMetadataItem>>.IDictionary.Item[Object] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Engine Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public sealed class FileMetadata : Dictionary<string, ImmutableArray<FileMetadataItem>>, IDictionary<string, ImmutableArray<FileMetadataItem>>, ICollection<KeyValuePair<string, ImmutableArray<FileMetadataItem>>>, IDictionary, ICollection, IReadOnlyDictionary<string, ImmutableArray<FileMetadataItem>>, IReadOnlyCollection<KeyValuePair<string, ImmutableArray<FileMetadataItem>>>, IEnumerable<KeyValuePair<string, ImmutableArray<FileMetadataItem>>>, IEnumerable, ISerializable, IDeserializationCallback Constructors | Improve this Doc View Source FileMetadata(String) Declaration public FileMetadata(string baseDir) Parameters Type Name Description String baseDir | Improve this Doc View Source FileMetadata(String, IDictionary<String, ImmutableArray<FileMetadataItem>>) Declaration public FileMetadata(string baseDir, IDictionary<string, ImmutableArray<FileMetadataItem>> dictionary) Parameters Type Name Description String baseDir IDictionary < String , ImmutableArray < FileMetadataItem >> dictionary Properties | Improve this Doc View Source BaseDir Declaration public string BaseDir { get; } Property Value Type Description String Implements System.Collections.Generic.IDictionary<TKey,TValue> System.Collections.Generic.ICollection<T> System.Collections.IDictionary System.Collections.ICollection System.Collections.Generic.IReadOnlyDictionary<TKey,TValue> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.Runtime.Serialization.ISerializable System.Runtime.Serialization.IDeserializationCallback (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.ConceptualDocuments.ValidateConceptualDocumentMetadata.html": {
    "href": "api/Microsoft.DocAsCode.Build.ConceptualDocuments.ValidateConceptualDocumentMetadata.html",
    "title": "Class ValidateConceptualDocumentMetadata | DocFX website",
    "keywords": "Class ValidateConceptualDocumentMetadata Inheritance Object BaseDocumentBuildStep ValidateConceptualDocumentMetadata Implements ISupportIncrementalBuildStep Inherited Members BaseDocumentBuildStep.Prebuild(ImmutableList<FileModel>, IHostService) BaseDocumentBuildStep.Postbuild(ImmutableList<FileModel>, IHostService) Namespace : Microsoft.DocAsCode.Build.ConceptualDocuments Assembly : Microsoft.DocAsCode.Build.ConceptualDocuments.dll Syntax [Export(\"ConceptualDocumentProcessor\", typeof(IDocumentBuildStep))] public class ValidateConceptualDocumentMetadata : BaseDocumentBuildStep, ISupportIncrementalBuildStep Properties | Improve this Doc View Source BuildOrder Declaration public override int BuildOrder { get; } Property Value Type Description Int32 Overrides BaseDocumentBuildStep.BuildOrder | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description String Overrides BaseDocumentBuildStep.Name Methods | Improve this Doc View Source Build(FileModel, IHostService) Declaration public override void Build(FileModel model, IHostService host) Parameters Type Name Description FileModel model IHostService host | Improve this Doc View Source CanIncrementalBuild(FileAndType) Declaration public bool CanIncrementalBuild(FileAndType fileAndType) Parameters Type Name Description FileAndType fileAndType Returns Type Description Boolean | Improve this Doc View Source GetDependencyTypesToRegister() Declaration public IEnumerable<DependencyType> GetDependencyTypesToRegister() Returns Type Description IEnumerable < DependencyType > | Improve this Doc View Source GetIncrementalContextHash() Declaration public string GetIncrementalContextHash() Returns Type Description String Implements ISupportIncrementalBuildStep (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.TemplatePageLoader.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.TemplatePageLoader.html",
    "title": "Class TemplatePageLoader | DocFX website",
    "keywords": "Class TemplatePageLoader Inheritance Object TemplatePageLoader Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Engine Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public class TemplatePageLoader Constructors | Improve this Doc View Source TemplatePageLoader(IResourceFileReader, DocumentBuildContext, Int32) Declaration public TemplatePageLoader(IResourceFileReader reader, DocumentBuildContext context, int maxParallelism) Parameters Type Name Description IResourceFileReader reader DocumentBuildContext context Int32 maxParallelism Methods | Improve this Doc View Source LoadAll() Declaration public IEnumerable<Template> LoadAll() Returns Type Description IEnumerable < Template > (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.TemplateModelTransformer.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.TemplateModelTransformer.html",
    "title": "Class TemplateModelTransformer | DocFX website",
    "keywords": "Class TemplateModelTransformer Inheritance Object TemplateModelTransformer Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Engine Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public class TemplateModelTransformer Constructors | Improve this Doc View Source TemplateModelTransformer(DocumentBuildContext, TemplateCollection, ApplyTemplateSettings, IDictionary<String, Object>) Declaration public TemplateModelTransformer(DocumentBuildContext context, TemplateCollection templateCollection, ApplyTemplateSettings settings, IDictionary<string, object> globals) Parameters Type Name Description DocumentBuildContext context TemplateCollection templateCollection ApplyTemplateSettings settings IDictionary < String , Object > globals (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.TemplateManager.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.TemplateManager.html",
    "title": "Class TemplateManager | DocFX website",
    "keywords": "Class TemplateManager Inheritance Object TemplateManager Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Engine Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax [Serializable] public class TemplateManager Constructors | Improve this Doc View Source TemplateManager(Assembly, String, List<String>, List<String>, String) Declaration public TemplateManager(Assembly assembly, string rootNamespace, List<string> templates, List<string> themes, string baseDirectory) Parameters Type Name Description Assembly assembly String rootNamespace List < String > templates List < String > themes String baseDirectory Methods | Improve this Doc View Source CreateTemplateResource() Declaration public CompositeResourceReader CreateTemplateResource() Returns Type Description CompositeResourceReader | Improve this Doc View Source GetTemplateProcessor(DocumentBuildContext, Int32) Declaration public TemplateProcessor GetTemplateProcessor(DocumentBuildContext context, int maxParallelism) Parameters Type Name Description DocumentBuildContext context Int32 maxParallelism Returns Type Description TemplateProcessor | Improve this Doc View Source GetTemplatesHash() Declaration public string GetTemplatesHash() Returns Type Description String | Improve this Doc View Source ProcessTheme(String, Boolean) Declaration public void ProcessTheme(string outputDirectory, bool overwrite) Parameters Type Name Description String outputDirectory Boolean overwrite | Improve this Doc View Source TryExportTemplateFiles(String, String) Declaration public bool TryExportTemplateFiles(string outputDirectory, string regexFilter = null) Parameters Type Name Description String outputDirectory String regexFilter Returns Type Description Boolean (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.TemplateJintPreprocessor.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.TemplateJintPreprocessor.html",
    "title": "Class TemplateJintPreprocessor | DocFX website",
    "keywords": "Class TemplateJintPreprocessor Inheritance Object TemplateJintPreprocessor Implements ITemplatePreprocessor Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Engine Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public class TemplateJintPreprocessor : ITemplatePreprocessor Constructors | Improve this Doc View Source TemplateJintPreprocessor(IResourceFileReader, ResourceInfo, DocumentBuildContext, String) Declaration public TemplateJintPreprocessor(IResourceFileReader resourceCollection, ResourceInfo scriptResource, DocumentBuildContext context, string name = null) Parameters Type Name Description IResourceFileReader resourceCollection ResourceInfo scriptResource DocumentBuildContext context String name Fields | Improve this Doc View Source Extension Declaration public const string Extension = \".js\" Field Value Type Description String | Improve this Doc View Source StandaloneExtension Declaration public const string StandaloneExtension = \".tmpl.js\" Field Value Type Description String Properties | Improve this Doc View Source ContainsGetOptions Declaration public bool ContainsGetOptions { get; } Property Value Type Description Boolean | Improve this Doc View Source ContainsModelTransformation Declaration public bool ContainsModelTransformation { get; } Property Value Type Description Boolean | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description String | Improve this Doc View Source Path Declaration public string Path { get; } Property Value Type Description String Methods | Improve this Doc View Source GetOptions(Object) Declaration public object GetOptions(object model) Parameters Type Name Description Object model Returns Type Description Object | Improve this Doc View Source TransformModel(Object) Declaration public object TransformModel(object model) Parameters Type Name Description Object model Returns Type Description Object Implements ITemplatePreprocessor (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.TemplateCollection.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.TemplateCollection.html",
    "title": "Class TemplateCollection | DocFX website",
    "keywords": "Class TemplateCollection Inheritance Object Dictionary < String , TemplateBundle > TemplateCollection Implements IDictionary < String , TemplateBundle > ICollection < KeyValuePair < String , TemplateBundle >> IDictionary ICollection IReadOnlyDictionary < String , TemplateBundle > IReadOnlyCollection < KeyValuePair < String , TemplateBundle >> IEnumerable < KeyValuePair < String , TemplateBundle >> IEnumerable ISerializable IDeserializationCallback Inherited Members Dictionary<String, TemplateBundle>.Add(String, TemplateBundle) System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>>.Add(System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>) System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>>.Contains(System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>) System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>>.Remove(System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>) Dictionary<String, TemplateBundle>.Clear() Dictionary<String, TemplateBundle>.ContainsKey(String) Dictionary<String, TemplateBundle>.ContainsValue(TemplateBundle) Dictionary<String, TemplateBundle>.GetEnumerator() System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>>.GetEnumerator() Dictionary<String, TemplateBundle>.GetObjectData(SerializationInfo, StreamingContext) Dictionary<String, TemplateBundle>.OnDeserialization(Object) Dictionary<String, TemplateBundle>.Remove(String) Dictionary<String, TemplateBundle>.TryGetValue(String, TemplateBundle) System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>>.CopyTo(System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>[], System.Int32) Dictionary<String, TemplateBundle>.ICollection.CopyTo(Array, Int32) Dictionary<String, TemplateBundle>.IEnumerable.GetEnumerator() System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>.System.Collections.IDictionary.get_Item(System.Object) System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>.System.Collections.IDictionary.set_Item(System.Object, System.Object) Dictionary<String, TemplateBundle>.IDictionary.Add(Object, Object) Dictionary<String, TemplateBundle>.IDictionary.Contains(Object) Dictionary<String, TemplateBundle>.IDictionary.GetEnumerator() Dictionary<String, TemplateBundle>.IDictionary.Remove(Object) Dictionary<String, TemplateBundle>.Comparer Dictionary<String, TemplateBundle>.Count Dictionary<String, TemplateBundle>.Keys System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>.System.Collections.Generic.IDictionary<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>.Keys System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>.System.Collections.Generic.IReadOnlyDictionary<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>.Keys Dictionary<String, TemplateBundle>.Values System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>.System.Collections.Generic.IDictionary<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>.Values System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>.System.Collections.Generic.IReadOnlyDictionary<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>.Values Dictionary<String, TemplateBundle>.Item[String] System.Collections.Generic.Dictionary<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, Microsoft.DocAsCode.Build.Engine.TemplateBundle>>.IsReadOnly Dictionary<String, TemplateBundle>.ICollection.IsSynchronized Dictionary<String, TemplateBundle>.ICollection.SyncRoot Dictionary<String, TemplateBundle>.IDictionary.IsFixedSize Dictionary<String, TemplateBundle>.IDictionary.IsReadOnly Dictionary<String, TemplateBundle>.IDictionary.Keys Dictionary<String, TemplateBundle>.IDictionary.Values Dictionary<String, TemplateBundle>.IDictionary.Item[Object] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Engine Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public class TemplateCollection : Dictionary<string, TemplateBundle>, IDictionary<string, TemplateBundle>, ICollection<KeyValuePair<string, TemplateBundle>>, IDictionary, ICollection, IReadOnlyDictionary<string, TemplateBundle>, IReadOnlyCollection<KeyValuePair<string, TemplateBundle>>, IEnumerable<KeyValuePair<string, TemplateBundle>>, IEnumerable, ISerializable, IDeserializationCallback Constructors | Improve this Doc View Source TemplateCollection(ResourceFileReader, DocumentBuildContext, Int32) Declaration public TemplateCollection(ResourceFileReader provider, DocumentBuildContext context, int maxParallelism) Parameters Type Name Description ResourceFileReader provider DocumentBuildContext context Int32 maxParallelism Properties | Improve this Doc View Source Item[String] Declaration public TemplateBundle this[string key] { get; set; } Parameters Type Name Description String key Property Value Type Description TemplateBundle | Improve this Doc View Source MaxParallelism Declaration public int MaxParallelism { get; } Property Value Type Description Int32 | Improve this Doc View Source Reader Declaration public IResourceFileReader Reader { get; } Property Value Type Description IResourceFileReader Implements System.Collections.Generic.IDictionary<TKey,TValue> System.Collections.Generic.ICollection<T> System.Collections.IDictionary System.Collections.ICollection System.Collections.Generic.IReadOnlyDictionary<TKey,TValue> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.Runtime.Serialization.ISerializable System.Runtime.Serialization.IDeserializationCallback (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.IResourceFileReader.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.IResourceFileReader.html",
    "title": "Interface IResourceFileReader | DocFX website",
    "keywords": "Interface IResourceFileReader Namespace : Microsoft.DocAsCode.Build.Engine Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public interface IResourceFileReader Properties | Improve this Doc View Source Names Declaration IEnumerable<string> Names { get; } Property Value Type Description IEnumerable < String > Methods | Improve this Doc View Source GetResource(String) Declaration string GetResource(string name) Parameters Type Name Description String name Returns Type Description String | Improve this Doc View Source GetResources(String) Declaration IEnumerable<ResourceInfo> GetResources(string selector) Parameters Type Name Description String selector Returns Type Description IEnumerable < ResourceInfo > | Improve this Doc View Source GetResourceStream(String) Declaration Stream GetResourceStream(string name) Parameters Type Name Description String name Returns Type Description Stream | Improve this Doc View Source GetResourceStreams(String) Declaration IEnumerable<KeyValuePair<string, Stream>> GetResourceStreams(string selector) Parameters Type Name Description String selector Returns Type Description IEnumerable < KeyValuePair < String , Stream >> (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.InvalidPreprocessorException.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.InvalidPreprocessorException.html",
    "title": "Class InvalidPreprocessorException | DocFX website",
    "keywords": "Class InvalidPreprocessorException Inheritance Object InvalidPreprocessorException Namespace : Microsoft.DocAsCode.Build.Engine Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax [Serializable] public class InvalidPreprocessorException : DocfxException Constructors | Improve this Doc View Source InvalidPreprocessorException() Declaration public InvalidPreprocessorException() | Improve this Doc View Source InvalidPreprocessorException(SerializationInfo, StreamingContext) Declaration protected InvalidPreprocessorException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context | Improve this Doc View Source InvalidPreprocessorException(String) Declaration public InvalidPreprocessorException(string message) Parameters Type Name Description String message | Improve this Doc View Source InvalidPreprocessorException(String, Exception) Declaration public InvalidPreprocessorException(string message, Exception innerException) Parameters Type Name Description String message Exception innerException (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.Incrementals.PostProcessInfo.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.Incrementals.PostProcessInfo.html",
    "title": "Class PostProcessInfo | DocFX website",
    "keywords": "Class PostProcessInfo Inheritance Object PostProcessInfo Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Engine.Incrementals Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public class PostProcessInfo Fields | Improve this Doc View Source FileName Declaration public const string FileName = \"postprocess.info\" Field Value Type Description String Properties | Improve this Doc View Source ManifestItems Deserialized manifest items. Declaration [JsonIgnore] public List<ManifestItem> ManifestItems { get; set; } Property Value Type Description List < ManifestItem > | Improve this Doc View Source ManifestItemsFile The file link for the manifest items file. Declaration public string ManifestItemsFile { get; set; } Property Value Type Description String | Improve this Doc View Source MessageInfo Deserialized log message information. Declaration [JsonIgnore] public BuildMessageInfo MessageInfo { get; } Property Value Type Description BuildMessageInfo | Improve this Doc View Source MessageInfoFile The file link for the log message file. Declaration public string MessageInfoFile { get; set; } Property Value Type Description String | Improve this Doc View Source PostProcessorInfos The post processor information. Declaration public List<PostProcessorInfo> PostProcessorInfos { get; set; } Property Value Type Description List < PostProcessorInfo > | Improve this Doc View Source PostProcessOutputs Deserialized post process outputs. Declaration [JsonIgnore] public PostProcessOutputs PostProcessOutputs { get; } Property Value Type Description PostProcessOutputs | Improve this Doc View Source PostProcessOutputsFile The file link for post process outputs (type is PostProcessOutputs ). Declaration public string PostProcessOutputsFile { get; set; } Property Value Type Description String Methods | Improve this Doc View Source SaveManifest(String) Declaration public void SaveManifest(string baseDir) Parameters Type Name Description String baseDir (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.Incrementals.Outputs.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.Incrementals.Outputs.html",
    "title": "Namespace Microsoft.DocAsCode.Build.Engine.Incrementals.Outputs | DocFX website",
    "keywords": "Namespace Microsoft.DocAsCode.Build.Engine.Incrementals.Outputs Classes ExpandedDependencyItem ExpandedDependencyMap (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.Incrementals.Outputs.ExpandedDependencyMap.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.Incrementals.Outputs.ExpandedDependencyMap.html",
    "title": "Class ExpandedDependencyMap | DocFX website",
    "keywords": "Class ExpandedDependencyMap Inheritance Object ExpandedDependencyMap Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Engine.Incrementals.Outputs Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public class ExpandedDependencyMap Properties | Improve this Doc View Source Empty Declaration public static ExpandedDependencyMap Empty { get; } Property Value Type Description ExpandedDependencyMap Methods | Improve this Doc View Source ConstructFromDependencyGraph(DependencyGraph) Declaration public static ExpandedDependencyMap ConstructFromDependencyGraph(DependencyGraph dg) Parameters Type Name Description DependencyGraph dg Returns Type Description ExpandedDependencyMap | Improve this Doc View Source GetDependencyFrom(String) Declaration public IEnumerable<ExpandedDependencyItem> GetDependencyFrom(string from) Parameters Type Name Description String from Returns Type Description IEnumerable < ExpandedDependencyItem > | Improve this Doc View Source GetDependencyTo(String) Declaration public IEnumerable<ExpandedDependencyItem> GetDependencyTo(string to) Parameters Type Name Description String to Returns Type Description IEnumerable < ExpandedDependencyItem > | Improve this Doc View Source Load(TextReader) Declaration public static ExpandedDependencyMap Load(TextReader reader) Parameters Type Name Description TextReader reader Returns Type Description ExpandedDependencyMap | Improve this Doc View Source Save(TextWriter) Declaration public void Save(TextWriter writer) Parameters Type Name Description TextWriter writer (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.Incrementals.Outputs.ExpandedDependencyItem.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.Incrementals.Outputs.ExpandedDependencyItem.html",
    "title": "Class ExpandedDependencyItem | DocFX website",
    "keywords": "Class ExpandedDependencyItem Inheritance Object ExpandedDependencyItem Implements IEquatable < ExpandedDependencyItem > Inherited Members Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Engine.Incrementals.Outputs Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public sealed class ExpandedDependencyItem : IEquatable<ExpandedDependencyItem> Constructors | Improve this Doc View Source ExpandedDependencyItem(String, String, String) Declaration [JsonConstructor] public ExpandedDependencyItem(string from, string to, string type) Parameters Type Name Description String from String to String type Properties | Improve this Doc View Source From Declaration [JsonProperty(\"from\")] public string From { get; } Property Value Type Description String | Improve this Doc View Source To Declaration [JsonProperty(\"to\")] public string To { get; } Property Value Type Description String | Improve this Doc View Source Type Declaration [JsonProperty(\"type\")] public string Type { get; } Property Value Type Description String Methods | Improve this Doc View Source ChangeFrom(String) Declaration public ExpandedDependencyItem ChangeFrom(string from) Parameters Type Name Description String from Returns Type Description ExpandedDependencyItem | Improve this Doc View Source ChangeTo(String) Declaration public ExpandedDependencyItem ChangeTo(string to) Parameters Type Name Description String to Returns Type Description ExpandedDependencyItem | Improve this Doc View Source ChangeType(String) Declaration public ExpandedDependencyItem ChangeType(string type) Parameters Type Name Description String type Returns Type Description ExpandedDependencyItem | Improve this Doc View Source ConvertFrom(DependencyItem) Declaration public static ExpandedDependencyItem ConvertFrom(DependencyItem item) Parameters Type Name Description DependencyItem item Returns Type Description ExpandedDependencyItem | Improve this Doc View Source Equals(ExpandedDependencyItem) Declaration public bool Equals(ExpandedDependencyItem dp) Parameters Type Name Description ExpandedDependencyItem dp Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides Object.Equals(Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides Object.GetHashCode() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() Implements System.IEquatable<T> (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.Incrementals.OSPlatformSensitiveDictionary-1.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.Incrementals.OSPlatformSensitiveDictionary-1.html",
    "title": "Class OSPlatformSensitiveDictionary<V> | DocFX website",
    "keywords": "Class OSPlatformSensitiveDictionary<V> Inheritance Object Dictionary < String , V> OSPlatformSensitiveDictionary<V> BuildOutputs FileMapItem PostProcessOutputs Implements IDictionary < String , V> ICollection < KeyValuePair < String , V>> IDictionary ICollection IReadOnlyDictionary < String , V> IReadOnlyCollection < KeyValuePair < String , V>> IEnumerable < KeyValuePair < String , V>> IEnumerable ISerializable IDeserializationCallback Inherited Members Dictionary<String, V>.Add(String, V) System.Collections.Generic.Dictionary<System.String, V>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, V>>.Add(System.Collections.Generic.KeyValuePair<System.String, V>) System.Collections.Generic.Dictionary<System.String, V>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, V>>.Contains(System.Collections.Generic.KeyValuePair<System.String, V>) System.Collections.Generic.Dictionary<System.String, V>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, V>>.Remove(System.Collections.Generic.KeyValuePair<System.String, V>) Dictionary<String, V>.Clear() Dictionary<String, V>.ContainsKey(String) Dictionary<String, V>.ContainsValue(V) Dictionary<String, V>.GetEnumerator() System.Collections.Generic.Dictionary<System.String, V>.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, V>>.GetEnumerator() Dictionary<String, V>.GetObjectData(SerializationInfo, StreamingContext) Dictionary<String, V>.OnDeserialization(Object) Dictionary<String, V>.Remove(String) Dictionary<String, V>.TryGetValue(String, V) System.Collections.Generic.Dictionary<System.String, V>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, V>>.CopyTo(System.Collections.Generic.KeyValuePair<System.String, V>[], System.Int32) Dictionary<String, V>.ICollection.CopyTo(Array, Int32) Dictionary<String, V>.IEnumerable.GetEnumerator() System.Collections.Generic.Dictionary<System.String, V>.System.Collections.IDictionary.get_Item(System.Object) System.Collections.Generic.Dictionary<System.String, V>.System.Collections.IDictionary.set_Item(System.Object, System.Object) Dictionary<String, V>.IDictionary.Add(Object, Object) Dictionary<String, V>.IDictionary.Contains(Object) Dictionary<String, V>.IDictionary.GetEnumerator() Dictionary<String, V>.IDictionary.Remove(Object) Dictionary<String, V>.Comparer Dictionary<String, V>.Count Dictionary<String, V>.Keys System.Collections.Generic.Dictionary<System.String, V>.System.Collections.Generic.IDictionary<System.String, V>.Keys System.Collections.Generic.Dictionary<System.String, V>.System.Collections.Generic.IReadOnlyDictionary<System.String, V>.Keys Dictionary<String, V>.Values System.Collections.Generic.Dictionary<System.String, V>.System.Collections.Generic.IDictionary<System.String, V>.Values System.Collections.Generic.Dictionary<System.String, V>.System.Collections.Generic.IReadOnlyDictionary<System.String, V>.Values Dictionary<String, V>.Item[String] System.Collections.Generic.Dictionary<System.String, V>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, V>>.IsReadOnly Dictionary<String, V>.ICollection.IsSynchronized Dictionary<String, V>.ICollection.SyncRoot Dictionary<String, V>.IDictionary.IsFixedSize Dictionary<String, V>.IDictionary.IsReadOnly Dictionary<String, V>.IDictionary.Keys Dictionary<String, V>.IDictionary.Values Dictionary<String, V>.IDictionary.Item[Object] Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Engine.Incrementals Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public class OSPlatformSensitiveDictionary<V> : Dictionary<string, V>, IDictionary<string, V>, ICollection<KeyValuePair<string, V>>, IDictionary, ICollection, IReadOnlyDictionary<string, V>, IReadOnlyCollection<KeyValuePair<string, V>>, IEnumerable<KeyValuePair<string, V>>, IEnumerable, ISerializable, IDeserializationCallback Type Parameters Name Description V Constructors | Improve this Doc View Source OSPlatformSensitiveDictionary() Declaration public OSPlatformSensitiveDictionary() | Improve this Doc View Source OSPlatformSensitiveDictionary(IDictionary<String, V>) Declaration public OSPlatformSensitiveDictionary(IDictionary<string, V> dictionary) Parameters Type Name Description IDictionary < String , V> dictionary | Improve this Doc View Source OSPlatformSensitiveDictionary(IEnumerable<KeyValuePair<String, V>>) Declaration public OSPlatformSensitiveDictionary(IEnumerable<KeyValuePair<string, V>> list) Parameters Type Name Description IEnumerable < KeyValuePair < String , V>> list Implements System.Collections.Generic.IDictionary<TKey,TValue> System.Collections.Generic.ICollection<T> System.Collections.IDictionary System.Collections.ICollection System.Collections.Generic.IReadOnlyDictionary<TKey,TValue> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.Runtime.Serialization.ISerializable System.Runtime.Serialization.IDeserializationCallback (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.Incrementals.ModelManifestItem.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.Incrementals.ModelManifestItem.html",
    "title": "Class ModelManifestItem | DocFX website",
    "keywords": "Class ModelManifestItem Inheritance Object ModelManifestItem Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Engine.Incrementals Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public class ModelManifestItem Properties | Improve this Doc View Source FilePath Declaration public string FilePath { get; set; } Property Value Type Description String | Improve this Doc View Source SourceFilePath Declaration public string SourceFilePath { get; set; } Property Value Type Description String (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.Incrementals.ModelManifest.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.Incrementals.ModelManifest.html",
    "title": "Class ModelManifest | DocFX website",
    "keywords": "Class ModelManifest Inheritance Object ModelManifest Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Engine.Incrementals Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public class ModelManifest Properties | Improve this Doc View Source Models Declaration public OSPlatformSensitiveDictionary<List<ModelManifestItem>> Models { get; } Property Value Type Description OSPlatformSensitiveDictionary < List < ModelManifestItem >> (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.Incrementals.IncrementalUtility.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.Incrementals.IncrementalUtility.html",
    "title": "Class IncrementalUtility | DocFX website",
    "keywords": "Class IncrementalUtility Inheritance Object IncrementalUtility Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Engine.Incrementals Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public static class IncrementalUtility Methods | Improve this Doc View Source CreateRandomDirectory(String) Declaration public static string CreateRandomDirectory(string baseDir) Parameters Type Name Description String baseDir Returns Type Description String | Improve this Doc View Source CreateRandomFileName(String) Declaration public static string CreateRandomFileName(string baseDir) Parameters Type Name Description String baseDir Returns Type Description String | Improve this Doc View Source CreateRandomFileStream(String) Declaration public static FileStream CreateRandomFileStream(string baseDir) Parameters Type Name Description String baseDir Returns Type Description FileStream | Improve this Doc View Source GetDependencyKey(FileAndType) Declaration public static string GetDependencyKey(FileAndType file) Parameters Type Name Description FileAndType file Returns Type Description String | Improve this Doc View Source GetRandomEntry(String) Declaration public static string GetRandomEntry(string baseDir) Parameters Type Name Description String baseDir Returns Type Description String | Improve this Doc View Source LoadBuildMessage(String) Declaration public static BuildMessage LoadBuildMessage(string file) Parameters Type Name Description String file Returns Type Description BuildMessage | Improve this Doc View Source LoadDependency(String) Declaration public static DependencyGraph LoadDependency(string dependencyFile) Parameters Type Name Description String dependencyFile Returns Type Description DependencyGraph | Improve this Doc View Source LoadIntermediateFile<T>(String) Declaration public static T LoadIntermediateFile<T>(string fileName) Parameters Type Name Description String fileName Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source RetryIO(Action) Declaration public static void RetryIO(Action action) Parameters Type Name Description Action action | Improve this Doc View Source RetryIO<T>(Func<T>) Declaration public static T RetryIO<T>(Func<T> func) Parameters Type Name Description Func <T> func Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source SaveBuildMessage(String, BuildMessage) Declaration public static void SaveBuildMessage(string fileName, BuildMessage bm) Parameters Type Name Description String fileName BuildMessage bm | Improve this Doc View Source SaveDependency(String, DependencyGraph) Declaration public static void SaveDependency(string fileName, DependencyGraph dg) Parameters Type Name Description String fileName DependencyGraph dg | Improve this Doc View Source SaveIntermediateFile<T>(String, T) Declaration public static void SaveIntermediateFile<T>(string fileName, T content) Parameters Type Name Description String fileName T content Type Parameters Name Description T (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Engine.Incrementals.ChangeList.html": {
    "href": "api/Microsoft.DocAsCode.Build.Engine.Incrementals.ChangeList.html",
    "title": "Class ChangeList | DocFX website",
    "keywords": "Class ChangeList Inheritance Object ChangeList Implements IEnumerable < ChangeItem > IEnumerable Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Engine.Incrementals Assembly : Microsoft.DocAsCode.Build.Engine.dll Syntax public sealed class ChangeList : IEnumerable<ChangeItem>, IEnumerable Properties | Improve this Doc View Source From Declaration public string From { get; set; } Property Value Type Description String | Improve this Doc View Source To Declaration public string To { get; set; } Property Value Type Description String Methods | Improve this Doc View Source Add(String, ChangeKind) Declaration public void Add(string filePath, ChangeKind kind) Parameters Type Name Description String filePath ChangeKind kind | Improve this Doc View Source GetCreatedFiles() Declaration public IEnumerable<string> GetCreatedFiles() Returns Type Description IEnumerable < String > | Improve this Doc View Source GetDeletedFiles() Declaration public IEnumerable<string> GetDeletedFiles() Returns Type Description IEnumerable < String > | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator<ChangeItem> GetEnumerator() Returns Type Description IEnumerator < ChangeItem > | Improve this Doc View Source GetUpdatedFiles() Declaration public IEnumerable<string> GetUpdatedFiles() Returns Type Description IEnumerable < String > | Improve this Doc View Source Parse(String, String) Declaration public static ChangeList Parse(string tsvFile, string baseDir) Parameters Type Name Description String tsvFile String baseDir Returns Type Description ChangeList Explicit Interface Implementations | Improve this Doc View Source IEnumerable.GetEnumerator() Declaration IEnumerator IEnumerable.GetEnumerator() Returns Type Description IEnumerator Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Common.YamlHtmlPart.html": {
    "href": "api/Microsoft.DocAsCode.Build.Common.YamlHtmlPart.html",
    "title": "Class YamlHtmlPart | DocFX website",
    "keywords": "Class YamlHtmlPart Inheritance Object YamlHtmlPart Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Common Assembly : Microsoft.DocAsCode.Build.Common.dll Syntax public class YamlHtmlPart Properties | Improve this Doc View Source Conceptual Declaration public string Conceptual { get; set; } Property Value Type Description String | Improve this Doc View Source EndLine Declaration public int EndLine { get; set; } Property Value Type Description Int32 | Improve this Doc View Source FileLinkSources Declaration public ImmutableDictionary<string, ImmutableList<LinkSourceInfo>> FileLinkSources { get; set; } Property Value Type Description ImmutableDictionary < String , ImmutableList < LinkSourceInfo >> | Improve this Doc View Source Html Declaration public string Html { get; set; } Property Value Type Description String | Improve this Doc View Source LinkToFiles Declaration public ImmutableArray<string> LinkToFiles { get; set; } Property Value Type Description ImmutableArray < String > | Improve this Doc View Source LinkToUids Declaration public ImmutableHashSet<string> LinkToUids { get; set; } Property Value Type Description ImmutableHashSet < String > | Improve this Doc View Source Origin Declaration public MarkupResult Origin { get; set; } Property Value Type Description MarkupResult | Improve this Doc View Source SourceFile Declaration public string SourceFile { get; set; } Property Value Type Description String | Improve this Doc View Source StartLine Declaration public int StartLine { get; set; } Property Value Type Description Int32 | Improve this Doc View Source UidLinkSources Declaration public ImmutableDictionary<string, ImmutableList<LinkSourceInfo>> UidLinkSources { get; set; } Property Value Type Description ImmutableDictionary < String , ImmutableList < LinkSourceInfo >> | Improve this Doc View Source YamlHeader Declaration public ImmutableDictionary<string, object> YamlHeader { get; set; } Property Value Type Description ImmutableDictionary < String , Object > Methods | Improve this Doc View Source SplitYamlHtml(MarkupResult) Declaration public static IList<YamlHtmlPart> SplitYamlHtml(MarkupResult origin) Parameters Type Name Description MarkupResult origin Returns Type Description IList < YamlHtmlPart > | Improve this Doc View Source ToMarkupResult() Declaration public MarkupResult ToMarkupResult() Returns Type Description MarkupResult (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Common.UrlContentHandler.html": {
    "href": "api/Microsoft.DocAsCode.Build.Common.UrlContentHandler.html",
    "title": "Class UrlContentHandler | DocFX website",
    "keywords": "Class UrlContentHandler Inheritance Object UrlContentHandler Implements IModelAttributeHandler Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Common Assembly : Microsoft.DocAsCode.Build.Common.dll Syntax public class UrlContentHandler : IModelAttributeHandler Methods | Improve this Doc View Source Handle(Object, HandleModelAttributesContext) Declaration public object Handle(object obj, HandleModelAttributesContext context) Parameters Type Name Description Object obj HandleModelAttributesContext context Returns Type Description Object Implements IModelAttributeHandler (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Common.UniqueIdentityReferenceHandler.html": {
    "href": "api/Microsoft.DocAsCode.Build.Common.UniqueIdentityReferenceHandler.html",
    "title": "Class UniqueIdentityReferenceHandler | DocFX website",
    "keywords": "Class UniqueIdentityReferenceHandler Inheritance Object UniqueIdentityReferenceHandler Implements IModelAttributeHandler Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Common Assembly : Microsoft.DocAsCode.Build.Common.dll Syntax public class UniqueIdentityReferenceHandler : IModelAttributeHandler Methods | Improve this Doc View Source Handle(Object, HandleModelAttributesContext) Declaration public object Handle(object obj, HandleModelAttributesContext context) Parameters Type Name Description Object obj HandleModelAttributesContext context Returns Type Description Object Implements IModelAttributeHandler (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Common.ReflectionHelper.html": {
    "href": "api/Microsoft.DocAsCode.Build.Common.ReflectionHelper.html",
    "title": "Class ReflectionHelper | DocFX website",
    "keywords": "Class ReflectionHelper Inheritance Object ReflectionHelper Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Common Assembly : Microsoft.DocAsCode.Build.Common.dll Syntax public static class ReflectionHelper Methods | Improve this Doc View Source CreateInstance(Type, Type[], Type[], Object[]) Declaration public static object CreateInstance(Type type, Type[] typeArguments, Type[] argumentTypes, object[] arguments) Parameters Type Name Description Type type Type [] typeArguments Type [] argumentTypes Object [] arguments Returns Type Description Object | Improve this Doc View Source GetGenericType(Type, Type) Declaration public static Type GetGenericType(Type type, Type genericTypeDefinition) Parameters Type Name Description Type type Type genericTypeDefinition Returns Type Description Type | Improve this Doc View Source GetGettableProperties(Type) Declaration public static List<PropertyInfo> GetGettableProperties(Type type) Parameters Type Name Description Type type Returns Type Description List < PropertyInfo > | Improve this Doc View Source GetPropertyValue(Object, PropertyInfo) Declaration public static object GetPropertyValue(object instance, PropertyInfo prop) Parameters Type Name Description Object instance PropertyInfo prop Returns Type Description Object | Improve this Doc View Source GetPublicProperties(Type) Declaration public static IEnumerable<PropertyInfo> GetPublicProperties(Type type) Parameters Type Name Description Type type Returns Type Description IEnumerable < PropertyInfo > | Improve this Doc View Source GetSettableProperties(Type) Declaration public static List<PropertyInfo> GetSettableProperties(Type type) Parameters Type Name Description Type type Returns Type Description List < PropertyInfo > | Improve this Doc View Source ImplementsGenericDefintion(Type, Type) Declaration public static bool ImplementsGenericDefintion(Type type, Type genericTypeDefinition) Parameters Type Name Description Type type Type genericTypeDefinition Returns Type Description Boolean | Improve this Doc View Source IsDictionaryType(Type) Declaration public static bool IsDictionaryType(Type type) Parameters Type Name Description Type type Returns Type Description Boolean | Improve this Doc View Source IsGenericType(Type, Type) Declaration public static bool IsGenericType(Type type, Type genericTypeDefinition) Parameters Type Name Description Type type Type genericTypeDefinition Returns Type Description Boolean | Improve this Doc View Source IsIEnumerableType(Type) Declaration public static bool IsIEnumerableType(Type t) Parameters Type Name Description Type t Returns Type Description Boolean | Improve this Doc View Source SetPropertyValue(Object, PropertyInfo, Object) Declaration public static void SetPropertyValue(object instance, PropertyInfo prop, object value) Parameters Type Name Description Object instance PropertyInfo prop Object value | Improve this Doc View Source TryGetGenericType(Type, Type, out Type) Declaration public static bool TryGetGenericType(Type type, Type genericTypeDefinition, out Type genericType) Parameters Type Name Description Type type Type genericTypeDefinition Type genericType Returns Type Description Boolean (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Common.ReferenceDocumentProcessorBase.html": {
    "href": "api/Microsoft.DocAsCode.Build.Common.ReferenceDocumentProcessorBase.html",
    "title": "Class ReferenceDocumentProcessorBase | DocFX website",
    "keywords": "Class ReferenceDocumentProcessorBase Base document processor for reference. Inheritance Object DisposableDocumentProcessor ReferenceDocumentProcessorBase ManagedReferenceDocumentProcessor RestApiDocumentProcessor UniversalReferenceDocumentProcessor Implements IDisposable Inherited Members DisposableDocumentProcessor.Name DisposableDocumentProcessor.BuildSteps DisposableDocumentProcessor.GetProcessingPriority(FileAndType) DisposableDocumentProcessor.Dispose() DisposableDocumentProcessor.UpdateHref(FileModel, IDocumentBuildContext) Namespace : Microsoft.DocAsCode.Build.Common Assembly : Microsoft.DocAsCode.Build.Common.dll Syntax public abstract class ReferenceDocumentProcessorBase : DisposableDocumentProcessor, IDisposable Properties | Improve this Doc View Source ProcessedDocumentType Declaration protected abstract string ProcessedDocumentType { get; } Property Value Type Description String Methods | Improve this Doc View Source Load(FileAndType, ImmutableDictionary<String, Object>) Declaration public override FileModel Load(FileAndType file, ImmutableDictionary<string, object> metadata) Parameters Type Name Description FileAndType file ImmutableDictionary < String , Object > metadata Returns Type Description FileModel Overrides DisposableDocumentProcessor.Load(FileAndType, ImmutableDictionary<String, Object>) | Improve this Doc View Source LoadArticle(FileAndType, ImmutableDictionary<String, Object>) Declaration protected abstract FileModel LoadArticle(FileAndType file, ImmutableDictionary<string, object> metadata) Parameters Type Name Description FileAndType file ImmutableDictionary < String , Object > metadata Returns Type Description FileModel | Improve this Doc View Source LoadOverwrite(FileAndType, ImmutableDictionary<String, Object>) Declaration protected virtual FileModel LoadOverwrite(FileAndType file, ImmutableDictionary<string, object> metadata) Parameters Type Name Description FileAndType file ImmutableDictionary < String , Object > metadata Returns Type Description FileModel | Improve this Doc View Source Save(FileModel) Declaration public override SaveResult Save(FileModel model) Parameters Type Name Description FileModel model Returns Type Description SaveResult Overrides DisposableDocumentProcessor.Save(FileModel) Implements System.IDisposable (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Common.HandleGenericItemsHelper.HandleIDictionaryItems-2.html": {
    "href": "api/Microsoft.DocAsCode.Build.Common.HandleGenericItemsHelper.HandleIDictionaryItems-2.html",
    "title": "Class HandleGenericItemsHelper.HandleIDictionaryItems<TKey, TValue> | DocFX website",
    "keywords": "Class HandleGenericItemsHelper.HandleIDictionaryItems<TKey, TValue> Inheritance Object HandleGenericItemsHelper.HandleIDictionaryItems<TKey, TValue> Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Common Assembly : Microsoft.DocAsCode.Build.Common.dll Syntax public sealed class HandleIDictionaryItems<TKey, TValue> : HandleGenericItemsHelper.IHandleItems Type Parameters Name Description TKey TValue Constructors | Improve this Doc View Source HandleIDictionaryItems(IDictionary<TKey, TValue>) Declaration public HandleIDictionaryItems(IDictionary<TKey, TValue> dict) Parameters Type Name Description IDictionary <TKey, TValue> dict Methods | Improve this Doc View Source Handle(Func<Object, Object>) Declaration public void Handle(Func<object, object> handler) Parameters Type Name Description Func < Object , Object > handler (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Common.HandleGenericItemsHelper.EnumerateIReadonlyDictionaryItems-2.html": {
    "href": "api/Microsoft.DocAsCode.Build.Common.HandleGenericItemsHelper.EnumerateIReadonlyDictionaryItems-2.html",
    "title": "Class HandleGenericItemsHelper.EnumerateIReadonlyDictionaryItems<TKey, TValue> | DocFX website",
    "keywords": "Class HandleGenericItemsHelper.EnumerateIReadonlyDictionaryItems<TKey, TValue> Inheritance Object HandleGenericItemsHelper.EnumerateIReadonlyDictionaryItems<TKey, TValue> Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Common Assembly : Microsoft.DocAsCode.Build.Common.dll Syntax public sealed class EnumerateIReadonlyDictionaryItems<TKey, TValue> : HandleGenericItemsHelper.IHandleItems Type Parameters Name Description TKey TValue Constructors | Improve this Doc View Source EnumerateIReadonlyDictionaryItems(IReadOnlyDictionary<TKey, TValue>) Declaration public EnumerateIReadonlyDictionaryItems(IReadOnlyDictionary<TKey, TValue> dict) Parameters Type Name Description IReadOnlyDictionary <TKey, TValue> dict Methods | Improve this Doc View Source Handle(Func<Object, Object>) Declaration public void Handle(Func<object, object> enumerate) Parameters Type Name Description Func < Object , Object > enumerate (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Common.HandleGenericItemsHelper.EnumerateIEnumerableItems-1.html": {
    "href": "api/Microsoft.DocAsCode.Build.Common.HandleGenericItemsHelper.EnumerateIEnumerableItems-1.html",
    "title": "Class HandleGenericItemsHelper.EnumerateIEnumerableItems<TValue> | DocFX website",
    "keywords": "Class HandleGenericItemsHelper.EnumerateIEnumerableItems<TValue> Inheritance Object HandleGenericItemsHelper.EnumerateIEnumerableItems<TValue> Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Common Assembly : Microsoft.DocAsCode.Build.Common.dll Syntax public sealed class EnumerateIEnumerableItems<TValue> : HandleGenericItemsHelper.IHandleItems Type Parameters Name Description TValue Constructors | Improve this Doc View Source EnumerateIEnumerableItems(IEnumerable<TValue>) Declaration public EnumerateIEnumerableItems(IEnumerable<TValue> list) Parameters Type Name Description IEnumerable <TValue> list Methods | Improve this Doc View Source Handle(Func<Object, Object>) Declaration public void Handle(Func<object, object> enumerate) Parameters Type Name Description Func < Object , Object > enumerate (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Common.HandleGenericItemsHelper.EnumerateIDictionaryItems-2.html": {
    "href": "api/Microsoft.DocAsCode.Build.Common.HandleGenericItemsHelper.EnumerateIDictionaryItems-2.html",
    "title": "Class HandleGenericItemsHelper.EnumerateIDictionaryItems<TKey, TValue> | DocFX website",
    "keywords": "Class HandleGenericItemsHelper.EnumerateIDictionaryItems<TKey, TValue> Inheritance Object HandleGenericItemsHelper.EnumerateIDictionaryItems<TKey, TValue> Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Common Assembly : Microsoft.DocAsCode.Build.Common.dll Syntax public sealed class EnumerateIDictionaryItems<TKey, TValue> : HandleGenericItemsHelper.IHandleItems Type Parameters Name Description TKey TValue Constructors | Improve this Doc View Source EnumerateIDictionaryItems(IDictionary<TKey, TValue>) Declaration public EnumerateIDictionaryItems(IDictionary<TKey, TValue> dict) Parameters Type Name Description IDictionary <TKey, TValue> dict Methods | Improve this Doc View Source Handle(Func<Object, Object>) Declaration public void Handle(Func<object, object> enumerate) Parameters Type Name Description Func < Object , Object > enumerate (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Common.CompositeModelAttributeHandler.html": {
    "href": "api/Microsoft.DocAsCode.Build.Common.CompositeModelAttributeHandler.html",
    "title": "Class CompositeModelAttributeHandler | DocFX website",
    "keywords": "Class CompositeModelAttributeHandler Inheritance Object CompositeModelAttributeHandler Implements IModelAttributeHandler Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode.Build.Common Assembly : Microsoft.DocAsCode.Build.Common.dll Syntax public class CompositeModelAttributeHandler : IModelAttributeHandler Constructors | Improve this Doc View Source CompositeModelAttributeHandler(IModelAttributeHandler[]) Declaration public CompositeModelAttributeHandler(params IModelAttributeHandler[] handlers) Parameters Type Name Description IModelAttributeHandler [] handlers Methods | Improve this Doc View Source Handle(Object, HandleModelAttributesContext) Declaration public object Handle(object obj, HandleModelAttributesContext context) Parameters Type Name Description Object obj HandleModelAttributesContext context Returns Type Description Object Implements IModelAttributeHandler (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.Build.Common.BuildReferenceDocumentBase.html": {
    "href": "api/Microsoft.DocAsCode.Build.Common.BuildReferenceDocumentBase.html",
    "title": "Class BuildReferenceDocumentBase | DocFX website",
    "keywords": "Class BuildReferenceDocumentBase Base document build step for reference. Inheritance Object BaseDocumentBuildStep BuildReferenceDocumentBase BuildManagedReferenceDocument BuildRestApiDocument BuildSchemaBasedDocument BuildUniversalReferenceDocument Inherited Members BaseDocumentBuildStep.Name BaseDocumentBuildStep.Prebuild(ImmutableList<FileModel>, IHostService) BaseDocumentBuildStep.Postbuild(ImmutableList<FileModel>, IHostService) Namespace : Microsoft.DocAsCode.Build.Common Assembly : Microsoft.DocAsCode.Build.Common.dll Syntax public abstract class BuildReferenceDocumentBase : BaseDocumentBuildStep Properties | Improve this Doc View Source BuildOrder Declaration public override int BuildOrder { get; } Property Value Type Description Int32 Overrides BaseDocumentBuildStep.BuildOrder Methods | Improve this Doc View Source Build(FileModel, IHostService) Declaration public override void Build(FileModel model, IHostService host) Parameters Type Name Description FileModel model IHostService host Overrides BaseDocumentBuildStep.Build(FileModel, IHostService) | Improve this Doc View Source BuildArticle(IHostService, FileModel) Declaration protected abstract void BuildArticle(IHostService host, FileModel model) Parameters Type Name Description IHostService host FileModel model | Improve this Doc View Source BuildArticleCore(IHostService, FileModel, IModelAttributeHandler, HandleModelAttributesContext, Boolean) Declaration protected virtual void BuildArticleCore(IHostService host, FileModel model, IModelAttributeHandler handlers = null, HandleModelAttributesContext handlerContext = null, bool shouldSkipMarkup = false) Parameters Type Name Description IHostService host FileModel model IModelAttributeHandler handlers HandleModelAttributesContext handlerContext Boolean shouldSkipMarkup | Improve this Doc View Source BuildOverwrite(IHostService, FileModel) Declaration protected virtual void BuildOverwrite(IHostService host, FileModel model) Parameters Type Name Description IHostService host FileModel model (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureSelectorBlockToken.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureSelectorBlockToken.html",
    "title": "Class AzureSelectorBlockToken | DocFX website",
    "keywords": "Class AzureSelectorBlockToken Inheritance Object AzureSelectorBlockToken Namespace : Microsoft.DocAsCode.AzureMarkdownRewriters Assembly : Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureSelectorBlockToken : IMarkdownToken Constructors | Improve this Doc View Source AzureSelectorBlockToken(IMarkdownRule, IMarkdownContext, String, String, SourceInfo) Declaration public AzureSelectorBlockToken(IMarkdownRule rule, IMarkdownContext context, string selectorType, string selectorConditions, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context String selectorType String selectorConditions SourceInfo sourceInfo Properties | Improve this Doc View Source Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext | Improve this Doc View Source Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule | Improve this Doc View Source SelectorConditions Declaration public string SelectorConditions { get; } Property Value Type Description String | Improve this Doc View Source SelectorType Declaration public string SelectorType { get; } Property Value Type Description String | Improve this Doc View Source SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureSelectorBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureSelectorBlockRule.html",
    "title": "Class AzureSelectorBlockRule | DocFX website",
    "keywords": "Class AzureSelectorBlockRule Inheritance Object AzureSelectorBlockRule Namespace : Microsoft.DocAsCode.AzureMarkdownRewriters Assembly : Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureSelectorBlockRule : IMarkdownRule Properties | Improve this Doc View Source AzureNoteRegex Declaration public virtual Regex AzureNoteRegex { get; } Property Value Type Description Regex | Improve this Doc View Source Name Declaration public virtual string Name { get; } Property Value Type Description String Methods | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public virtual IMarkdownToken TryMatch(IMarkdownParser engine, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser engine IMarkdownParsingContext context Returns Type Description IMarkdownToken (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureMigrationIncludeBlockToken.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureMigrationIncludeBlockToken.html",
    "title": "Class AzureMigrationIncludeBlockToken | DocFX website",
    "keywords": "Class AzureMigrationIncludeBlockToken Inheritance Object AzureMigrationIncludeBasicToken AzureMigrationIncludeBlockToken Inherited Members AzureMigrationIncludeBasicToken.Rule AzureMigrationIncludeBasicToken.Context AzureMigrationIncludeBasicToken.Name AzureMigrationIncludeBasicToken.Src AzureMigrationIncludeBasicToken.Title AzureMigrationIncludeBasicToken.SourceInfo Namespace : Microsoft.DocAsCode.AzureMarkdownRewriters Assembly : Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureMigrationIncludeBlockToken : AzureMigrationIncludeBasicToken Constructors | Improve this Doc View Source AzureMigrationIncludeBlockToken(IMarkdownRule, IMarkdownContext, String, String, String, SourceInfo) Declaration public AzureMigrationIncludeBlockToken(IMarkdownRule rule, IMarkdownContext context, string name, string src, string title, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context String name String src String title SourceInfo sourceInfo (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureMigrationIncludeBlockRule.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureMigrationIncludeBlockRule.html",
    "title": "Class AzureMigrationIncludeBlockRule | DocFX website",
    "keywords": "Class AzureMigrationIncludeBlockRule Inheritance Object AzureMigrationIncludeBlockRule Namespace : Microsoft.DocAsCode.AzureMarkdownRewriters Assembly : Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureMigrationIncludeBlockRule : IMarkdownRule Properties | Improve this Doc View Source AzureIncludeRegex Declaration public virtual Regex AzureIncludeRegex { get; } Property Value Type Description Regex | Improve this Doc View Source Name Declaration public virtual string Name { get; } Property Value Type Description String Methods | Improve this Doc View Source TryMatch(IMarkdownParser, IMarkdownParsingContext) Declaration public IMarkdownToken TryMatch(IMarkdownParser engine, IMarkdownParsingContext context) Parameters Type Name Description IMarkdownParser engine IMarkdownParsingContext context Returns Type Description IMarkdownToken (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureMigrationIncludeBasicToken.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureMigrationIncludeBasicToken.html",
    "title": "Class AzureMigrationIncludeBasicToken | DocFX website",
    "keywords": "Class AzureMigrationIncludeBasicToken Inheritance Object AzureMigrationIncludeBasicToken AzureMigrationIncludeBlockToken AzureMigrationIncludeInlineToken Namespace : Microsoft.DocAsCode.AzureMarkdownRewriters Assembly : Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public abstract class AzureMigrationIncludeBasicToken : IMarkdownToken Constructors | Improve this Doc View Source AzureMigrationIncludeBasicToken(IMarkdownRule, IMarkdownContext, String, String, String, SourceInfo) Declaration protected AzureMigrationIncludeBasicToken(IMarkdownRule rule, IMarkdownContext context, string name, string src, string title, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context String name String src String title SourceInfo sourceInfo Properties | Improve this Doc View Source Context Declaration public IMarkdownContext Context { get; } Property Value Type Description IMarkdownContext | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description String | Improve this Doc View Source Rule Declaration public IMarkdownRule Rule { get; } Property Value Type Description IMarkdownRule | Improve this Doc View Source SourceInfo Declaration public SourceInfo SourceInfo { get; } Property Value Type Description SourceInfo | Improve this Doc View Source Src Declaration public string Src { get; } Property Value Type Description String | Improve this Doc View Source Title Declaration public string Title { get; } Property Value Type Description String (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureIncludeBlockToken.html": {
    "href": "api/Microsoft.DocAsCode.AzureMarkdownRewriters.AzureIncludeBlockToken.html",
    "title": "Class AzureIncludeBlockToken | DocFX website",
    "keywords": "Class AzureIncludeBlockToken Inheritance Object AzureIncludeBasicToken AzureIncludeBlockToken Implements IMarkdownRewritable < AzureIncludeBlockToken > Inherited Members AzureIncludeBasicToken.Rule AzureIncludeBasicToken.Context AzureIncludeBasicToken.Src AzureIncludeBasicToken.Name AzureIncludeBasicToken.Title AzureIncludeBasicToken.Raw AzureIncludeBasicToken.SourceInfo AzureIncludeBasicToken.Tokens Namespace : Microsoft.DocAsCode.AzureMarkdownRewriters Assembly : Microsoft.DocAsCode.AzureMarkdownRewriters.dll Syntax public class AzureIncludeBlockToken : AzureIncludeBasicToken, IMarkdownRewritable<AzureIncludeBlockToken> Constructors | Improve this Doc View Source AzureIncludeBlockToken(IMarkdownRule, IMarkdownContext, String, String, String, ImmutableArray<IMarkdownToken>, String, SourceInfo) Declaration public AzureIncludeBlockToken(IMarkdownRule rule, IMarkdownContext context, string src, string name, string title, ImmutableArray<IMarkdownToken> tokens, string raw, SourceInfo sourceInfo) Parameters Type Name Description IMarkdownRule rule IMarkdownContext context String src String name String title ImmutableArray < IMarkdownToken > tokens String raw SourceInfo sourceInfo Methods | Improve this Doc View Source Rewrite(IMarkdownRewriteEngine) Declaration public AzureIncludeBlockToken Rewrite(IMarkdownRewriteEngine rewriteEngine) Parameters Type Name Description IMarkdownRewriteEngine rewriteEngine Returns Type Description AzureIncludeBlockToken Implements IMarkdownRewritable<> (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Microsoft.DocAsCode.AssemblyLicenseAttribute.html": {
    "href": "api/Microsoft.DocAsCode.AssemblyLicenseAttribute.html",
    "title": "Class AssemblyLicenseAttribute | DocFX website",
    "keywords": "Class AssemblyLicenseAttribute Inheritance Object Attribute CustomAssemblyTextAttribute AssemblyLicenseAttribute Implements _Attribute Inherited Members CustomAssemblyTextAttribute.Value Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.Equals(Object) Attribute.GetHashCode() Attribute.Match(Object) Attribute.IsDefaultAttribute() Attribute._Attribute.GetTypeInfoCount(UInt32) Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr) Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr) Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr) Attribute.TypeId Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : Microsoft.DocAsCode Assembly : docfx.dll Syntax public class AssemblyLicenseAttribute : CustomAssemblyTextAttribute, _Attribute Constructors | Improve this Doc View Source AssemblyLicenseAttribute(String[]) Declaration public AssemblyLicenseAttribute(params string[] lines) Parameters Type Name Description String [] lines Implements System.Runtime.InteropServices._Attribute (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://docfx-github.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  }
}